{
  "version": 3,
  "sources": ["../../node_modules/localforage/dist/localforage.js", "../../node_modules/ajv/lib/compile/codegen/code.ts", "../../node_modules/ajv/lib/compile/codegen/scope.ts", "../../node_modules/ajv/lib/compile/codegen/index.ts", "../../node_modules/ajv/lib/compile/util.ts", "../../node_modules/ajv/lib/compile/names.ts", "../../node_modules/ajv/lib/compile/errors.ts", "../../node_modules/ajv/lib/compile/validate/boolSchema.ts", "../../node_modules/ajv/lib/compile/rules.ts", "../../node_modules/ajv/lib/compile/validate/applicability.ts", "../../node_modules/ajv/lib/compile/validate/dataType.ts", "../../node_modules/ajv/lib/compile/validate/defaults.ts", "../../node_modules/ajv/lib/vocabularies/code.ts", "../../node_modules/ajv/lib/compile/validate/keyword.ts", "../../node_modules/ajv/lib/compile/validate/subschema.ts", "../../node_modules/fast-deep-equal/index.js", "../../node_modules/json-schema-traverse/index.js", "../../node_modules/ajv/lib/compile/resolve.ts", "../../node_modules/ajv/lib/compile/validate/index.ts", "../../node_modules/ajv/lib/runtime/validation_error.ts", "../../node_modules/ajv/lib/compile/ref_error.ts", "../../node_modules/ajv/lib/compile/index.ts", "../../node_modules/uri-js/src/index.ts", "../../node_modules/uri-js/src/schemes/urn-uuid.ts", "../../node_modules/uri-js/src/schemes/urn.ts", "../../node_modules/uri-js/src/schemes/mailto.ts", "../../node_modules/uri-js/src/schemes/wss.ts", "../../node_modules/uri-js/src/schemes/ws.ts", "../../node_modules/uri-js/src/schemes/https.ts", "../../node_modules/uri-js/src/schemes/http.ts", "../../node_modules/uri-js/src/uri.ts", "../../node_modules/uri-js/node_modules/punycode/punycode.es6.js", "../../node_modules/uri-js/src/regexps-iri.ts", "../../node_modules/uri-js/src/regexps-uri.ts", "../../node_modules/uri-js/src/util.ts", "../../node_modules/ajv/lib/runtime/uri.ts", "../../node_modules/ajv/lib/core.ts", "../../node_modules/ajv/lib/vocabularies/core/id.ts", "../../node_modules/ajv/lib/vocabularies/core/ref.ts", "../../node_modules/ajv/lib/vocabularies/core/index.ts", "../../node_modules/ajv/lib/vocabularies/validation/limitNumber.ts", "../../node_modules/ajv/lib/vocabularies/validation/multipleOf.ts", "../../node_modules/ajv/lib/runtime/ucs2length.ts", "../../node_modules/ajv/lib/vocabularies/validation/limitLength.ts", "../../node_modules/ajv/lib/vocabularies/validation/pattern.ts", "../../node_modules/ajv/lib/vocabularies/validation/limitProperties.ts", "../../node_modules/ajv/lib/vocabularies/validation/required.ts", "../../node_modules/ajv/lib/vocabularies/validation/limitItems.ts", "../../node_modules/ajv/lib/runtime/equal.ts", "../../node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts", "../../node_modules/ajv/lib/vocabularies/validation/const.ts", "../../node_modules/ajv/lib/vocabularies/validation/enum.ts", "../../node_modules/ajv/lib/vocabularies/validation/index.ts", "../../node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts", "../../node_modules/ajv/lib/vocabularies/applicator/items.ts", "../../node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts", "../../node_modules/ajv/lib/vocabularies/applicator/items2020.ts", "../../node_modules/ajv/lib/vocabularies/applicator/contains.ts", "../../node_modules/ajv/lib/vocabularies/applicator/dependencies.ts", "../../node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts", "../../node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts", "../../node_modules/ajv/lib/vocabularies/applicator/properties.ts", "../../node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts", "../../node_modules/ajv/lib/vocabularies/applicator/not.ts", "../../node_modules/ajv/lib/vocabularies/applicator/anyOf.ts", "../../node_modules/ajv/lib/vocabularies/applicator/oneOf.ts", "../../node_modules/ajv/lib/vocabularies/applicator/allOf.ts", "../../node_modules/ajv/lib/vocabularies/applicator/if.ts", "../../node_modules/ajv/lib/vocabularies/applicator/thenElse.ts", "../../node_modules/ajv/lib/vocabularies/applicator/index.ts", "../../node_modules/ajv/lib/vocabularies/format/format.ts", "../../node_modules/ajv/lib/vocabularies/format/index.ts", "../../node_modules/ajv/lib/vocabularies/metadata.ts", "../../node_modules/ajv/lib/vocabularies/draft7.ts", "../../node_modules/ajv/lib/vocabularies/discriminator/types.ts", "../../node_modules/ajv/lib/vocabularies/discriminator/index.ts", "../../node_modules/ajv/lib/ajv.ts", "../../src/utils/CustomError.ts", "../../src/utils/helpers.ts", "../../src/utils/EventEmitter.ts", "../../src/game/mods.ts", "../../src/utils/Value.ts", "../../src/game/Ailments.ts", "../../src/game/Enemy.ts", "../../src/game/Entity.ts", "../../src/game/calc/calcDamage.ts", "../../src/game/calc/calcMod.ts", "../../src/game/Statistics.ts", "../../src/game/Player.ts", "../../src/utils/Loop.ts", "../../src/utils/saveManager.ts", "../../src/utils/Observers.ts", "../../src/game/components/Component.ts", "../../src/game/components/skills/skillSlots.ts", "../../src/game/components/skills/SkillViewer.ts", "../../src/game/components/skills/Skills.ts", "../../src/game/components/items/crafting.ts", "../../src/game/components/items/CraftPresets.ts", "../../src/game/components/items/Items.ts", "../../src/game/components/Passives.ts", "../../src/game/Task.ts", "../../src/game/components/Achievements.ts", "../../src/game/components/Missions.ts", "../../src/game/components/Minions.ts", "../../src/game/components/componentHandler.ts", "../../src/utils/alert.ts", "../../src/game/Game.ts", "../../src/utils/validateConfig.ts", "../../src/Home.ts", "../../src/main.ts"],
  "sourcesContent": ["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n", "export abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n", "import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n", "import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(private readonly varKind: Name, private readonly name: Name, private rhs?: SafeExpr) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(readonly lhs: Code, public rhs: SafeExpr, private readonly sideEffects?: boolean) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(lhs: Code, private readonly op: Code, rhs: SafeExpr, sideEffects?: boolean) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(private condition: Code | boolean, nodes?: ChildNode[]) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(public name: Name, public args: Code, public async?: boolean) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n", "import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n", "import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n", "import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n", "import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n", "import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = typeof _jsonTypes[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n", "import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n", "import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n", "import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n", "import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n", "import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n", "import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n", "import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponents} from \"uri-js\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponents): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let baseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") baseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = baseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(baseId ? _resolve(baseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n", "import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  it.dataTypes = it.dataTypes.filter((t) => includesType(types, t))\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n", "import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n", "import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n", "import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport * as URI from \"uri-js\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URI.URIComponents,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n", "import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;", "/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n", "import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n", "import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n", "export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}", "import * as uri from \"uri-js\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n", "export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n", "import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n", "// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n", "import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n", "import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n", "import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n", "import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n", "import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n", "import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n", "import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch?.$ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nclass Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n", "export default class CustomError extends Error {\n    constructor(msg: string) {\n        super(msg);\n        // Object.setPrototypeOf(this, CustomError.prototype);\n    }\n}", "import CustomError from \"./CustomError\";\n\ndeclare global {\n    interface HTMLElement {\n        querySelectorForce<E extends Element = Element>(selectors: string): E;\n    }\n}\n\nHTMLElement.prototype.querySelectorForce = function <E extends Element = Element>(this: HTMLElement, selectors: string) {\n    const element = this.querySelector<E>(selectors);\n    if (!element) {\n        throw new CustomError(`HTMLElement with selectors ${selectors} could not be found!`);\n    }\n    return element;\n};\n\nexport const hasFlags = (a: number, b: number) => (a & b) === b;\nexport const hasAnyFlag = (a: number, ...b: number[]) => b.some(x => (a & x) === x);\nexport const avg = (a: number, b: number) => (a + b) / 2;\nexport const randomRange = (min: number, max: number) => Math.random() * (max - min) + min;\nexport const randomRangeInt = (min: number, max: number) => Math.floor(randomRange(min, max));\nexport const clamp = (value: number, min: number, max: number) => Math.max(min, Math.min(value, max));\nexport const lerp = (a: number, b: number, t: number) => a + (b - a) * t;\nexport const invLerp = (a: number, b: number, v: number) => (v - a) / (b - a);\nexport const remap = (iMin: number, iMax: number, oMin: number, oMax: number, v: number) => lerp(oMin, oMax, invLerp(iMin, iMax, v));\nexport const isLocalHost = () => location.hostname === 'localhost' || location.hostname === '127.0.0.1';\n\nexport function querySelector<T extends HTMLElement>(selectors: string) {\n    const element = document.querySelector<T>(selectors);\n    if (!element) {\n        throw new CustomError(`HTMLElement with selectors ${selectors} could not be found!`);\n    }\n    return element;\n}\n\nexport function registerMutationObserver(parentElement: HTMLElement, options: MutationObserverInit, callback: (targetElement: HTMLElement, type: 'added' | 'removed' | 'selected') => void) {\n    const observer = new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            const target = mutation.target as HTMLElement;\n            for (const node of mutation.addedNodes) {\n                if (node instanceof Element) {\n                    callback(target, 'added');\n                }\n            }\n            for (const node of mutation.removedNodes) {\n                if (node instanceof Element) {\n                    callback(target, 'removed');\n                }\n            }\n            if (mutation.attributeName === 'class') {\n                if (target.classList.contains('selected')) {\n                    callback(target, 'selected');\n                }\n            }\n        }\n    });\n    Array.from(parentElement.querySelectorAll<HTMLElement>('[data-tab-target]')).forEach(x => x.addEventListener('click', () => x.classList.add('selected')));\n    observer.observe(parentElement, options);\n    return observer;\n}\n\n/**\n * @description listens for changes to all children queried with {@link queryString}\n */\nexport function registerTabs(btnsParent: HTMLElement, contentsParent: HTMLElement, callback?: (target: HTMLElement) => void, queryString = '[data-tab-target]') {\n    const observer = new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            const target = mutation.target as HTMLElement;\n            for (const node of mutation.addedNodes) {\n                if (node instanceof HTMLElement) {\n                    addBtn(node);\n                }\n            }\n            if (mutation.attributeName === 'class') {\n                if (target.classList.contains('selected')) {\n                    const btns = btnsParent.querySelectorAll<HTMLElement>(queryString);\n                    btns.forEach(x => x.classList.toggle('selected', x === target));\n                    if (contentsParent) {\n                        const contents = contentsParent.querySelectorAll<HTMLElement>(':scope > [data-tab-content]') || [];\n                        const targetAttr = target.getAttribute('data-tab-target');\n                        contents.forEach(x => x.classList.toggle('hidden', x.getAttribute('data-tab-content') !== targetAttr));\n                    }\n                    callback?.(target);\n                }\n            }\n        }\n    });\n    const addBtn = (btn: HTMLElement) => {\n        btn.addEventListener('click', () => {\n            btn.classList.add('selected');\n        });\n    };\n    btnsParent.querySelectorAll<HTMLElement>(queryString).forEach(x => addBtn(x));\n    observer.observe(btnsParent, { attributes: true, subtree: true, childList: true });\n    return observer;\n}\n\nexport function generateTime(startTime = 0) {\n    const ms = Date.now() - startTime;\n    const days = Math.floor(ms / 86400000);\n    const hours = (Math.floor(ms / 3600000) % 24);\n    const mins = (Math.floor(ms / 60000) % 60).toFixed();\n    return {\n        days, hours, mins, ms\n    };\n}\n\nexport function highlightHTMLElement(element: HTMLElement, trigger: 'click' | 'mouseover', force = false) {\n    const attr = 'data-highlight-notification';\n    if (element.classList.contains('selected') && !force) {\n        return;\n    }\n    element.setAttribute(attr, '');\n    const listener = () => {\n        element.removeAttribute(attr);\n        element.removeEventListener(trigger, listener);\n    };\n    element.addEventListener(trigger, listener);\n}\n", "type Callback<T> = (args: T) => void;\ninterface CallbackOptions {\n    once?: boolean;\n}\ntype Listener<T> = { callback: Callback<T>, opts?: CallbackOptions }\nexport default class EventEmitter<T> {\n    private readonly listeners = new Map<Callback<T>, Listener<T>>;\n\n    listen(callback: Callback<T>, opts?: CallbackOptions) {\n        const instance = { callback, opts };\n        this.listeners.set(callback, instance);\n    }\n    removeListener(callback: Callback<T>) {\n        this.listeners.delete(callback);\n    }\n    removeAllListeners() {\n        this.listeners.clear();\n    }\n\n    invoke(args: T) {\n        this.listeners.forEach(x => {\n            x.callback(args);\n        });\n        for (const [key, value] of this.listeners.entries()) {\n            if (value.opts?.once) {\n                this.listeners.delete(key);\n            }\n        }\n    }\n}", "import EventEmitter from \"@utils/EventEmitter\";\n\n//#region Types\nexport type ModifierTag =\n    | 'Global'\n    | 'Gold'\n    | 'Damage'\n    | 'Attack'\n    | 'Physical'\n    | 'Elemental'\n    | 'Speed'\n    | 'Mana'\n    | 'Critical'\n    | 'Ailment'\n    | 'Bleed'\n    | 'Burn'\n    | 'Duration'\n    | 'Skill'\n    | 'Minion';\nexport type StatModifierValueType = 'Base' | 'Inc' | 'More';\n//#region Mod Description\nexport type ModDescription = typeof modTemplates[number]['desc'];\n//#endregion Mod Description\n\n//#region Stat Name\nexport type StatName =\n    | 'GoldGeneration'\n    | DamageStatName\n    | 'AttackManaCost'\n    | 'AttackSpeed'\n    | 'HitChance'\n    | 'CritChance'\n    | 'CritMulti'\n    | 'ManaRegen'\n    | 'MaxMana'\n    | 'Gold'\n    | 'AilmentStack'\n    | 'BleedChance'\n    | 'BurnChance'\n    | 'Duration'\n    | 'MinionCount';\n//#endregion Stat Name\n\n//#region Damage Stat Name\ntype DamageStatName =\n    'BaseDamageMultiplier' |\n    'Damage' |\n    'MinDamage' |\n    'MaxDamage' |\n    'ElementalConvertedToPhysical' |\n    'ChaosConvertedToPhysical' |\n    'ChaosConvertedToElemental' |\n    'ChaosConvertedToChaos' | ConversionStatName | GainAsStatName;\n\nexport type ConversionStatName = 'ElementalConvertedToPhysical' | 'ChaosConvertedToPhysical' | 'ChaosConvertedToElemental';\nexport type GainAsStatName = 'ElementalGainAsPhysical' | 'ChaosGainAsElemental' | 'ChaosGainAsPhysical';\n//#endregion Damage Stat Name\n\n//#endregion Types\n\ninterface ModTemplateStats {\n    readonly name: StatName;\n    readonly valueType: StatModifierValueType;\n    readonly flags?: number;\n    readonly keywords?: number;\n}\ninterface ModTemplate {\n    readonly desc: string;\n    readonly tags: ReadonlyArray<ModifierTag>,\n    readonly stats: ReadonlyArray<ModTemplateStats>;\n}\n\ninterface StatModifierParams {\n    name: StatName;\n    valueType: StatModifierValueType;\n    value: number;\n    flags?: number;\n    min?: number;\n    max?: number;\n    source?: string;\n    keywords?: number;\n}\n\nexport enum StatModifierFlag {\n    None = 0,\n    Attack = 1 << 0,\n    Physical = 1 << 1,\n    Elemental = 1 << 2,\n    Chaos = 1 << 3,\n    Skill = 1 << 4,\n    Bleed = 1 << 5,\n    Burn = 1 << 6\n}\n\nexport enum KeywordModifierFlag {\n    None = 0,\n    Global = 1 << 0,\n    Minion = 1 << 1\n}\n\nexport const modTemplates: ReadonlyArray<ModTemplate> = [\n    { desc: '#% Increased Physical Damage', tags: ['Damage', 'Physical'], stats: [{ name: 'Damage', valueType: 'Inc', flags: StatModifierFlag.Physical }] },\n    { desc: '#% Increased Elemental Damage', tags: ['Damage', 'Elemental'], stats: [{ name: 'Damage', valueType: 'Inc', flags: StatModifierFlag.Elemental }] },\n    { desc: '#% More Physical Damage', tags: ['Damage', 'Physical'], stats: [{ name: 'Damage', valueType: 'More', flags: StatModifierFlag.Physical }] },\n    { desc: '#% More Elemental Damage', tags: ['Damage', 'Elemental'], stats: [{ name: 'Damage', valueType: 'More', flags: StatModifierFlag.Elemental }] },\n    { desc: '#% More Bleed Damage', tags: ['Damage', 'Bleed', 'Physical', 'Ailment'], stats: [{ name: 'Damage', valueType: 'More', flags: StatModifierFlag.Physical | StatModifierFlag.Bleed }], },\n    { desc: '#% More Burn Damage', tags: ['Damage', 'Burn', 'Elemental', 'Ailment'], stats: [{ name: 'Damage', valueType: 'More', flags: StatModifierFlag.Elemental | StatModifierFlag.Burn }], },\n    { desc: '#% More Damage', tags: ['Damage'], stats: [{ name: 'Damage', valueType: 'More' }] },\n    { desc: 'Adds # To # Physical Damage', tags: ['Damage', 'Physical'], stats: [{ name: 'MinDamage', valueType: 'Base', flags: StatModifierFlag.Physical }, { name: 'MaxDamage', valueType: 'Base', flags: StatModifierFlag.Physical }] },\n    { desc: 'Adds # To # Elemental Damage', tags: ['Damage', 'Elemental'], stats: [{ name: 'MinDamage', valueType: 'Base', flags: StatModifierFlag.Elemental }, { name: 'MaxDamage', valueType: 'Base', flags: StatModifierFlag.Elemental }] },\n    { desc: '#% Increased Bleed Damage', tags: ['Damage', 'Bleed', 'Physical', 'Ailment'], stats: [{ name: 'Damage', valueType: 'Inc', flags: StatModifierFlag.Physical | StatModifierFlag.Bleed }], },\n    { desc: '#% Increased Burn Damage', tags: ['Damage', 'Burn', 'Elemental', 'Ailment'], stats: [{ name: 'Damage', valueType: 'Inc', flags: StatModifierFlag.Elemental | StatModifierFlag.Burn }], },\n    { desc: '#% Increased Attack Speed', tags: ['Attack', 'Speed'], stats: [{ name: 'AttackSpeed', valueType: 'Inc' }] },\n    { desc: '#% Increased Maximum Mana', tags: ['Mana'], stats: [{ name: 'MaxMana', valueType: 'Inc' }] },\n    { desc: '+# Maximum Mana', tags: ['Mana'], stats: [{ name: 'MaxMana', valueType: 'Base' }] },\n    { desc: '+# Mana Regeneration', tags: ['Mana'], stats: [{ name: 'ManaRegen', valueType: 'Base' }] },\n    { desc: '+# Gold Generation', tags: ['Gold', 'Global'], stats: [{ name: 'GoldGeneration', valueType: 'Base', keywords: KeywordModifierFlag.Global }] },\n    { desc: '#% Increased Gold Generation', tags: ['Gold', 'Global'], stats: [{ name: 'GoldGeneration', valueType: 'Inc', keywords: KeywordModifierFlag.Global }], },\n    { desc: '#% Increased Skill Duration', tags: ['Skill'], stats: [{ name: 'Duration', valueType: 'Inc', flags: StatModifierFlag.Skill }], },\n    { desc: '+#% Chance To Bleed', tags: ['Attack', 'Bleed', 'Physical', 'Ailment'], stats: [{ name: 'BleedChance', valueType: 'Base', flags: StatModifierFlag.Bleed }], },\n    { desc: '+#% Chance To Burn', tags: ['Attack', 'Burn', 'Elemental', 'Ailment'], stats: [{ name: 'BurnChance', valueType: 'Base', flags: StatModifierFlag.Burn }], },\n    { desc: '# Bleed Duration', tags: ['Duration', 'Bleed', 'Ailment', \"Global\"], stats: [{ name: 'Duration', valueType: 'Base', flags: StatModifierFlag.Bleed, keywords: KeywordModifierFlag.Global }], },\n    { desc: '# Burn Duration', tags: ['Duration', 'Burn', 'Ailment'], stats: [{ name: 'Duration', valueType: 'Base', flags: StatModifierFlag.Burn }], },\n    { desc: '#% Increased Bleed Duration', tags: ['Duration', 'Bleed', 'Ailment', 'Global'], stats: [{ name: 'Duration', valueType: 'Inc', flags: StatModifierFlag.Bleed, keywords: KeywordModifierFlag.Global }], },\n    { desc: '#% Increased Burn Duration', tags: ['Duration', 'Burn', 'Ailment', 'Global'], stats: [{ name: 'Duration', valueType: 'Inc', flags: StatModifierFlag.Burn, keywords: KeywordModifierFlag.Global }], },\n    { desc: '+# Maximum Bleed Stack', tags: ['Bleed', 'Ailment', 'Global'], stats: [{ name: 'AilmentStack', valueType: 'Base', flags: StatModifierFlag.Bleed, keywords: KeywordModifierFlag.Global }], },\n    { desc: '+# Maximum Burn Stack', tags: ['Burn', 'Ailment', 'Global'], stats: [{ name: 'AilmentStack', valueType: 'Base', flags: StatModifierFlag.Burn, keywords: KeywordModifierFlag.Global }], },\n    { desc: '+#% Critical Hit Chance', tags: ['Critical', 'Attack'], stats: [{ name: 'CritChance', valueType: 'Base' }] },\n    { desc: '+#% Critical Hit Multiplier', tags: ['Critical', 'Attack'], stats: [{ name: 'CritMulti', valueType: 'Base' }] },\n    { desc: '#% More Attack Speed', tags: ['Attack', 'Speed'], stats: [{ name: 'AttackSpeed', valueType: 'More' }] },\n    { desc: '+#% Hit Chance', tags: ['Attack'], stats: [{ name: 'HitChance', valueType: 'Base' }] },\n    { desc: '+# Maximum Minions', tags: ['Minion', 'Global'], stats: [{ name: 'MinionCount', valueType: 'Base', keywords: KeywordModifierFlag.Global }] },\n    { desc: '#% Increased Minion Damage', tags: ['Minion', 'Damage'], stats: [{ name: 'Damage', valueType: 'Inc', keywords: KeywordModifierFlag.Minion }] },\n    { desc: '#% More Minion Damage', tags: ['Minion', 'Damage'], stats: [{ name: 'Damage', valueType: 'More', keywords: KeywordModifierFlag.Minion }] },\n];\n\nexport class Modifier {\n    readonly text: string;\n    readonly template: ModTemplate;\n    readonly stats: StatModifier[] = [];\n    constructor(text: string) {\n\n        this.text = text;\n\n        const parsedData = Modifier.parseText(text);\n        this.template = parsedData.template;\n        this.stats = parsedData.stats;\n    }\n\n    get tags() {\n        return this.template.tags;\n    }\n\n    get templateDesc() {\n        return this.template.desc;\n    }\n\n    get desc() {\n        return Modifier.parseDescription(this.template.desc, this.stats);\n    }\n\n    static compare(a: Modifier, b: Modifier) {\n        return a.compare(b);\n    }\n    static sort(a: Modifier, b: Modifier) {\n        return a.sort(b);\n    }\n\n    static parseText(text: string) {\n        const match = [...text.matchAll(/{(?<v1>\\d+(\\.\\d+)?)(-(?<v2>\\d+(\\.\\d+)?))?\\}/g)];\n        const desc = text.replace(/{[^}]+}/g, '#');\n        const template = modTemplates.find(x => x.desc === desc);\n        if (!template) {\n            throw Error(`Failed to find mod template. Invalid mod description: ${text}`);\n        }\n        const stats: StatModifier[] = [];\n        for (const [index, statTemplate] of template.stats.entries()) {\n            const matchValue = match[index];\n            if (!matchValue || !matchValue.groups) {\n                throw Error('invalid modifier');\n            }\n            const { v1, v2 } = matchValue.groups;\n            if (!v1) {\n                throw Error('invalid modifier');\n            }\n            const min = parseFloat(v1);\n            const max = v2 ? parseFloat(v2) : min;\n            const value = min;\n            stats.push(new StatModifier({\n                name: statTemplate.name,\n                valueType: statTemplate.valueType,\n                value,\n                min,\n                max,\n                flags: statTemplate.flags || 0,\n                keywords: statTemplate.keywords\n            }));\n        }\n        return { template, stats };\n    }\n\n    static parseDescription(desc: ModTemplate['desc'], stats: StatModifier[]) {\n        let i = 0;\n        return desc.replace(/#+/g, (x) => {\n            const stat = stats[i++];\n            if (!stat) {\n                throw Error('invalid mod description');\n            }\n            const value = stat.value.toFixed(x.length - 1) || '#';\n            return value;\n        });\n    }\n\n    sort(other: Modifier) {\n        return modTemplates.findIndex(x => x.desc === this.templateDesc) - modTemplates.findIndex(x => x.desc === other.templateDesc);\n    }\n\n    compare(other: Modifier) {\n        return this.templateDesc === other.templateDesc;\n    }\n\n    copy() {\n        return new Modifier(this.text);\n    }\n}\n\nexport class StatModifier {\n\n    readonly name: StatName;\n    readonly valueType: StatModifierValueType;\n    value: number;\n    readonly min: number;\n    readonly max: number;\n    source?: string;\n    readonly flags: StatModifierFlag;\n    readonly keywords: KeywordModifierFlag;\n    constructor(data: StatModifierParams) {\n        this.name = data.name;\n        this.valueType = data.valueType;\n        this.value = data.value;\n        this.flags = data.flags || 0;\n        this.min = data.min || this.value;\n        this.max = data.max || this.value || this.min;\n        this.source = data.source;\n        this.keywords = data.keywords || 0;\n    }\n\n    randomizeValue() {\n        this.value = Math.random() * (this.max - this.min) + this.min;\n    }\n\n    copy() {\n        return new StatModifier(this);\n    }\n}\n\nexport class ModDB {\n    private _modList: StatModifier[] = [];\n    public readonly onChange = new EventEmitter();\n    constructor() {\n        this._modList = [];\n    }\n\n    get modList() {\n        return this._modList;\n    }\n\n    add(source: string, ...statMods: StatModifier[]) {\n        this.modList.push(...statMods.map(x => {\n            const copy = x.copy();\n            copy.source = source;\n            Object.freeze(copy);\n            return copy;\n        }));\n        this.onChange.invoke(undefined);\n    }\n\n    removeBySource(source: string) {\n        this._modList = this.modList.filter(x => x.source !== source);\n        this.onChange.invoke(undefined);\n    }\n\n    clear() {\n        this._modList = [];\n        this.onChange.removeAllListeners();\n    }\n}", "import EventEmitter from \"./EventEmitter\";\n\ntype EventType = 'change' | 'set' | 'add' | 'subtract';\ntype Callback = (v: number) => void;\n\nexport default class Value {\n    private value: number;\n    private readonly listeners = new Map<EventType, EventEmitter<number>>([\n        ['change', new EventEmitter<number>()],\n        ['set', new EventEmitter<number>()],\n        ['add', new EventEmitter<number>()],\n        ['subtract', new EventEmitter<number>()],\n    ]);\n    constructor(public readonly defaultValue: number) {\n        this.value = defaultValue;\n    }\n\n    set(v: number) {\n        this.value = v;\n        this.listeners.get('set')?.invoke(this.value);\n        this.listeners.get('change')?.invoke(this.value);\n    }\n    get() {\n        return this.value;\n    }\n    add(v: number) {\n        this.value += v;\n        this.listeners.get('add')?.invoke(this.value);\n        this.listeners.get('change')?.invoke(this.value);\n    }\n    subtract(v: number) {\n        this.value -= v;\n        this.listeners.get('subtract')?.invoke(this.value);\n        this.listeners.get('change')?.invoke(this.value);\n    }\n\n    reset() {\n        this.value = this.defaultValue;\n        this.listeners.forEach(x => x.removeAllListeners());\n    }\n\n    addListener(type: EventType, callback: Callback) {\n        this.listeners.get(type)?.listen(callback);\n    }\n\n    removeListener(type: EventType, callback: Callback) {\n        this.listeners.get(type)?.removeListener(callback);\n    }\n\n    registerCallback(targetValue: number, callback: (v: number) => void) {\n        if (targetValue <= this.value) {\n            callback(this.value);\n            return;\n        }\n        const listener = () => {\n            if (this.value >= targetValue) {\n                callback(this.value);\n                this.removeListener('change', listener);\n            }\n        };\n        this.addListener('change', listener);\n    }\n}", "import { querySelector } from \"@src/utils/helpers\";\nimport { calcAilmentDamage, calcAilmentDuration } from \"./calc/calcDamage\";\nimport Enemy from \"./Enemy\";\nimport type Entity from \"./Entity\";\nimport Game from \"./Game\";\n\nexport type AilmentType = 'Bleed' | 'Burn';\nexport interface AilmentData {\n    type: AilmentType;\n    duration: number;\n    source: Entity;\n    damageFac?: number;\n    detachCallback?: (instance: AilmentInstance) => void;\n}\n\ninterface BleedInstance extends AilmentInstance {\n    type: 'Bleed';\n    damage: number;\n    damageFac: number;\n}\n\nexport interface AilmentInstance extends AilmentData {\n    duration: number;\n    damage?: number;\n    time: number;\n}\n\nconst isBleedInstance = (instance: AilmentInstance): instance is BleedInstance => instance.type === \"Bleed\";\n\nexport default class Ailments {\n    private tickId?: string;\n    private readonly sources = new Map<Entity, AilmentInstance[]>;\n    private readonly ailmentListContainer = querySelector('.p-combat [data-ailment-list]');\n    constructor() {\n        this.updateInstances = this.updateInstances.bind(this);\n    }\n\n    init() {\n        this.ailmentListContainer.replaceChildren();\n        Game.visiblityObserver.registerLoop(querySelector('.p-game .p-combat'), visible => {\n            if (visible) {\n                this.updateElements();\n            }\n        });\n    }\n\n    addAilments(source: Entity, ...ailments: AilmentData[]) {\n        if (!this.sources.has(source)) {\n            this.sources.set(source, []);\n            source.onStatsUpdate.listen(this.updateInstances);\n        }\n        const instances = this.sources.get(source) || this.sources.set(source, []).get(source);\n        if (!instances) {\n            return;\n        }\n        for (const ailment of ailments) {\n            const hasAilmentType = [...this.sources.values()].some(x => x.some(y => y.type === ailment.type));\n            if (!hasAilmentType) {\n                this.createElement(ailment.type);\n            }\n            instances?.push({ ...ailment, time: ailment.duration });\n        }\n        this.updateInstances(source);\n        if (!this.tickId) {\n            this.tickId = Game.gameLoop.subscribe(dt => {\n                this.tick(dt);\n            });\n        }\n    }\n\n    private createElement(type: AilmentType) {\n        const li = document.createElement('li');\n        li.setAttribute('data-type', type);\n        li.insertAdjacentHTML('beforeend', `<div data-label>${type} <span data-time></span>s (<span data-count></span>)</div>`);\n        const progressBar = document.createElement('progress');\n        progressBar.max = 1;\n        progressBar.value = 0;\n        li.appendChild(progressBar);\n\n        this.ailmentListContainer.appendChild(li);\n\n        // this.timeSpan = li.querySelectorForce('[data-time]');\n        // this.countSpan = li.querySelectorForce('[data-count]');\n    }\n\n    private removeElement(type: AilmentType) {\n        this.ailmentListContainer.querySelector(`[data-type=\"${type}\"]`)?.remove();\n    }\n\n    private updateElements() {\n        const elements = this.ailmentListContainer.querySelectorAll('[data-type]');\n        for (const element of elements) {\n            const timeSpan = element.querySelector('[data-time]');\n            const countSpan = element.querySelector('[data-count]');\n            if (!timeSpan || !countSpan) {\n                return;\n            }\n            const type = element.getAttribute('data-type') as AilmentType;\n            const instances = [...this.sources.values()].flatMap(x => x.filter(x => x.type === type));\n            const maxTime = Math.max(...instances.map(x => x.time));\n            const count = instances.length;\n\n            timeSpan.textContent = maxTime.toFixed();\n            countSpan.textContent = count.toFixed();\n\n            const progressBar = element.querySelector<HTMLProgressElement>('progress');\n            if (progressBar) {\n                const maxDuration = Math.max(...instances.map(x => x.duration));\n                const pct = maxTime / maxDuration;\n                progressBar.value = pct;\n            }\n        }\n\n    }\n\n    private updateInstances(source: Entity) {\n        this.updateDuration(source);\n        this.updateDamage(source);\n    }\n\n    private removeAilment(ailment: AilmentInstance) {\n        const instances = this.sources.get(ailment.source);\n        if (!instances) {\n            return;\n        }\n        const index = instances.indexOf(ailment);\n        if (index !== -1) {\n            instances.splice(index, 1);\n            if (instances.length === 0) {\n                this.sources.delete(ailment.source);\n            }\n            ailment.detachCallback?.(ailment);\n        }\n\n        if (![...this.sources.values()].some(x => x.length > 0)) {\n            Game.gameLoop.unsubscribe(this.tickId);\n            this.tickId = undefined;\n        }\n        if (instances.length === 0) {\n            ailment.source.onStatsUpdate.removeListener(this.updateInstances);\n        }\n    }\n\n    private updateDuration(source: Entity) {\n        const instances = this.sources.get(source);\n        if (!instances) {\n            return;\n        }\n\n        //bleed\n        {\n            const bleedDuration = calcAilmentDuration(source, 'Bleed');\n            instances.filter(x => x.type === 'Bleed').forEach(x => x.duration = bleedDuration);\n        }\n    }\n\n    private updateDamage(source: Entity) {\n        const instances = this.sources.get(source);\n        if (!instances) {\n            return;\n        }\n\n        //bleed\n        {\n            const bleedInstances = instances.filter(isBleedInstance);\n            if (bleedInstances) {\n                const { min, max } = calcAilmentDamage(source, 'Bleed');\n                const avgDamage = (min + max) / 2;\n                bleedInstances.forEach(x => x.damage = avgDamage * x.damageFac);\n            }\n        }\n    }\n\n    tick(dt: number) {\n\n        for (const [source, instances] of this.sources) {\n            for (let i = instances.length - 1; i >= 0; i--) {\n                const instance = instances[i]!;\n                if ('damage' in instance) {\n                    if (instance.damage) {\n                        const damage = instance.damage * dt;\n                        this.dealDamage(source, damage, instance.type);\n                        instance.source.stats[`Total ${instance.type} Damage`].add(damage);\n                        instance.source.stats[`Total ${instance.type} Damage`].add(damage);\n                        instance.source.stats[\"Total Damage\"].add(damage);\n                    }\n                }\n\n                instance.time -= dt;\n                if (instance.time <= 0) {\n                    this.removeAilment(instance);\n                    if (instances.filter(x => x.type === instance.type).length === 0) {\n                        this.removeElement(instance.type);\n                    }\n                }\n            }\n        }\n    }\n\n    private dealDamage(source: Entity, damage: number, type: AilmentType) {\n        Enemy.dealDamageOverTime(damage);\n        source.stats[`Total ${type} Damage`].add(damage);\n    }\n}", "import { clamp, querySelector } from \"@src/utils/helpers\";\nimport Ailments, { AilmentData } from \"./Ailments\";\nimport type Entity from \"./Entity\";\nimport Game, { Save } from \"./Game\";\nimport Statistics from \"./Statistics\";\n\nclass Enemy {\n    private readonly ailments: Ailments;\n    private _index: number;\n    private healthList: number[] = [];\n    private _health = 0;\n    private readonly healthBar: HTMLProgressElement;\n    constructor() {\n        this.ailments = new Ailments();\n        this._index = 0;\n        this.healthBar = querySelector<HTMLProgressElement>('[data-health-bar]');\n    }\n    get index() {\n        return this._index;\n    }\n    get maxIndex() {\n        return this.healthList.length - 1;\n    }\n    get maxHealth() {\n        return this.healthList[this.index] || 1;\n    }\n    get health() {\n        return this._health;\n    }\n    private set health(v: number) {\n        this._health = clamp(v, 0, this.maxHealth);\n    }\n\n    init() {\n        Game.onSave.listen(this.save.bind(this));\n        Game.gameLoop.subscribeAnim(() => {\n            this.updateHealthBar();\n        });\n\n        Statistics.gameStats.Level.addListener('change', level => {\n            this._index = clamp(level, 1, this.maxIndex + 1) - 1;\n            this.spawn();\n        });\n\n        this.healthList = Game.config!.enemies.enemyList;\n        this._index = Game.saveObj?.enemy?.index || 0;\n\n        this.ailments.init();\n    }\n\n    setup() {\n        this.spawn();\n        this.health = Game.saveObj?.enemy?.health || this.maxHealth;\n        this.updateHealthBar();\n        // this.ailments.setup();\n    }\n\n    setIndex(index: number) {\n        this._index = index;\n    }\n\n    spawn() {\n        this.health = this.maxHealth;\n        if (this.index === this.maxIndex + 1) {\n            this.healthBar.textContent = 'Dummy (Cannot die)';\n        }\n        // this.ailments.reset();\n    }\n\n    dealDamage(amount: number) {\n        if (this.index === this.maxIndex + 1) {\n            return;\n        }\n        this.health -= amount;\n\n        if (this.health <= 0) {\n            this.health = 0;\n            this._index++;\n            Statistics.gameStats.Level.add(1);\n        }\n    }\n\n    dealDamageOverTime(damage: number) {\n        this.dealDamage(damage);\n    }\n\n    applyAilments(source: Entity, ...instances: AilmentData[]) {\n        this.ailments.addAilments(source, ...instances);\n    }\n\n    save(saveObj: Save) {\n        saveObj.enemy = {\n            index: this.index,\n            health: this.health,\n            dummyDamage: 0,\n        };\n    }\n\n    private updateHealthBar() {\n        const pct = this.health / this.maxHealth;\n        this.healthBar.value = pct;\n    }\n}\n\nexport default new Enemy();\n\nexport interface EnemySave {\n    index?: number;\n    health?: number;\n    dummyDamage?: number;\n    // ailments: AilmentSave[];\n}\n\n", "import EventEmitter from \"@src/utils/EventEmitter\";\nimport type { AilmentData } from \"./Ailments\";\nimport { calcAttack } from \"./calc/calcDamage\";\nimport { calcMinionStats, calcPlayerStats } from \"./calc/calcMod\";\nimport Enemy from \"./Enemy\";\nimport Game from \"./Game\";\nimport { ModDB } from \"./mods\";\nimport { EntityStatistics, MinionStatistics, PlayerStatistics, Statistic, StatisticSave } from \"./Statistics\";\n\nexport class EntityHandler {\n    readonly onEntityChanged = new EventEmitter<Entity>();\n    private _entities = new Map<string, Entity>;\n\n    get entities() {\n        return Object.values(this._entities);\n    }\n\n    addEntity(entity: Entity) {\n        this._entities.set(entity.name, entity);\n        this.onEntityChanged.invoke(entity);\n    }\n\n    removeEntity(entity: Entity) {\n        this._entities.delete(entity.name);\n        this.onEntityChanged.invoke(entity);\n    }\n\n    has(name: string) {\n        return this._entities.has(name);\n    }\n\n    reset() {\n        this._entities.clear();\n        this.onEntityChanged.removeAllListeners();\n    }\n}\n\nexport default abstract class Entity {\n    abstract stats: EntityStatistics['stats'];\n    protected _modDB = new ModDB();\n    public readonly onStatsUpdate = new EventEmitter<Entity>();\n    protected attackId?: string;\n    protected _attackTime = 0;\n    protected _attackWaitTime = Number.POSITIVE_INFINITY;\n    protected ailments: AilmentData[] = [];\n    constructor(readonly name: string) {\n\n    }\n\n    get modDB() {\n        return this._modDB;\n    }\n    get attackTime() {\n        return this._attackTime;\n    }\n    get attackWaitTime() {\n        return this._attackWaitTime;\n    }\n\n    protected abstract canAttack: boolean;\n    protected abstract updateStats(): void;\n\n    protected reset() {\n        this._modDB.clear();\n        this.onStatsUpdate.removeAllListeners();\n        Object.values(this.stats).forEach(x => x.reset());\n    }\n\n    private calcWaitTime() {\n        const time = 1 / this.stats[\"Attack Speed\"].get();\n        if (Number.isNaN(time)) {\n            return Number.POSITIVE_INFINITY;\n        }\n        return time;\n    }\n\n    loadStats(savedStats?: Record<keyof EntityStatistics['stats'], StatisticSave>) {\n        if (savedStats) {\n            Object.entries(savedStats).forEach(([key, value]) => {\n                const stat = this.stats[key as keyof EntityStatistics['stats']] as Statistic | undefined;\n                if (stat) {\n                    stat.set(value.value || stat.defaultValue);\n                    stat.sticky = value.sticky || false;\n                }\n            });\n        }\n    }\n\n    protected beginAutoAttack() {\n\n        this.stats[\"Attack Speed\"].addListener('change', () => {\n            this._attackWaitTime = this.calcWaitTime();\n        });\n\n        this._attackWaitTime = this.calcWaitTime();\n        this.attackId = Game.gameLoop.subscribe(dt => {\n            this._attackTime += dt;\n            if (this._attackTime >= this._attackWaitTime) {\n                if (this.canAttack) {\n                    this.performAttack();\n                    this._attackTime = 0;\n                }\n            }\n        });\n    }\n\n    protected performAttack() {\n        const result = calcAttack(this);\n        if (!result) {\n            return;\n        }\n\n        this.stats.Hits.add(1);\n        this.stats[\"Total Damage\"].add(result.totalDamage);\n        this.stats[\"Total Physical Damage\"].add(result.totalPhysicalDamage);\n        this.stats[\"Total Elemental Damage\"].add(result.totalElementalDamage);\n        if (result.crit) {\n            this.stats[\"Critical Hits\"].add(1);\n        }\n        Enemy.dealDamage(result.totalDamage);\n\n        if (result.ailments.length > 0) {\n            for (const ailment of result.ailments) {\n                ailment.detachCallback = () => {\n                    const index = this.ailments.indexOf(ailment);\n                    if (index !== -1) {\n                        this.ailments.splice(index, 1);\n                    }\n                };\n            }\n            this.ailments.push(...result.ailments);\n            Enemy.applyAilments(this, ...result.ailments);\n        }\n    }\n\n    protected stopAttacking() {\n        Game.gameLoop.unsubscribe(this.attackId);\n    }\n}\n\nexport class PlayerEntity extends Entity {\n    readonly stats = new PlayerStatistics().stats;\n    protected updateId = -1;\n    constructor() {\n        super('Player');\n    }\n\n    get canAttack() {\n        return this.stats[\"Current Mana\"].get() >= this.stats[\"Attack Mana Cost\"].get();\n    }\n\n    protected init() {\n        this.modDB.onChange.listen(async () => {\n            return new Promise((resolve) => {\n                clearTimeout(this.updateId);\n                this.updateId = window.setTimeout(async () => {\n                    this.updateStats();\n                    resolve();\n                }, 1);\n            });\n        });\n    }\n\n    protected performAttack(): void {\n        const manaCost = this.stats[\"Attack Mana Cost\"].get();\n        this.stats[\"Current Mana\"].subtract(manaCost);\n        super.performAttack();\n    }\n\n    updateStats(): void {\n        calcPlayerStats(this);\n        this.onStatsUpdate.invoke(this);\n        clearTimeout(this.updateId);\n    }\n}\n\nexport class MinionEntity extends Entity {\n    readonly stats = new MinionStatistics().stats;\n    constructor(name: string) {\n        super(name);\n    }\n    protected get canAttack() {\n        return true;\n    }\n    updateStats(): void {\n        calcMinionStats(this);\n        this.onStatsUpdate.invoke(this);\n    }\n}", "import { KeywordModifierFlag, StatModifierFlag, StatName } from \"@game/mods\";\nimport { CalcMinMax, calcModBase, calcModIncMore, calcModTotal, Configuration } from \"./calcMod\";\nimport { randomRange } from '@utils/helpers';\nimport type Entity from \"../Entity\";\nimport type { AilmentData, AilmentType } from \"../Ailments\";\nimport { MinionEntity } from \"../Entity\";\n\ntype ConversionValues = Partial<Record<keyof typeof DamageTypeFlags | 'multi', number>>;\nexport type ConversionTable = Partial<Record<keyof typeof DamageTypeFlags, ConversionValues>>;\n\nexport type DamageType = 'Physical' | 'Elemental' | 'Chaos';\ntype DamageFlag = number;\nexport const DamageTypeFlags: Record<DamageType, DamageFlag> = {\n    Physical: 1 << 0,\n    Elemental: 1 << 1,\n    Chaos: 1 << 2,\n} as const;\n\n\nexport interface AttackResult {\n    hit: boolean;\n    crit?: boolean;\n    totalDamage?: number;\n}\n\nconst damageNamesMetaTable = (() => {\n    type StatName = 'Damage' | `${DamageType}Damage`;\n    const names: StatName[][] = [];\n    const length = Object.values(DamageTypeFlags).reduce((a, v) => a + v);\n    for (let i = 0; i <= length; i++) {\n        const flagList: StatName[] = ['Damage'];\n        Object.entries(DamageTypeFlags).forEach(([key, value]) => {\n            if (value & i) {\n                const s = `${key}Damage` as StatName;\n                flagList.push(s);\n            }\n        });\n        names.push(flagList);\n    }\n    return names;\n})();\n\nexport function calcAttack(source: Entity) {\n\n    const config: Configuration = {\n        statModList: [...source.modDB.modList],\n        source,\n        flags: StatModifierFlag.Attack,\n        keywords: KeywordModifierFlag.Global\n    };\n\n    if (source instanceof MinionEntity) {\n        config.keywords |= KeywordModifierFlag.Minion;\n    }\n\n    //Hit\n    const hitChance = calcModTotal('HitChance', config) / 100;\n    const hitFac = randomRange(0, 1);\n    const hit = hitChance >= hitFac;\n    if (!hit) {\n        return false;\n    }\n\n    const baseDamage = calcBaseAttackDamage(config, randomRange);\n\n    const critChance = Math.min(calcModTotal('CritChance', config), 100) / 100;\n    const critFac = randomRange(0, 1);\n    const crit = critChance >= critFac;\n\n    //Crit\n    let critMultiplier = 1;\n    if (crit) {\n        critMultiplier = calcModTotal('CritMulti', config) / 100;\n    }\n\n    //finalize\n    const finalMultiplier = critMultiplier;\n\n    const totalDamage = baseDamage.totalBaseDamage * finalMultiplier;\n    const totalPhysicalDamage = baseDamage.physicalDamage * finalMultiplier;\n    const totalElementalDamage = baseDamage.elementalDamage * finalMultiplier;\n\n\n    const ailments: AilmentData[] = [];\n    //ailments\n    {\n        //bleed\n        config.flags |= StatModifierFlag.Bleed | StatModifierFlag.Physical;\n        const bleedChance = calcModTotal('BleedChance', config) / 100;\n        if (bleedChance >= randomRange(0, 1)) {\n            const damageFac = randomRange(0, 1);\n            const duration = calcModTotal('Duration', config);\n            ailments.push({ damageFac, type: 'Bleed', source, duration });\n        }\n        config.flags &= ~(StatModifierFlag.Bleed | StatModifierFlag.Physical);\n\n        // config.flags &= ~(StatModifierFlag.Burn | StatModifierFlag.Elemental);\n        // const burnChance = calcModTotal('BurnChance', config) / 100;\n        // if (burnChance >= randomRange(0, 1)) {\n        //     const damageFac = randomRange(0, 1);\n        //     ailments.push({ damageFac, type: 'Burn', source: config.source });\n        // }\n    }\n\n    return {\n        hit,\n        crit,\n        totalDamage,\n        totalPhysicalDamage,\n        totalElementalDamage,\n        ailments\n    };\n}\n\nexport function calcBaseAttackDamage(config: Configuration, calcMinMax: CalcMinMax) {\n\n    const conversionTable = generateConversionTable(config);\n    const output = {\n        totalBaseDamage: 0,\n        minPhysicalDamage: 0,\n        maxPhysicalDamage: 0,\n        physicalDamage: 0,\n        minElementalDamage: 0,\n        maxElementalDamage: 0,\n        elementalDamage: 0,\n        minChaosDamage: 0,\n        maxChaosDamage: 0,\n        chaosDamage: 0\n    };\n\n    let totalBaseDamage = 0;\n    const baseDamageMultiplier = calcModBase('BaseDamageMultiplier', config) / 100;\n    for (const damageType of Object.keys(DamageTypeFlags) as DamageType[]) {\n        const bit = StatModifierFlag[damageType];\n        config.flags |= bit;\n        let { min, max } = calcDamage(damageType, config, conversionTable);\n        min *= baseDamageMultiplier;\n        max *= baseDamageMultiplier;\n        output[`min${damageType}Damage`] = min;\n        output[`max${damageType}Damage`] = max;\n        const baseDamage = calcMinMax(min, max);\n        output[`${damageType.toLowerCase()}Damage` as keyof typeof output] = baseDamage;\n        totalBaseDamage += baseDamage;\n        config.flags &= ~bit;\n    }\n\n    output.totalBaseDamage = totalBaseDamage;\n    return output;\n}\n\nexport function calcAilmentDamage(source: Entity, type: AilmentType) {\n    const config: Configuration = {\n        statModList: [...source.modDB.modList],\n        source,\n        flags: 0,\n        keywords: KeywordModifierFlag.Global\n    };\n    if (source instanceof MinionEntity) {\n        config.keywords |= KeywordModifierFlag.Minion;\n    }\n    if (type === 'Bleed') {\n        config.flags = StatModifierFlag.Bleed | StatModifierFlag.Physical;\n        const { min, max } = calcAilmentBaseDamage('Physical', config);\n        return { min, max };\n    }\n    throw Error();\n}\n\nexport function calcAilmentDuration(source: Entity, type: AilmentType) {\n    const config: Configuration = {\n        statModList: [...source.modDB.modList],\n        source,\n        flags: 0,\n        keywords: KeywordModifierFlag.Global\n    };\n    if (type === 'Bleed') {\n        config.flags |= StatModifierFlag.Bleed;\n        return calcModTotal('Duration', config);\n    }\n    return 0;\n}\n\n\nfunction calcDamage(damageType: DamageType, config: Configuration, conversionTable: ConversionTable, damageFlag = 0) {\n\n    damageFlag |= DamageTypeFlags[damageType];\n    let addMin = 0;\n    let addMax = 0;\n    const damageTypes = ['Physical', 'Elemental', 'Chaos'] as const;\n    for (const type of damageTypes) {\n        if (type === damageType) {\n            break;\n        }\n        const convMulti = (conversionTable[type] as ConversionValues)[damageType] as number;\n        if (convMulti > 0) {\n            const { min, max } = calcDamage(type, config, conversionTable, damageFlag);\n            addMin += Math.ceil(min * convMulti);\n            addMax += Math.ceil(max * convMulti);\n        }\n    }\n\n    const baseMin = calcModBase(`MinDamage` as StatName, config);\n    const baseMax = calcModBase(`MaxDamage` as StatName, config);\n\n    const modNames = damageNamesMetaTable[damageFlag];\n    const min = Math.round(calcModIncMore(modNames as StatName[], baseMin, config) + addMin);\n    const max = Math.round(calcModIncMore(modNames as StatName[], baseMax, config) + addMax);\n    return { min, max };\n}\n\nexport function calcAilmentBaseDamage(damageType: DamageType, config: Configuration, typeFlags = 0) {\n    const conversionTable = generateConversionTable(config);\n    let { min, max } = calcDamage(damageType, config, conversionTable, typeFlags);\n    const convMulti = conversionTable[damageType]?.multi || 1;\n    const baseDamageMultiplier = calcModTotal('BaseDamageMultiplier', config) / 100;\n    min *= baseDamageMultiplier;\n    max *= baseDamageMultiplier;\n    return { min: min * convMulti, max: max * convMulti };\n}\n\n\nfunction generateConversionTable(config: Configuration) {\n\n    type Conversion = Partial<Record<keyof typeof DamageTypeFlags, number>>;\n    const conversionTable: ConversionTable = {};\n    const damageTypeFlagKeys = Object.keys(DamageTypeFlags) as (keyof typeof DamageTypeFlags)[];\n    for (let i = 0; i < damageTypeFlagKeys.length; i++) {\n        const damageType = damageTypeFlagKeys[i];\n        const globalConv: Conversion = {};\n        const skillConv: Conversion = {};\n        const add: Conversion = {};\n        let globalTotal = 0;\n        let skillTotal = 0;\n        for (let j = i + 1; j < damageTypeFlagKeys.length; j++) {\n            const otherDamageType = damageTypeFlagKeys[i];\n            const convertedToName = `${damageType}ConvertedTo${otherDamageType}` as StatName;\n            globalConv[otherDamageType!] = calcModBase(convertedToName, config);\n            globalTotal += globalConv[otherDamageType!] as number;\n            skillConv[otherDamageType!] = calcModBase(convertedToName, config);\n            skillTotal += skillConv[otherDamageType!] as number;\n            add[otherDamageType!] = calcModBase(`${damageType}GainAs${otherDamageType}` as StatName, config);\n        }\n\n        const fac = skillTotal > 100 ? 100 / skillTotal : (100 - skillTotal) / globalTotal;\n        for (const key of Object.keys(skillConv)) {\n            skillConv[key as DamageType]! *= fac;\n        }\n\n        const conversionValues: ConversionValues = { multi: 1 };\n        for (const [key, value] of Object.entries(globalConv)) {\n            const skillConvValue = skillConv[key as DamageType] || 0;\n            const addValue = add[key as DamageType] || 0;\n            conversionValues[key as DamageType] = (value + skillConvValue + addValue) / 100;\n        }\n        conversionValues.multi = 1 - Math.min((globalTotal + skillTotal) / 100, 1);\n        conversionTable[damageType!] = conversionValues;\n    }\n    conversionTable.Chaos = { multi: 1 };\n    return conversionTable;\n}", "import { avg, clamp, hasFlags } from \"@utils/helpers\";\nimport type { MinionEntity, PlayerEntity } from \"../Entity\";\nimport type Entity from \"../Entity\";\nimport { StatModifier, StatModifierFlag, StatName, StatModifierValueType, KeywordModifierFlag } from \"../mods\";\nimport Player from \"../Player\";\nimport { calcAilmentBaseDamage, calcBaseAttackDamage, ConversionTable } from \"./calcDamage\";\n\nexport type CalcMinMax = (min: number, max: number) => number;\n\nexport interface Configuration {\n    statModList: StatModifier[];\n    flags: number;\n    conversionTable?: ConversionTable;\n    source?: Entity;\n    keywords: KeywordModifierFlag;\n}\n\nexport function calculateEntityStats(config: Configuration & { source: Entity }) {\n    const statistics = config.source.stats;\n    //Hit Chance\n    const hitChance = calcModTotal('HitChance', config) / 100;\n    statistics['Hit Chance'].set(hitChance);\n    const clampedHitChance = clamp(hitChance, 0, 1);\n\n    //Attack Speed\n    const attackSpeed = calcModTotal('AttackSpeed', config);\n    statistics['Attack Speed'].set(attackSpeed);\n\n    //Crit\n    const critChance = calcModTotal('CritChance', config) / 100;\n    statistics['Critical Hit Chance'].set(critChance);\n    const clampedCritChance = clamp(critChance, 0, 1);\n    const critMulti = Math.max(calcModTotal('CritMulti', config), 100) / 100;\n    statistics['Critical Hit Multiplier'].set(critMulti);\n\n    let attackDps = 0;\n    {\n        config.flags = StatModifierFlag.Attack;\n        const baseDamageResult = calcBaseAttackDamage(config, avg);\n        const critDamageMultiplier = 1 + (clampedCritChance * critMulti);\n        attackDps = baseDamageResult.totalBaseDamage * clampedHitChance * attackSpeed * critDamageMultiplier;\n\n        statistics['Attack Dps'].set(attackDps);\n        statistics['Attack Damage'].set(baseDamageResult.totalBaseDamage);\n        statistics['Physical Attack Damage'].set(baseDamageResult.physicalDamage);\n        statistics['Elemental Attack Damage'].set(baseDamageResult.elementalDamage);\n    }\n\n    //bleed\n    let bleedDps = 0, bleedChance = 0, maxBleedStacks = 0, bleedDuration = 0;\n    {\n        config.flags = StatModifierFlag.Physical | StatModifierFlag.Bleed;\n        bleedChance = calcModTotal('BleedChance', config) / 100;\n        maxBleedStacks = calcModTotal('AilmentStack', config);\n        bleedDuration = calcModTotal('Duration', config);\n        if (bleedChance > 0) {\n            const { min, max } = calcAilmentBaseDamage('Physical', config);\n            const baseDamage = avg(min, max);\n            const stacksPerSecond = clampedHitChance * bleedChance * attackSpeed;\n            const maxStacks = Math.min(stacksPerSecond * bleedDuration, maxBleedStacks);\n            bleedDps = baseDamage * maxStacks;\n        }\n        statistics['Bleed Dps'].set(bleedDps);\n        statistics['Bleed Chance'].set(bleedChance);\n        statistics['Maximum Bleed Stacks'].set(maxBleedStacks);\n        statistics['Bleed Duration'].set(bleedDuration);\n    }\n\n    //burn\n    let burnDps = 0, burnChance = 0, maxBurnStacks = 0, burnDuration = 0;\n    {\n        config.flags = StatModifierFlag.Elemental | StatModifierFlag.Burn;\n        burnChance = calcModTotal('BurnChance', config) / 100;\n        maxBurnStacks = calcModTotal('AilmentStack', config);\n        burnDuration = calcModTotal('Duration', config);\n        if (burnChance > 0) {\n            const { min, max } = calcAilmentBaseDamage('Elemental', config);\n            const baseDamage = avg(min, max);\n            const stacksPerSecond = clampedHitChance * burnChance * attackSpeed;\n            const maxStacks = Math.min(stacksPerSecond * burnDuration, maxBurnStacks);\n            burnDps = baseDamage * maxStacks;\n        }\n        statistics['Burn Dps'].set(burnDps);\n        statistics['Burn Chance'].set(burnChance);\n        statistics['Maximum Burn Stacks'].set(maxBurnStacks);\n        statistics['Burn Duration'].set(burnDuration);\n    }\n\n    const ailmentDps = bleedDps + burnDps;\n\n    const dps = (attackDps + ailmentDps);\n    statistics.Dps.set(dps);\n}\n\nexport function calcPlayerStats(player: PlayerEntity) {\n    const statistics = player.stats;\n\n    const config = {\n        statModList: Player.modDB.modList,\n        flags: 0,\n        source: player,\n        keywords: KeywordModifierFlag.Global\n    } satisfies Configuration;\n\n    //Mana\n    const maxMana = calcModTotal('MaxMana', config);\n    statistics['Maximum Mana'].set(maxMana);\n    const manaRegen = calcModTotal('ManaRegen', config);\n    statistics['Mana Regeneration'].set(manaRegen);\n    const attackManaCost = calcModTotal('AttackManaCost', config);\n    statistics['Attack Mana Cost'].set(attackManaCost);\n\n    calculateEntityStats(config);\n\n    config.flags |= StatModifierFlag.Skill;\n    const skillDurationMultiplier = calcModIncMore('Duration', 1, config);\n    config.flags &= ~StatModifierFlag.Skill;\n\n    statistics['Skill Duration Multiplier'].set(skillDurationMultiplier);\n\n    const maxMinions = calcModBase('MinionCount', config);\n    statistics['Maximum Minions'].set(maxMinions);\n}\n\nexport function calcMinionStats(minion: MinionEntity) {\n    const config = {\n        statModList: minion.modDB.modList,\n        flags: 0,\n        source: minion,\n        keywords: KeywordModifierFlag.Global | KeywordModifierFlag.Minion\n    } satisfies Configuration;\n    calculateEntityStats(config);\n}\n\n\n//#region calcMod\nexport function calcModBase(modName: StatName | StatName[], config: Configuration) {\n    return calcModSum('Base', modName, config);\n}\nexport function calcModInc(modName: StatName | StatName[], config: Configuration) {\n    return Math.max(0, 1 + calcModSum(\"Inc\", modName, config) / 100);\n}\nexport function calcModMore(modName: StatName | StatName[], config: Configuration) {\n    return Math.max(0, calcModSum(\"More\", modName, config));\n}\nexport function calcModIncMore(modName: StatName | StatName[], base: number, config: Configuration) {\n    if (base <= 0) return 0;\n    const inc = calcModInc(modName, config);\n    const more = calcModMore(modName, config);\n    return base * inc * more;\n}\nexport function calcModTotal(modName: StatName | StatName[], config: Configuration) {\n    const base = calcModBase(modName, config);\n    if (base === 0) {\n        return 0;\n    }\n    const inc = calcModInc(modName, config);\n    const more = calcModMore(modName, config);\n    return base * inc * more;\n}\nexport function calcModSum(valueType: StatModifierValueType, name: StatName | StatName[], config: Configuration) {\n\n    name = Array.isArray(name) ? name : [name]; // force array\n    let result = valueType === 'More' ? 1 : 0;\n    const filteredModList = config.statModList.filter(x => {\n        if (!name.includes(x.name)) {\n            return false;\n        }\n        if (x.valueType !== valueType)\n            return false;\n        if (!hasFlags(config.keywords, x.keywords)) {\n            return false;\n        }\n        if (!hasFlags(config.flags, x.flags || 0))\n            return false;\n        return true;\n    });\n    for (const mod of filteredModList) {\n        const value = mod.value;\n        if (valueType === 'More') {\n            result *= 1 + value / 100;\n        } else {\n            result += value;\n        }\n    }\n    return Math.max(0, result);\n}\n//#endregion calcMod", "import { querySelector } from \"@src/utils/helpers\";\nimport Value from \"@utils/Value\";\nimport { calcModTotal, Configuration } from \"./calc/calcMod\";\nimport type Entity from \"./Entity\";\nimport Game, { Save } from \"./Game\";\nimport { KeywordModifierFlag } from \"./mods\";\nimport Player from \"./Player\";\n\ninterface StatisticsGroup {\n    pageGroup: HTMLElement;\n    sideGroup: HTMLElement;\n    stats: StatisticsObject['stats'];\n}\n\ninterface StatisticOptions {\n    defaultValue?: number;\n    sticky?: boolean;\n    format?: 'none' | 'pct' | 'time' | 'seconds';\n    formatColor?: 'gold';\n    decimals?: number;\n}\n\n\ninterface StatisticsObject {\n    stats: Record<string, Statistic>;\n}\n\nexport class Statistic extends Value {\n    sticky: boolean;\n    constructor(readonly opts: StatisticOptions = {}) {\n        super(opts?.defaultValue || 0);\n        this.sticky = opts.sticky || false;\n    }\n\n    reset(): void {\n        super.reset();\n        this.sticky = this.opts.sticky || false;\n    }\n}\n\nexport class GameStatistics implements StatisticsObject {\n    readonly stats = {\n        'Time Played': new Statistic({ format: 'time' }),\n        'Level': new Statistic({ sticky: true }),\n        'Gold': new Statistic({ sticky: true, formatColor: 'gold' }),\n        'Gold Generation': new Statistic({ sticky: true, format: 'seconds' }),\n        'Gold Generated': new Statistic(),\n    } as const;\n}\n\nexport class EntityStatistics implements StatisticsObject {\n    readonly stats = {\n        'Dps': new Statistic({ sticky: true }),\n        'Hit Chance': new Statistic({ sticky: true, format: 'pct' }),\n        'Attack Speed': new Statistic({ sticky: true, decimals: 2 }),\n\n        //Attack\n        'Attack Dps': new Statistic(),\n        'Attack Damage': new Statistic(),\n        'Physical Attack Damage': new Statistic(),\n        'Elemental Attack Damage': new Statistic(),\n        //Crit\n        'Critical Hit Chance': new Statistic({ format: 'pct' }),\n        'Critical Hit Multiplier': new Statistic({ defaultValue: 1, format: 'pct' }),\n\n        //Bleed\n        'Bleed Chance': new Statistic({ format: 'pct' }),\n        'Bleed Dps': new Statistic(),\n        'Bleed Duration': new Statistic({ format: 'seconds' }),\n        'Maximum Bleed Stacks': new Statistic(),\n        //Burn\n        'Burn Chance': new Statistic({ format: 'pct' }),\n        'Burn Dps': new Statistic(),\n        'Burn Duration': new Statistic({ format: 'seconds' }),\n        'Maximum Burn Stacks': new Statistic(),\n\n        //Accumulation\n        'Hits': new Statistic(),\n        'Critical Hits': new Statistic(),\n        'Total Damage': new Statistic(),\n        'Total Physical Damage': new Statistic(),\n        'Total Elemental Damage': new Statistic(),\n        'Total Bleed Damage': new Statistic(),\n        'Total Burn Damage': new Statistic(),\n    } as const;\n}\n\nexport class PlayerStatistics implements EntityStatistics {\n    stats = {\n        ...new EntityStatistics().stats,\n        'Current Mana': new Statistic(),\n        //Mana\n        'Maximum Mana': new Statistic(),\n        'Mana Regeneration': new Statistic(),\n        'Attack Mana Cost': new Statistic(),\n        //Other\n        'Skill Duration Multiplier': new Statistic({ format: 'pct' }),\n\n        //Accumulation\n        'Mana Generated': new Statistic(),\n        'Maximum Minions': new Statistic()\n    };\n}\n\nexport class MinionStatistics implements EntityStatistics {\n    stats = {\n        ...new EntityStatistics().stats,\n    };\n}\n\nexport class Statistics {\n    private readonly page = querySelector('.p-game .p-statistics');\n    private readonly pageListContainer: HTMLElement;\n    private readonly sideListContainer: HTMLElement;\n    readonly gameStats = new GameStatistics().stats;\n    private statisticsGroups = new Map<string, StatisticsGroup>();\n    private updateStatsCallback = (x: Entity) => this.updateGroup(x.name, x.stats);\n    constructor() {\n        this.pageListContainer = this.page.querySelectorForce('ul');\n        this.sideListContainer = querySelector('.p-game .s-stats ul');\n    }\n\n    init() {\n        Game.onSave.listen(this.save.bind(this));\n        this.gameStats.Level.set(1);\n\n        if (Game.saveObj?.statistics?.gameStatistics) {\n            Object.entries(Game.saveObj?.statistics?.gameStatistics).forEach(([key, value]) => {\n                const stat = this.gameStats[key as keyof GameStatistics['stats']] as Statistic | undefined;\n                if (stat) {\n                    stat.set(value?.value || stat.defaultValue);\n                    stat.sticky = value?.sticky || false;\n                }\n            });\n        }\n\n        Game.visiblityObserver.register(this.page, visible => {\n            if (visible) {\n                for (const key of this.statisticsGroups.keys()) {\n                    this.updatePageGroup(key);\n                }\n            }\n        });\n\n        Player.onStatsUpdate.listen(() => {\n            this.calcGlobalStats();\n            this.updateGroup('Global', this.gameStats);\n        });\n\n        Game.entityHandler.onEntityChanged.listen(x => {\n            if (Game.entityHandler.has(x.name)) {\n                x.onStatsUpdate.listen(this.updateStatsCallback);\n                this.createGroup(x.name, x.stats);\n            } else {\n                x.onStatsUpdate.removeListener(this.updateStatsCallback);\n                this.removeGroup(x.name);\n            }\n        });\n\n        this.createGroup('Global', this.gameStats);\n    }\n\n    updateAll() {\n        this.updateGroup('Global', this.gameStats);\n        Game.entityHandler.entities.forEach(x => {\n            this.updateGroup(x.name, x.stats);\n        });\n    }\n\n    private createGroup(name: string, stats: StatisticsObject['stats']) {\n        if (this.statisticsGroups.has(name)) {\n            return;\n        }\n\n        const pageGroup = this.createPageListGroup(name, stats);\n        const sideGroup = this.createSideListGroup(name, stats);\n        if (!pageGroup || !sideGroup) {\n            throw Error();\n        }\n        pageGroup.classList.remove('hidden');\n        sideGroup.classList.remove('hidden');\n        if (Game.saveObj?.statistics) {\n            this.pageListContainer.querySelector(`[data-name=\"${name}\"] .header`)?.toggleAttribute('data-open', Game.saveObj.statistics.groups?.[name]?.pageHeader);\n            this.sideListContainer.querySelector(`[data-name=\"${name}\"] .header`)?.toggleAttribute('data-open', Game.saveObj.statistics.groups?.[name]?.sideHeader);\n        }\n        this.statisticsGroups.set(name, { pageGroup, sideGroup, stats });\n        this.updateGroup(name, stats);\n    }\n\n    private updateGroup(name: string, stats: StatisticsObject['stats']) {\n        if (!this.statisticsGroups.has(name)) {\n            const pageGroup = this.pageListContainer.querySelector<HTMLElement>(`[data-name=\"${name}\"]`);\n            const sideGroup = this.sideListContainer.querySelector<HTMLElement>(`[data-name=\"${name}\"]`);\n            if (!pageGroup || !sideGroup) {\n                this.createGroup(name, stats);\n                return;\n            }\n            this.statisticsGroups.set(name, { pageGroup, sideGroup, stats });\n        }\n        if (!this.page.classList.contains('hidden')) {\n            this.updatePageGroup(name);\n        }\n        this.updateSideGroup(name);\n    }\n\n    removeGroup(name: string) {\n        const group = this.statisticsGroups.get(name);\n        group?.pageGroup.classList.add('hidden');\n        group?.sideGroup.classList.add('hidden');\n        this.statisticsGroups.delete(name);\n    }\n\n    private calcGlobalStats() {\n        const config: Configuration = {\n            statModList: Player.modDB.modList.filter(x => x.keywords === KeywordModifierFlag.Global),\n            flags: 0,\n            keywords: KeywordModifierFlag.Global\n        };\n        const v = calcModTotal('GoldGeneration', config);\n        this.gameStats[\"Gold Generation\"].set(v);\n    }\n\n    reset() {\n        Object.values(this.gameStats).forEach(x => x.reset());\n        this.statisticsGroups.clear();\n        this.pageListContainer.replaceChildren();\n        this.sideListContainer.replaceChildren();\n    }\n\n    private createPageListGroup(label: string, stats: StatisticsObject['stats']) {\n        const group = this.createAccordion(label, stats) || null;\n        if (group) {\n            this.pageListContainer.appendChild(group);\n        }\n        group?.querySelectorAll(`[data-stat]`).forEach(element => {\n            const statName = element.getAttribute('data-stat') as keyof StatisticsObject['stats'];\n            const stat = stats[statName];\n            if (!stat) {\n                return;\n            }\n            element.classList.toggle('selected', stat.sticky);\n            element.addEventListener('click', () => {\n                if (!stat) {\n                    return;\n                }\n                stat.sticky = !stat.sticky;\n                element.classList.toggle('selected', stat.sticky);\n                const stats = this.statisticsGroups.get(label)?.stats;\n                if (stats)\n                    this.updateGroup(label, stats);\n            });\n        });\n        return group;\n    }\n\n    private createSideListGroup(label: string, stats: StatisticsObject['stats']) {\n        const group = this.createAccordion(label, stats) || null;\n        if (group) {\n            this.sideListContainer.appendChild(group);\n        }\n        return group;\n    }\n\n    private createAccordion(label: string, stats: StatisticsObject['stats']) {\n        const accordion = document.createElement('li');\n        accordion.classList.add('g-accordion');\n        accordion.setAttribute('data-name', label);\n        const header = document.createElement('div');\n        accordion.appendChild(header);\n        header.classList.add('header');\n        header.insertAdjacentHTML('beforeend', `<div data-label>${label}</div>`);\n\n        const content = document.createElement('ul');\n        accordion.appendChild(content);\n        content.classList.add('content');\n\n        for (const [key, value] of Object.entries(stats)) {\n            const element = document.createElement('li');\n            element.classList.add('g-field', 'g-list-item');\n            element.setAttribute('data-stat', key);\n            element.insertAdjacentHTML('beforeend', `<div>${key}</div>`);\n            element.insertAdjacentHTML('beforeend', `<var data-format=\"${value.opts.format}\"></var>`);\n            if (value.opts.formatColor) {\n                element.querySelectorForce('var').setAttribute('data-tag', value.opts.formatColor || '');\n            }\n            switch (value.opts.format) {\n            case 'pct': element.insertAdjacentHTML('beforeend', '%'); break;\n            case 'seconds': element.insertAdjacentHTML('beforeend', 's'); break;\n            }\n            content.appendChild(element);\n        }\n        header.insertAdjacentHTML('beforeend', `<i></i>`);\n        header.addEventListener('click', () => {\n            header.toggleAttribute('data-open');\n            const group = this.statisticsGroups.get(label);\n            if (group) {\n                this.updatePageGroup(label);\n                this.updateSideGroup(label);\n            }\n        });\n        header.click(); //open by default\n        return accordion;\n    }\n\n    private updatePageGroup(name: keyof StatisticsObject['stats']) {\n        if (this.page.classList.contains('hidden')) {\n            return;\n        }\n        const group = this.statisticsGroups.get(name);\n        if (!group) {\n            return;\n        }\n        for (const [key, stat] of Object.entries(group.stats)) {\n            const element = group.pageGroup.querySelector<HTMLElement>(`[data-stat=\"${key}\"]`);\n            const varElement = element?.querySelector('var');\n            if (!element || !varElement) {\n                return;\n            }\n            element.classList.toggle('suppressed', stat.get() === stat.defaultValue);\n\n            varElement.textContent = this.formatVariableText(stat);\n        }\n    }\n\n    private updateSideGroup(name: keyof StatisticsObject['stats']) {\n        const group = this.statisticsGroups.get(name);\n        if (!group) {\n            return;\n        }\n        for (const [key, stat] of Object.entries(group.stats)) {\n            const element = group.sideGroup.querySelector<HTMLElement>(`[data-stat=\"${key}\"]`);\n            const varElement = element?.querySelector('var');\n            if (!element || !varElement) {\n                return;\n            }\n            element.classList.toggle('hidden', !stat.sticky);\n            varElement.textContent = this.formatVariableText(stat);\n        }\n    }\n\n    private formatVariableText(statistic: Statistic) {\n        const value = statistic.get();\n        const { format, decimals } = statistic.opts;\n        let text = value.toFixed(decimals);\n        switch (format) {\n        case 'time':\n            {\n                const date = new Date(0);\n                date.setSeconds(value);\n                text = date.toISOString().substring(11, 19);\n            }\n            break;\n        case 'pct':\n            text = (value * 100).toFixed(decimals);\n            break;\n        }\n        return text;\n    }\n\n    save(saveObj: Save) {\n        saveObj.statistics = {\n            gameStatistics: this.createStatsSaveObj(this.gameStats),\n            groups: [...this.statisticsGroups.entries()].reduce((a, [key, group]) => {\n                a[key] = {\n                    pageHeader: group.pageGroup.querySelector('.header[data-open]') !== null,\n                    sideHeader: group.sideGroup.querySelector('.header[data-open]') !== null\n                };\n                return a;\n            }, {} as StatisticsSave['groups']),\n        };\n    }\n\n    createStatsSaveObj<T extends Record<string, Statistic>>(stats: T) {\n        return Object.entries(stats).reduce((a, [key, value]) => {\n            a[key as keyof T] = { value: value.get(), sticky: value.sticky };\n            return a;\n        }, {} as Record<keyof T, StatisticSave>);\n    }\n}\n\nexport default new Statistics();\n\n\n//save\n\nexport interface StatisticsSave {\n    gameStatistics: Record<keyof GameStatistics['stats'], StatisticSave>;\n    groups: Record<string, { pageHeader: boolean; sideHeader: boolean }>;\n}\n\nexport interface StatisticSave {\n    value: number;\n    sticky: boolean;\n}", "import { Modifier } from \"./mods\";\nimport { querySelector } from \"@src/utils/helpers\";\nimport Game, { Save } from './Game';\nimport Statistics, { PlayerStatistics, StatisticSave } from './Statistics';\nimport { PlayerEntity } from \"./Entity\";\n\n\nexport class Player extends PlayerEntity {\n    private readonly manaBar = querySelector<HTMLProgressElement>('.p-game [data-mana-bar]');\n    constructor() {\n        super();\n    }\n\n    init() {\n        super.init();\n        Game.onSave.listen(this.save.bind(this));\n\n        this.loadStats(Game.saveObj?.player?.stats as Record<keyof PlayerStatistics['stats'], StatisticSave>);\n\n        if (Game.config!.player) {\n            Game.config!.player.modList.forEach(x => {\n                this.modDB.add('Player', ...new Modifier(x).stats);\n            });\n        }\n\n        Game.gameLoop.subscribeAnim(() => {\n            this.updateManaBar();\n        });\n\n        this.stats['Current Mana'].addListener('change', curMana => {\n            const maxMana = this.stats['Maximum Mana'].get();\n            if (curMana > maxMana) {\n                this.stats['Current Mana'].set(maxMana);\n            }\n        });\n\n        Game.gameLoop.subscribe((dt) => {\n            const manaRegen = this.stats['Mana Regeneration'].get() * dt;\n            this.stats['Current Mana'].add(manaRegen);\n            this.stats[\"Mana Generated\"].add(manaRegen);\n        });\n\n        this._attackTime = Game.saveObj?.player?.attackTime || 0;\n\n        Game.entityHandler.addEntity(this);\n        this.updateStats();\n    }\n\n    get attackTime() {\n        return this._attackTime;\n    }\n    get attackWaitTime() {\n        return this._attackWaitTime;\n    }\n\n    reset() {\n        super.reset();\n    }\n\n    async setup() {\n        this.updateStats();\n        this.stats['Current Mana'].set(Game.saveObj?.player?.curMana || this.stats['Maximum Mana'].get());\n        this.updateManaBar();\n        this.beginAutoAttack();\n    }\n\n    private updateManaBar() {\n        if (this.stats['Maximum Mana'].get() <= 0) {\n            return;\n        }\n        const pct = this.stats['Current Mana'].get() / this.stats['Maximum Mana'].get();\n        this.manaBar.value = pct;\n    }\n\n    save(saveObj: Save) {\n        saveObj.player = {\n            attackTime: this._attackTime,\n            stats: Statistics.createStatsSaveObj(this.stats)\n        };\n    }\n}\n\nexport default new Player();\n\n\n//save\nexport interface PlayerSave {\n    level?: number;\n    gold?: number;\n    curMana?: number;\n    attackTime?: number;\n    stats: PlayerStatisticsSave;\n}\n\nexport type PlayerStatisticsSave = Record<keyof PlayerStatistics['stats'], StatisticSave>;", "\ntype Callback = (dt: number) => void;\n\ninterface Instance {\n    time: number;\n    id: string;\n    callback: Callback;\n    options?: Options;\n}\ntype AnimInstance = Instance\nexport interface Options {\n    intervalMilliseconds: number;\n}\n\nconst TARGET_FRAME_TIME = 1000 / 30;\nconst DELTA_TIME_SECONDS = TARGET_FRAME_TIME / 1000;\n\nexport default class Loop {\n    public running = false;\n\n    private readonly instances = new Map<string, Instance>();\n    private readonly animInstances = new Map<string, AnimInstance>();\n    private loopId = 0;\n    private animLoopId = 0;\n\n    subscribe(callback: Callback, options?: Options) {\n        const id = crypto.randomUUID();\n        const instance: Instance = { callback, time: 0, id, options };\n        this.instances.set(id, instance);\n        return id;\n    }\n\n    subscribeAnim(callback: Callback, options?: Options) {\n        const id = crypto.randomUUID();\n        const instance: AnimInstance = { callback, time: 0, id, options };\n        this.animInstances.set(id, instance);\n        return id;\n    }\n\n    unsubscribe(id: string | undefined) {\n        if (!id) {\n            return;\n        }\n        this.instances.delete(id);\n        this.animInstances.delete(id);\n    }\n\n    reset() {\n        this.instances.clear();\n        this.animInstances.clear();\n        this.running = false;\n    }\n\n    start() {\n        if (this.running) {\n            return;\n        }\n        this.running = true;\n        this.beginLoop();\n        this.beginLoopAnim();\n    }\n\n    stop() {\n        this.running = false;\n        clearTimeout(this.loopId);\n        cancelAnimationFrame(this.animLoopId || 0);\n    }\n\n    private beginLoop() {\n        let remainder = 0;\n        let now = performance.now();\n        clearTimeout(this.loopId);\n        const loop = () => {\n            this.loopId = window.setTimeout(() => {\n                let diff = performance.now() - now + remainder;\n\n                now = performance.now();\n\n                while (diff >= TARGET_FRAME_TIME) {\n                    diff -= TARGET_FRAME_TIME;\n\n                    this.instances.forEach(instance => {\n                        instance.time += TARGET_FRAME_TIME;\n                        const ms = instance.options?.intervalMilliseconds || 0;\n                        if (instance.time > ms) {\n                            instance.callback(DELTA_TIME_SECONDS);\n                            instance.time -= ms || instance.time;\n                        }\n                    });\n                    if (diff > 2000) {\n                        diff = 0;\n                    }\n                }\n                remainder = diff;\n                loop();\n            }, TARGET_FRAME_TIME);\n        };\n        loop();\n    }\n\n    private beginLoopAnim() {\n        let lastTime = 0;\n        cancelAnimationFrame(this.animLoopId);\n        const loop = () => {\n            const now = performance.now();\n            const dt = (now - lastTime);\n            this.animInstances.forEach(instance => {\n                instance.time += dt;\n                const ms = instance.options?.intervalMilliseconds || 0;\n                if (instance.time > ms) {\n                    instance.callback(dt / 1000);\n                    instance.time = 0;\n                }\n            });\n            lastTime = now;\n            this.animLoopId = requestAnimationFrame(loop);\n        };\n        this.animLoopId = requestAnimationFrame(loop);\n    }\n}", "import localforage from 'localforage';\n\ntype SaveType = 'Game';\n\nexport default { save, load };\n\nexport async function save<T>(type: SaveType, object: object) {\n    try {\n        switch (type) {\n        case 'Game': return await saveBlob('ts-game', object) as T;\n        }\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nexport async function load<T>(type: SaveType) {\n    try {\n        switch (type) {\n        case 'Game':\n        {\n            const blob = await loadBlob('ts-game') as { [K: string]: T };\n            if (blob) {\n                return new Map(Object.entries(blob));\n            }\n            return null;\n        }\n        default: return null;\n        }\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nasync function saveBlob(key: string, object: object) {\n    const str = window.btoa(JSON.stringify(object));\n    const blob = new Blob([str], { type: 'text/plain' });\n    return await localforage.setItem<Blob>(key, blob);\n}\n\nasync function loadBlob(key: string) {\n    const blob = await localforage.getItem<Blob>(key);\n    if (!blob) {\n        return blob;\n    }\n    const str = await blob.text();\n    return JSON.parse(window.atob(str)) as object;\n}", "import type { Options } from \"./Loop\";\nimport type Loop from \"./Loop\";\n\nexport type Callback = (visible: boolean, observer: IntersectionObserver) => void;\nexport class VisibilityObserver {\n    private readonly instances: IntersectionObserver[] = [];\n    private readonly loopInstances: { observer: IntersectionObserver, disconnect: () => void }[] = [];\n    constructor(readonly loop?: Loop) { }\n\n    disconnectAll() {\n        this.instances.forEach(x => x.disconnect());\n        this.loopInstances.forEach(x => x.disconnect());\n        this.instances.splice(0);\n        this.loopInstances.splice(0);\n    }\n    register(element: HTMLElement, callback: Callback) {\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(x => callback(x.isIntersecting, observer));\n        });\n        observer.observe(element);\n        this.instances.push(observer);\n        return observer;\n    }\n    registerLoop(element: HTMLElement, callback: Callback, options?: Options) {\n        if (!this.loop) {\n            throw Error('VisibilityObserver has no loop instance');\n        }\n        let loopId: string | undefined;\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(x => {\n                const visible = x.isIntersecting;\n                callback(visible, observer);\n                if (visible) {\n                    loopId = this.loop?.subscribeAnim(() => {\n                        callback(visible, observer);\n                    }, options);\n                } else {\n                    this.loop?.unsubscribe(loopId);\n                }\n            });\n        });\n        observer.observe(element);\n        const disconnect = () => {\n            observer.disconnect();\n            this.loop?.unsubscribe(loopId);\n        };\n        this.loopInstances.push({ observer, disconnect });\n        return { observer, disconnect };\n    }\n}", "import { highlightHTMLElement, querySelector } from \"@src/utils/helpers\";\nimport type { Save } from \"../Game\";\nimport type { ComponentsConfig } from \"./componentHandler\";\n\nexport default abstract class Component {\n    private _page: HTMLElement;\n    private _menuItem: HTMLElement;\n    constructor(readonly name: keyof ComponentsConfig) {\n        this._page = querySelector(`.p-game .p-${name}`);\n        this._menuItem = querySelector(`.p-game [data-main-menu] [data-tab-target=\"${name}\"]`);\n\n        highlightHTMLElement(this._menuItem, 'click');\n    }\n\n    get page() {\n        return this._page;\n    }\n    get menuItem() {\n        return this._menuItem;\n    }\n\n    abstract save(saveObj: Save): void;\n}", "import { StatModifier } from \"@src/game/mods\";\nimport { highlightHTMLElement } from \"@src/utils/helpers\";\nimport type { AttackSkill, BuffSkill, Skill } from \"./Skills\";\nimport type Skills from \"./Skills\";\nimport Game from '@src/game/Game';\nimport Player from '@src/game/Player';\n\nexport interface SkillSlot {\n    readonly element: HTMLElement;\n    readonly skill?: Skill;\n    setSkill(skill?: Skill): void;\n    readonly canEnable: boolean;\n    readonly canTrigger: boolean;\n    readonly canRemove: boolean;\n    readonly canAutomate: boolean;\n    trigger?: () => void;\n}\n\nexport interface Triggerable {\n    trigger: () => void;\n}\n\n\nexport class AttackSkillSlot implements SkillSlot {\n    readonly element: HTMLElement;\n    private readonly progressBar: HTMLProgressElement;\n    private _skill: AttackSkill;\n    constructor(skills: Skills) {\n\n        this.element = this.createElement();\n        this.progressBar = this.element.querySelectorForce<HTMLProgressElement>('progress');\n\n        skills.page.querySelectorForce('[data-attack-skill-slot]').appendChild(this.element);\n        this._skill = skills.attackSkills[0]!;\n    }\n    get canEnable() {\n        return true;\n    }\n    get canTrigger() {\n        return false;\n    }\n    get canRemove() {\n        return false;\n    }\n    get canAutomate() {\n        return false;\n    }\n\n    get skill() {\n        return this._skill;\n    }\n\n    setSkill(skill: AttackSkill) {\n        this.removeModifiers();\n        this._skill = skill;\n        this.element.querySelectorForce('[data-skill-name]').textContent = skill.rank.config.name || 'unknown';\n\n        this.applyModifiers();\n    }\n\n    removeModifiers() {\n        Player.modDB.removeBySource(this._skill?.sourceName);\n    }\n    applyModifiers() {\n        Player.modDB.add(this._skill.sourceName, ...[new StatModifier({ name: 'BaseDamageMultiplier', valueType: 'Base', value: this._skill.rank.config.baseDamageMultiplier })]);\n        Player.modDB.add(this._skill.sourceName, ...[new StatModifier({ name: 'AttackSpeed', valueType: 'Base', value: this._skill.rank.config.attackSpeed })]);\n        Player.modDB.add(this._skill.sourceName, ...[new StatModifier({ name: 'AttackManaCost', valueType: 'Base', value: this._skill.rank.config.manaCost || 0 })]);\n\n        Player.modDB.add(this._skill.sourceName, ...this._skill.rank.mods.flatMap(x => x.copy().stats));\n    }\n\n    updateProgressBar() {\n        const pct = Player.attackTime / Player.attackWaitTime;\n        this.progressBar.value = pct > 1 ? 0 : pct;\n    }\n\n    protected createElement() {\n        const li = document.createElement('li');\n        li.classList.add('s-skill-slot', 'g-list-item');\n        li.setAttribute('data-tab-target', 'attack');\n        li.insertAdjacentHTML('beforeend', '<div data-skill-name></div>');\n        li.insertAdjacentHTML('beforeend', `<progress value=\"0\" max=\"1\"></progress>`);\n        return li;\n    }\n}\n\nexport class BuffSkillSlot implements SkillSlot, Triggerable {\n    readonly element: HTMLElement;\n    private readonly progressBar: HTMLProgressElement;\n    private _skill?: BuffSkill;\n    private _automate = false;\n    private _time = 0;\n    private _duration = 0;\n    private _running = false;\n\n    constructor(private readonly skills: Skills) {\n        this.element = this.createElement();\n        this.progressBar = this.element.querySelectorForce<HTMLProgressElement>('progress');\n        this.setSkill(undefined);\n\n        const savedSlots = Game.saveObj?.skills?.buffSkillSlotList;\n        if (savedSlots) {\n            const savedSlot = savedSlots.find(x => x?.index === skills.buffSkillSlots.length);\n            if (savedSlot) {\n                const skill = skills.buffSkills.find(x => x.name === savedSlot.name);\n                if (skill) {\n                    skill.setRankByIndex(savedSlot.rankIndex || 0);\n                    this.setSkill(skill);\n                    this._time = savedSlot.time || 0;\n                    this._automate = savedSlot.automate || false;\n                    if (savedSlot.running) {\n                        this.loop();\n                    } else {\n                        this.tryTriggerLoop();\n                    }\n\n                }\n            }\n        }\n        highlightHTMLElement(skills.menuItem, 'click');\n        highlightHTMLElement(this.element, 'mouseover');\n    }\n\n    get canEnable() {\n        return !this._running;\n    }\n    get canTrigger() {\n        return !!this._skill && !this._running && this.sufficientMana;\n    }\n    get canRemove() {\n        return !!this._skill && !this._running;\n    }\n    get canAutomate() {\n        return !!this._skill;\n    }\n    get sufficientMana() {\n        return Player.stats[\"Current Mana\"].get() > (this.skill?.rank.config.manaCost || 0);\n    }\n    get automate() {\n        return this._automate;\n    }\n    get time() {\n        return this._time;\n    }\n    get running() {\n        return this._running;\n    }\n\n    get skill() {\n        return this._skill;\n    }\n\n    setSkill(skill?: BuffSkill) {\n        this._skill = skill;\n        this._automate = false;\n        this.element.querySelectorForce('[data-skill-name]').textContent = skill?.rank.config.name || '[Empty Slot]';\n    }\n\n    trigger() {\n        if (!this._skill || !this.canTrigger) {\n            return;\n        }\n        Player.stats[\"Current Mana\"].subtract(this._skill.rank.config.manaCost || 0);\n        this.loop();\n        return true;\n    }\n\n    toggleAutomate() {\n        this._automate = !this._automate;\n        if (this._automate && !this._running) {\n            this.tryTriggerLoop();\n        }\n    }\n\n    //Start\n    private tryTriggerLoop() {\n        if (!this.skill) {\n            return;\n        }\n        const loopEval = () => {\n            if (!this._automate) {\n                Player.stats[\"Current Mana\"].removeListener('change', loopEval);\n                return;\n            }\n            if (this.canTrigger) {\n                Player.stats[\"Current Mana\"].removeListener('change', loopEval);\n                this.trigger();\n            }\n        };\n        Player.stats[\"Current Mana\"].addListener('change', loopEval);\n        loopEval();\n    }\n    //Loop\n    private loop() {\n        if (!this.skill) {\n            return;\n        }\n        const calcDuration = (multiplier: number) => {\n            const baseDuration = this.skill?.rank.config.baseDuration || 0;\n            this._duration = baseDuration * multiplier;\n        };\n\n        calcDuration(Player.stats[\"Skill Duration Multiplier\"].get());\n        this._time = this._time > 0 ? this._time : this._duration;\n        this._running = true;\n        Player.stats[\"Skill Duration Multiplier\"].addListener('change', calcDuration);\n        this.applyModifiers();\n        const loopId = Game.gameLoop.subscribe((dt) => {\n            if (!this.skill) {\n                return;\n            }\n\n            if (this._time <= 0 || !this._running) {\n                this._time = 0;\n                Game.gameLoop.unsubscribe(loopId);\n                Player.stats[\"Skill Duration Multiplier\"].removeListener('change', calcDuration);\n                this.stop();\n                return;\n            }\n            this._time -= dt;\n        });\n    }\n\n    //End\n    private stop() {\n        if (!this._skill) {\n            throw Error();\n        }\n\n        this.removeModifiers();\n        this.progressBar.value = 0;\n        this._running = false;\n\n        if (this._automate) {\n            this.tryTriggerLoop();\n        }\n\n        if (this === this.skills.activeSkillSlot) {\n            this.skills.skillViewer.createView(this._skill, -1);\n        }\n    }\n\n    cancel() {\n        this._running = false;\n    }\n\n    private removeModifiers() {\n        if (this._skill) {\n            Player.modDB.removeBySource(this._skill.sourceName);\n        }\n    }\n    private applyModifiers() {\n        if (this._skill) {\n            Player.modDB.add(this._skill.sourceName, ...this._skill.rank.mods.flatMap(x => x.copy().stats));\n        }\n    }\n\n    updateProgressBar() {\n        if (!this._running) {\n            return;\n        }\n        this.progressBar.value = this._time / this._duration || 0;\n    }\n\n    protected createElement() {\n        const li = document.createElement('li');\n        li.classList.add('s-skill-slot', 'g-list-item');\n        li.setAttribute('data-tab-target', 'buff');\n        li.insertAdjacentHTML('beforeend', '<div data-skill-name></div>');\n        li.insertAdjacentHTML('beforeend', `<progress class=\"small\" value=\"0\" max=\"1\"></progress>`);\n        return li;\n    }\n\n}", "import Statistics from \"@src/game/Statistics\";\nimport type Skills from \"./Skills\";\nimport { AttackSkill, BuffSkill, Skill } from \"./Skills\";\nimport { BuffSkillSlot, Triggerable } from \"./skillSlots\";\n\nexport default class SkillViewer {\n    private rankIndex = 0;\n\n    private readonly container: HTMLElement;\n    private readonly decrementRankButton: HTMLButtonElement;\n    private readonly incrementRankButton: HTMLButtonElement;\n    private readonly enableButton: HTMLButtonElement;\n    private readonly triggerButton: HTMLButtonElement;\n    private readonly automateButton: HTMLButtonElement;\n    private readonly removeButton: HTMLButtonElement;\n    private readonly unlockButton: HTMLButtonElement;\n    private readonly cancelButton: HTMLButtonElement;\n\n    constructor(private readonly skills: Skills) {\n        this.container = skills.page.querySelectorForce('[data-skill-info]');\n\n        this.decrementRankButton = this.container.querySelectorForce('header [data-type=\"decrement\"]');\n        this.incrementRankButton = this.container.querySelectorForce('header [data-type=\"increment\"]');\n        this.enableButton = this.container.querySelectorForce('[data-enable]');\n        this.triggerButton = this.container.querySelectorForce('[data-trigger]');\n        this.automateButton = this.container.querySelectorForce('[data-automate]');\n        this.removeButton = this.container.querySelectorForce('[data-remove]');\n        this.unlockButton = this.container.querySelectorForce('[data-unlock]');\n        this.cancelButton = this.container.querySelectorForce('[data-cancel]');\n\n        this.decrementRankButton.addEventListener('click', () => {\n            this.createView(skills.activeSkill!, this.rankIndex - 1);\n        });\n        this.incrementRankButton.addEventListener('click', () => {\n            this.createView(skills.activeSkill!, this.rankIndex + 1);\n        });\n\n        this.enableButton.addEventListener('click', () => {\n            skills.activeSkill.setRankByIndex(this!.rankIndex);\n            skills.activeSkillSlot.setSkill(skills.activeSkill);\n            this.createView(skills.activeSkill!, this.rankIndex);\n        });\n        this.removeButton.addEventListener('click', () => {\n            if (skills.activeSkillSlot.canRemove) {\n                skills.activeSkillSlot.setSkill(undefined);\n                this.createView(skills.activeSkill, this.rankIndex);\n            }\n        });\n        this.triggerButton.addEventListener('click', () => {\n            if (skills.activeSkillSlot.canTrigger) {\n                (skills.activeSkillSlot as Triggerable).trigger();\n                this.createView(skills.activeSkillSlot.skill!, this.rankIndex);\n            }\n        });\n        this.automateButton.addEventListener('click', () => {\n            const skillSlot = skills.activeSkillSlot as BuffSkillSlot;\n            if (skillSlot instanceof BuffSkillSlot && skillSlot.skill) {\n                skillSlot.toggleAutomate();\n                this.createView(skillSlot.skill, this.rankIndex);\n            }\n        });\n\n        this.unlockButton.addEventListener('click', () => {\n            const rank = this.skills.activeSkill?.ranks[this.rankIndex!];\n            if (rank) {\n                Statistics.gameStats.Gold.subtract(rank.config.goldCost || 0);\n                rank.unlocked = true;\n                this.createView(this.skills.activeSkill, this.rankIndex);\n            }\n        });\n        this.cancelButton.addEventListener('click', () => {\n            if (this.skills.activeSkillSlot instanceof BuffSkillSlot) {\n                this.skills.activeSkillSlot.cancel();\n                this.createView(this.skills.activeSkill, this.rankIndex);\n            }\n        });\n\n\n        Statistics.gameStats.Gold.addListener('change', x => {\n            if (this.skills.page.classList.contains('hidden')) {\n                return;\n            }\n            const rank = this.skills.activeSkill.ranks[this.rankIndex];\n            if (rank && !rank.unlocked) {\n                if (rank.config.goldCost <= x) {\n                    this.unlockButton.disabled = false;\n                }\n            }\n        });\n    }\n\n    createView(skill: Skill, rankIndex?: number) {\n        if (typeof rankIndex === 'number') {\n            this.rankIndex = rankIndex;\n        } else {\n            this.rankIndex = skill.rankIndex;\n        }\n\n        const rank = skill.ranks[this.rankIndex];\n        if (!rank) {\n            throw RangeError('rank index out of bounds');\n        }\n\n        //header\n        {\n            this.container.querySelectorForce('[data-title]').textContent = rank.config.name;\n            this.decrementRankButton.style.visibility = 'hidden';\n            this.incrementRankButton.style.visibility = 'hidden';\n            if (skill.ranks.length > 1) {\n                this.decrementRankButton.style.visibility = 'visible';\n                this.incrementRankButton.style.visibility = 'visible';\n                this.decrementRankButton.disabled = this.rankIndex <= 0;\n                this.incrementRankButton.disabled = !rank.unlocked || this.rankIndex >= skill.ranks.length - 1;\n            }\n        }\n\n        //stats\n        {\n            const table = this.container.querySelectorForce('table');\n            table.replaceChildren();\n            table.insertAdjacentHTML('beforeend', `<tr><td>Mana Cost</td><td>${rank?.config.manaCost.toFixed()}</td></tr>`);\n            if (skill instanceof AttackSkill) {\n                table.insertAdjacentHTML('beforeend', `<tr><td>Attack Speed</td><td>${skill.ranks[this.rankIndex]?.config.attackSpeed.toFixed(2)}</td></tr>`);\n                table.insertAdjacentHTML('beforeend', `<tr><td>Base Damage Multiplier</td><td>${skill.ranks[this.rankIndex]?.config.baseDamageMultiplier.toFixed()}%</td></tr>`);\n            } else if (skill instanceof BuffSkill) {\n                table.insertAdjacentHTML('beforeend', `<tr><td>Duration</td><td>${skill.ranks[this.rankIndex]?.config.baseDuration.toFixed()}s</td></tr>`);\n            }\n        }\n\n        //mods\n        if (rank.config.mods) {\n            const modElements: HTMLElement[] = [];\n            for (const mod of rank.mods) {\n                const modElement = document.createElement('div');\n                modElement.classList.add('g-mod-desc');\n                modElement.textContent = mod.desc;\n                modElements.push(modElement);\n            }\n            this.container.querySelectorForce('.s-mods').replaceChildren(...modElements);\n        }\n\n        const activeSkillSlot = this.skills.activeSkillSlot;\n\n        this.enableButton.disabled = !this.validateEnableButton(skill, rank);\n        this.enableButton.classList.toggle('hidden', !rank.unlocked);\n        if (rank.unlocked && activeSkillSlot instanceof BuffSkillSlot) {\n            if (activeSkillSlot.skill?.rank === rank) {\n                this.enableButton.classList.add('hidden');\n            }\n        }\n\n\n        this.unlockButton.classList.toggle('hidden', rank.unlocked);\n        this.unlockButton.disabled = Statistics.gameStats.Gold.get() < rank.config.goldCost;\n        this.unlockButton.innerHTML = `<span>Unlock <span class=\"g-gold\">${rank.config.goldCost}</span></span>`;\n\n\n\n\n\n        this.triggerButton.classList.add('hidden');\n        this.cancelButton.classList.add('hidden');\n        this.automateButton.classList.add('hidden');\n        this.removeButton.classList.add('hidden');\n\n        if (activeSkillSlot instanceof BuffSkillSlot && activeSkillSlot.skill?.rank === rank) {\n\n            this.triggerButton.classList.toggle('hidden', activeSkillSlot.running);\n            this.triggerButton.disabled = !activeSkillSlot.canTrigger;\n            this.cancelButton.classList.toggle('hidden', !activeSkillSlot.running);\n            this.cancelButton.disabled = activeSkillSlot.automate;\n\n            this.automateButton.classList.remove('hidden');\n            this.automateButton.disabled = !activeSkillSlot.canAutomate;\n            this.automateButton.textContent = `Auto ${activeSkillSlot.automate ? 'On' : 'Off'}`;\n            this.automateButton.setAttribute('data-role', activeSkillSlot.automate ? 'confirm' : 'cancel');\n\n            this.removeButton.classList.toggle('hidden', activeSkillSlot.skill?.rank !== rank);\n            this.removeButton.disabled = !activeSkillSlot.canRemove;\n        }\n    }\n\n    private validateEnableButton(skill: Skill, rank: Skill['rank']) {\n        if (!rank.unlocked) {\n            return false;\n        }\n        if (this.skills.activeSkillSlot.skill?.rank === rank) {\n            return false;\n        }\n        if (skill instanceof BuffSkill) {\n            if (this.skills.buffSkillSlots.filter(x => x !== this.skills.activeSkillSlot).some(x => x.skill === skill)) {\n                return false;\n            }\n        }\n\n        return this.skills.activeSkillSlot.canEnable;\n    }\n}", "import { highlightHTMLElement, registerTabs } from \"@src/utils/helpers\";\nimport Game, { Save } from \"../../Game\";\nimport Statistics from '../../Statistics';\nimport { Modifier } from \"../../mods\";\nimport Component from \"../Component\";\nimport SkillViewer from \"./SkillViewer\";\nimport { AttackSkillSlot, BuffSkillSlot, SkillSlot } from \"./skillSlots\";\n\n\nexport interface SkillRankData<T> {\n    config: T;\n    mods: Modifier[];\n    rankProgress: number;\n    startRankProgress: number;\n}\n\nexport default class Skills extends Component {\n    activeSkill: Skill;\n    readonly attackSkills: AttackSkill[] = [];\n    readonly buffSkills: BuffSkill[] = [];\n    activeSkillSlot: SkillSlot;\n\n    readonly attackSkillSlot: AttackSkillSlot;\n    readonly buffSkillSlots: BuffSkillSlot[] = [];\n\n    readonly skillViewer: SkillViewer;\n    constructor(readonly config: SkillsConfig) {\n        super('skills');\n        this.skillViewer = new SkillViewer(this);\n        {\n            this.attackSkillSlot = new AttackSkillSlot(this);\n            this.activeSkillSlot = this.attackSkillSlot;\n\n            const attackSkillListContainer = this.page.querySelectorForce<HTMLElement>('[data-attack-skill-list]');\n            this.attackSkillSlot.element.addEventListener('click', () => {\n                this.activeSkillSlot = this.attackSkillSlot;\n                this.selectSkillListItem(this.attackSkillSlot.skill, attackSkillListContainer);\n            });\n\n            for (const skill of config.attackSkills.skillList) {\n                const levelReq = Array.isArray(skill) ? skill[0]!.levelReq : skill.levelReq;\n                Statistics.gameStats.Level.registerCallback(levelReq || 1, () => {\n                    const attackSkill = new AttackSkill(skill);\n                    this.attackSkills.push(attackSkill);\n                    this.addSkillListItem(attackSkill, attackSkillListContainer);\n                });\n            }\n\n            const savedAttackSkillSlot = Game.saveObj?.skills?.attackSkillSlot;\n            if (savedAttackSkillSlot) {\n                const savedAttackSkill = this.attackSkills.find(x => x.name === savedAttackSkillSlot.name);\n                if (savedAttackSkill) {\n                    savedAttackSkill?.setRankByIndex(savedAttackSkillSlot.rankIndex || 0);\n                    this.attackSkillSlot.setSkill(savedAttackSkill);\n                }\n            }\n            if (!this.attackSkillSlot.skill) {\n                this.attackSkillSlot.setSkill(this.attackSkills[0]!);\n            }\n            this.attackSkillSlot.element.click();\n            this.activeSkill = this.attackSkillSlot.skill;\n        }\n\n        if (config.buffSkills) {\n            this.buffSkills = [...config.buffSkills.skillList.sort((a, b) => (a.levelReq || 1) - (b.levelReq || 1)).map(x => new BuffSkill(x))];\n            Object.seal(this.buffSkills);\n            const buffSkillSlotContainer = this.page.querySelectorForce('.s-skill-slots [data-buff-skill-slots]');\n            const buffSkillListContainer = this.page.querySelectorForce<HTMLElement>('[data-buff-skill-list]');\n            for (const buffSkillConfig of config.buffSkills.skillSlots) {\n                Statistics.gameStats.Level.registerCallback(buffSkillConfig.levelReq, () => {\n                    const slot = new BuffSkillSlot(this);\n                    slot.element.setAttribute('data-tab-target', 'buff');\n                    slot.element.addEventListener('click', () => {\n                        this.activeSkillSlot = slot;\n                        this.selectSkillListItem(this.activeSkillSlot.skill, buffSkillListContainer);\n                    });\n                    buffSkillSlotContainer.appendChild(slot.element);\n                    this.buffSkillSlots.push(slot);\n                });\n            }\n\n            for (const skill of this.buffSkills) {\n                Statistics.gameStats.Level.registerCallback(skill.firstRank.config.levelReq || 1, () => {\n                    this.addSkillListItem(skill, buffSkillListContainer);\n                });\n            }\n        }\n\n        Game.visiblityObserver.registerLoop(this.page, visible => {\n            if (visible) {\n                this.attackSkillSlot.updateProgressBar();\n                for (const buffSkillSlot of this.buffSkillSlots) {\n                    buffSkillSlot.updateProgressBar();\n                }\n            }\n        });\n\n        Game.visiblityObserver.register(this.page, visible => {\n            if (visible) {\n                this.skillViewer.createView(this.activeSkill);\n            }\n        });\n\n        registerTabs(this.page.querySelectorForce('.s-skill-slots'), this.page.querySelectorForce('.s-skill-list'));\n        this.attackSkillSlot.element.click();\n    }\n\n    private addSkillListItem(skill: Skill, container: HTMLElement) {\n        const li = document.createElement('li');\n        li.classList.add('g-list-item');\n        li.setAttribute('data-name', skill.name || 'unknown');\n        li.textContent = skill.name || 'unknown';\n        li.addEventListener('click', () => {\n            this.selectSkillListItem(skill, container);\n        });\n        highlightHTMLElement(this.menuItem, 'click');\n        highlightHTMLElement(li, 'mouseover');\n        container.appendChild(li);\n    }\n\n    private selectSkillListItem(skill: Skill | undefined, container: HTMLElement) {\n        const skillInfoContainer = this.page.querySelectorForce<HTMLElement>('[data-skill-info]');\n        skillInfoContainer.classList.toggle('hidden', container.childElementCount === 0);\n        if (skill) {\n            this.activeSkill = skill;\n            container.querySelectorAll('[data-name]').forEach(x => x.classList.toggle('selected', x.getAttribute('data-name') === skill.firstRank!.config.name));\n            this.skillViewer.createView(skill);\n        } else {\n            const element = container.querySelector<HTMLElement>('[data-name]:first-child');\n            element?.click();\n        }\n    }\n\n    save(saveObj: Save): void {\n        saveObj.skills = {\n            attackSkillSlot: {\n                name: this.attackSkillSlot.skill.firstRank?.config.name || 'unknown',\n                rankIndex: this.attackSkillSlot.skill.ranks.indexOf(this.attackSkillSlot.skill.rank),\n            },\n            attackSkillList: this.attackSkills.reduce<AttackSkillSave[]>((a, c) => {\n                for (const rank of c.ranks) {\n                    if (!rank.unlocked) {\n                        continue;\n                    }\n                    a.push({ name: rank.config.name });\n                }\n                return a;\n            }, []),\n            buffSkillSlotList: this.buffSkillSlots.reduce<BuffSkillSlotSave[]>((a, c) => {\n                if (!c.skill) {\n                    return a;\n                }\n                const { automate, time, running } = c;\n                const name = c.skill?.name;\n                const index = this.buffSkillSlots.indexOf(c);\n                const rankIndex = c.skill.ranks.indexOf(c.skill.rank);\n                a.push({ automate, index, name, rankIndex, time, running });\n                return a;\n            }, []),\n            buffSkillList: this.buffSkills.reduce<BuffSkillSave[]>((a, c) => {\n                for (const rank of c.ranks) {\n                    if (!rank.unlocked) {\n                        continue;\n                    }\n                    a.push({ name: rank.config.name });\n                }\n                return a;\n            }, [])\n        };\n    }\n}\n\ninterface Rank<T extends AttackSkillConfig | BuffSkillConfig> {\n    config: T;\n    mods: Modifier[];\n    unlocked: boolean;\n}\n\nexport abstract class Skill {\n    readonly abstract ranks: Rank<AttackSkillConfig | BuffSkillConfig>[];\n    abstract rank: Rank<AttackSkillConfig | BuffSkillConfig>;\n    protected _rankIndex = 0;\n\n    get firstRank() {\n        return this.ranks[0]!;\n    }\n    get sourceName() {\n        return `Skill/${this.firstRank!.config.name || 'unknown'}`;\n    }\n    get name() {\n        return this.firstRank.config.name;\n    }\n    get rankIndex() {\n        return this._rankIndex;\n    }\n\n    setRankByIndex(index: number) {\n        const rank = this.ranks[index];\n        this._rankIndex = index;\n        if (!rank) {\n            throw RangeError();\n        }\n        this.rank = rank;\n    }\n\n    getNextRank() {\n        return this.ranks[this._rankIndex + 1];\n    }\n}\n\nexport class AttackSkill extends Skill {\n    readonly ranks: Rank<AttackSkillConfig>[] = [];\n    rank: Rank<AttackSkillConfig>;\n    constructor(configs: AttackSkillConfig | AttackSkillConfig[]) {\n        super();\n        configs = Array.isArray(configs) ? configs : [configs];\n        for (const config of configs) {\n            this.ranks.push({\n                config,\n                mods: config.mods.map(x => new Modifier(x)),\n                unlocked: !!Game.saveObj?.skills?.attackSkillList?.find(x => x?.name === config.name) || config.goldCost === 0\n            });\n        }\n        this.rank = this.firstRank as Rank<AttackSkillConfig>;\n    }\n}\n\nexport class BuffSkill extends Skill {\n    readonly ranks: Rank<BuffSkillConfig>[] = [];\n    rank: Rank<BuffSkillConfig>;\n\n    constructor(configs: BuffSkillConfig | BuffSkillConfig[]) {\n        super();\n        configs = Array.isArray(configs) ? configs : [configs];\n        for (const config of configs) {\n            this.ranks.push({\n                config,\n                mods: config.mods.map(x => new Modifier(x)),\n                unlocked: !!Game.saveObj?.skills?.buffSkillList?.find(x => x?.name === config.name) || config.goldCost === 0\n            });\n        }\n        this.rank = this.firstRank as Rank<BuffSkillConfig>;\n    }\n}\n\n\n//config\nexport interface SkillsConfig {\n    attackSkills: {\n        skillList: (AttackSkillConfig | AttackSkillConfig[])[]\n    };\n    buffSkills?: {\n        skillSlots: BuffSkillSlotConfig[];\n        skillList: (BuffSkillConfig | BuffSkillConfig)[];\n    }\n}\n\nexport interface AttackSkillConfig {\n    name: string;\n    attackSpeed: number;\n    manaCost: number;\n    goldCost: number;\n    baseDamageMultiplier: number;\n    levelReq?: number;\n    mods: string[];\n}\n\nexport interface BuffSkillSlotConfig {\n    levelReq: number;\n}\nexport interface BuffSkillConfig {\n    name: string;\n    baseDuration: number;\n    manaCost: number;\n    goldCost: number;\n    levelReq: number;\n    mods: string[];\n}\n\n//save\nexport interface SkillsSave {\n    attackSkillSlot: AttackSkillSlotSave;\n    attackSkillList: AttackSkillSave[];\n    buffSkillSlotList: BuffSkillSlotSave[];\n    buffSkillList: BuffSkillSave[];\n}\n\ninterface AttackSkillSlotSave {\n    name: string;\n    rankIndex: number;\n}\ninterface AttackSkillSave {\n    name: string;\n}\ninterface BuffSkillSlotSave {\n    name: string;\n    index: number;\n    time: number;\n    automate: boolean;\n    running: boolean;\n    rankIndex: number;\n}\ninterface BuffSkillSave {\n    name: string;\n}", "import type { ModifierTag } from \"../../mods\";\nimport type { ItemModifier } from \"./Items\";\n\nexport type CraftId = keyof typeof craftTemplates;\nexport interface CraftData {\n    itemModList: ItemModifier[];\n    modList: ItemModifier[];\n}\n\nconst MAX_ITEM_MODS = 6;\nconst REFORGE_HIGHER_CHANCE_SAME_MODS = 20;\nconst REFORGE_LOWER_CHANCE_SAME_MODS = 0.02;\n\nexport const craftTemplates = {\n    reforge: {\n        desc: 'Reforge the item with new random modifiers',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList),\n        getItemMods: (data: CraftData) => new Crafter().addMultiple(data.modList, generateReforgeModCount(0)).modList\n    },\n    reforgeIncludePhysical: {\n        desc: 'Reforge the item with new random modifiers, including a [physical] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).modsContainsTag(data.modList, 'Physical'),\n        getItemMods: (data: CraftData) => new Crafter().addOneByTag(data.modList, 'Physical').addMultiple(data.modList, generateReforgeModCount(1)).modList\n    },\n    reforgeIncludeElemental: {\n        desc: 'Reforge the item with new random modifiers, including a [elemental] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).modsContainsTag(data.modList, 'Elemental'),\n        getItemMods: (data: CraftData) => new Crafter().addOneByTag(data.modList, 'Elemental').addMultiple(data.modList, generateReforgeModCount(1)).modList\n    },\n    reforgeIncludeMana: {\n        desc: 'Reforge the item with new random modifiers, including a [mana] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).modsContainsTag(data.modList, 'Mana'),\n        getItemMods: (data: CraftData) => new Crafter().addOneByTag(data.modList, 'Mana').addMultiple(data.modList, generateReforgeModCount(1)).modList\n    },\n    reforgeIncludeCritical: {\n        desc: 'Reforge the item with new random modifiers, including a [critical] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).modsContainsTag(data.modList, 'Critical'),\n        getItemMods: (data: CraftData) => new Crafter().addOneByTag(data.modList, 'Critical').addMultiple(data.modList, generateReforgeModCount(1)).modList\n    },\n    reforgeIncludeBleed: {\n        desc: 'Reforge the item with new random modifiers, including a [bleed] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).modsContainsTag(data.modList, 'Bleed'),\n        getItemMods: (data: CraftData) => new Crafter().addOneByTag(data.modList, 'Bleed').addMultiple(data.modList, generateReforgeModCount(1)).modList\n    },\n    reforgeIncludeBurn: {\n        desc: 'Reforge the item with new random modifiers, including a [burn] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).modsContainsTag(data.modList, 'Burn'),\n        getItemMods: (data: CraftData) => new Crafter().addOneByTag(data.modList, 'Burn').addMultiple(data.modList, generateReforgeModCount(1)).modList\n    },\n    reforgeIncludeMinion: {\n        desc: 'Reforge the item with new random modifiers, including a [minion] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).modsContainsTag(data.modList, 'Minion'),\n        getItemMods: (data: CraftData) => new Crafter().addOneByTag(data.modList, 'Minion').addMultiple(data.modList, generateReforgeModCount(1)).modList\n    },\n    reforgeHigherChanceSameMods: {\n        desc: 'Reforge the item with a higher chance of receiving the same modifiers',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsIsNotEmpty(data.modList),\n        getItemMods: (data: CraftData) => {\n            const mods = [...data.modList].map(x => x.copy()).reduce((a, c) => {\n                if (data.itemModList.some(x => x === c)) {\n                    c.weight *= REFORGE_HIGHER_CHANCE_SAME_MODS;\n                }\n                a.push(c);\n                return a;\n            }, [] as ItemModifier[]);\n            return new Crafter().addMultiple(mods, generateReforgeModCount(0)).modList;\n        }\n    },\n    reforgeLowerChanceSameMods: {\n        desc: 'Reforge the item with a lower chance of receiving the same modifiers',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsIsNotEmpty(data.modList),\n        getItemMods: (data: CraftData) => {\n            const mods = [...data.modList].map(x => x.copy()).reduce((a, c) => {\n                if (data.itemModList.some(x => x === c)) {\n                    c.weight *= REFORGE_LOWER_CHANCE_SAME_MODS;\n                }\n                a.push(c);\n                return a;\n            }, [] as ItemModifier[]);\n            return new Crafter().addMultiple(mods, generateReforgeModCount(0)).modList;\n        }\n    },\n    addRandom: {\n        desc: 'Add a random modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasSpaceForMods(data.itemModList).modsIsNotEmpty(data.modList),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).addOne(data.modList).modList\n    },\n    addPhysical: {\n        desc: 'Add a [physical] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).itemHasSpaceForMods(data.itemModList).itemCanCraftModWithTag(data.itemModList, data.modList, 'Physical'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).addOneByTag(data.modList, 'Physical').modList\n    },\n    addElemental: {\n        desc: 'Add a [elemental] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).itemHasSpaceForMods(data.itemModList).itemCanCraftModWithTag(data.itemModList, data.modList, 'Elemental'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).addOneByTag(data.modList, 'Elemental').modList\n    },\n    addMana: {\n        desc: 'Add a [mana] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).itemHasSpaceForMods(data.itemModList).itemCanCraftModWithTag(data.itemModList, data.modList, 'Mana'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).addOneByTag(data.modList, 'Mana').modList\n    },\n    addCritical: {\n        desc: 'Add a [critical] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).itemHasSpaceForMods(data.itemModList).itemCanCraftModWithTag(data.itemModList, data.modList, 'Critical'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).addOneByTag(data.modList, 'Critical').modList\n    },\n    addBleed: {\n        desc: 'Add a [bleed] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).itemHasSpaceForMods(data.itemModList).itemCanCraftModWithTag(data.itemModList, data.modList, 'Bleed'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).addOneByTag(data.modList, 'Bleed').modList\n    },\n    addBurn: {\n        desc: 'Add a [burn] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).itemHasSpaceForMods(data.itemModList).itemCanCraftModWithTag(data.itemModList, data.modList, 'Burn'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).addOneByTag(data.modList, 'Burn').modList\n    },\n    addMinion: {\n        desc: 'Add a [minion] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modList).itemHasSpaceForMods(data.itemModList).itemCanCraftModWithTag(data.itemModList, data.modList, 'Minion'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).addOneByTag(data.modList, 'Minion').modList\n    },\n    removeRandom: {\n        desc: 'Remove a random modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().modList\n    },\n    removePhysical: {\n        desc: 'Remove a [physical] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.itemModList, 'Physical'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeWithTag('Physical').modList\n    },\n    removeElemental: {\n        desc: 'Remove an [elemental] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.itemModList, 'Elemental'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeWithTag('Elemental').modList\n    },\n    removeMinion: {\n        desc: 'Remove a [minion] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.itemModList, 'Minion'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeWithTag('Minion').modList\n    },\n    removeRandomAddRandom: {\n        desc: 'Remove a random modifier and add a new random modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsIsNotEmpty(data.modList),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().addOne(data.modList).modList\n    },\n    removeRandomAddPhysical: {\n        desc: 'Remove a random modifier and add a new [physical] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.modList, 'Physical').itemCanCraftModWithTag(data.itemModList, data.modList, 'Physical'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().addOneByTag(data.modList, 'Physical').modList\n    },\n    removeRandomAddElemental: {\n        desc: 'Remove a random modifier and add a new [elemental] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.modList, 'Elemental').itemCanCraftModWithTag(data.itemModList, data.modList, 'Elemental'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().addOneByTag(data.modList, 'Elemental').modList\n    },\n    removeRandomAddMana: {\n        desc: 'Remove a random modifier and add a new [mana] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.modList, 'Mana').itemCanCraftModWithTag(data.itemModList, data.modList, 'Mana'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().addOneByTag(data.modList, 'Mana').modList\n    },\n    removeRandomAddCritical: {\n        desc: 'Remove a random modifier and add a new [critical] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.modList, 'Critical').itemCanCraftModWithTag(data.itemModList, data.modList, 'Critical'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().addOneByTag(data.modList, 'Critical').modList\n    },\n    removeRandomAddBleed: {\n        desc: 'Remove a random modifier and add a new [bleed] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.modList, 'Bleed').itemCanCraftModWithTag(data.itemModList, data.modList, 'Bleed'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().addOneByTag(data.modList, 'Bleed').modList\n    },\n    removeRandomAddBurn: {\n        desc: 'Remove a random modifier and add a new [burn] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.modList, 'Burn').itemCanCraftModWithTag(data.itemModList, data.modList, 'Burn'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().addOneByTag(data.modList, 'Burn').modList\n    },\n    removeRandomAddMinion: {\n        desc: 'Remove a random modifier and add a new [minion] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.modList, 'Minion').itemCanCraftModWithTag(data.itemModList, data.modList, 'Minion'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().addOneByTag(data.modList, 'Minion').modList\n    }\n};\n\n\nclass CraftValidator {\n    errors: string[] = [];\n    constructor() {\n        this.errors = [];\n    }\n\n    itemHasSpaceForMods(itemModList: ItemModifier[]) {\n        if (itemModList.length >= MAX_ITEM_MODS) {\n            this.errors.push('Item cannot have any more modifiers');\n        }\n        return this;\n    }\n\n    itemHasModifiers(itemModList: ItemModifier[]) {\n        if (itemModList.length === 0) {\n            this.errors.push('Item has no modifiers');\n        }\n        return this;\n    }\n\n    itemCanCraftModWithTag(itemModList: ItemModifier[], itemMods: ItemModifier[], tag: ModifierTag) {\n        const filteredMods = itemMods.filter(x => x.template.tags.includes(tag) && !itemModList.some(y => y.compare(x)));\n        if (filteredMods.length === 0) {\n            this.errors.push(`There are no ${tag} modifiers available`);\n        }\n        return this;\n    }\n\n    modsIsNotEmpty(itemModList: ItemModifier[]) {\n        if (itemModList.length === 0) {\n            this.errors.push('No modifiers available');\n        }\n        return this;\n    }\n\n    modsContainsTag(itemModList: ItemModifier[], tag: ModifierTag) {\n        if (!itemModList.some(x => x.tags.includes(tag))) {\n            this.errors.push(`No modifier was available with the tag: ${tag}`);\n        }\n        return this;\n    }\n}\n\nclass Crafter {\n    modList: ItemModifier[];\n    constructor(itemMods: ItemModifier[] = []) {\n        this.modList = [...itemMods];\n    }\n\n    addOne(itemModList: ItemModifier[]) {\n        this.modList.push(...this.generateMods(itemModList, this.modList, 1));\n        return this;\n    }\n    addOneByTag(itemModList: ItemModifier[], tag: ModifierTag) {\n        itemModList = itemModList.filter(x => x.tags.includes(tag));\n        this.modList.push(...this.generateMods(itemModList, this.modList, 1));\n        return this;\n    }\n\n    addMultiple(itemModList: ItemModifier[], count: number) {\n        this.modList.push(...this.generateMods(itemModList, this.modList, count));\n        return this;\n    }\n\n    removeRandom() {\n        const randomIndex = this.randomRangeInt(0, this.modList.length);\n        this.modList.splice(randomIndex, 1);\n        return this;\n    }\n    removeWithTag(tag: ModifierTag) {\n        const items = this.modList.filter(x => x.tags.includes(tag));\n        const randomIndex = this.randomRangeInt(0, items.length);\n        const itemToRemove = items[randomIndex];\n        if (!itemToRemove) {\n            throw Error(`no mod with tag ${tag} was found`);\n        }\n        this.modList = this.modList.filter(x => x !== itemToRemove);\n        return this;\n    }\n\n    private generateMods(itemModList: ItemModifier[], filterMods: ItemModifier[] = [], count: number) {\n        const newItemMods: ItemModifier[] = [];\n        for (let i = 0; i < count; i++) {\n            const tempArr = [...newItemMods, ...filterMods];\n            itemModList = itemModList.filter(x => !tempArr.some(y => x.templateDesc === y.templateDesc));\n            let weightSum = itemModList.reduce((a, c) => a += c.weight, 0);\n            const random = Math.random() * weightSum;\n            for (const mod of itemModList) {\n                weightSum -= mod.weight;\n                if (weightSum <= random) {\n                    const copy = mod.copy();\n                    copy.stats.forEach(x => x.randomizeValue());\n                    newItemMods.push(copy);\n                    break;\n                }\n            }\n        }\n        return newItemMods;\n    }\n\n    private randomRangeInt(min: number, max: number) {\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n}\n\nconst generateReforgeModCount = (offset = 0) => {\n    const REFORGE_WEIGHTS = [0, 0, 40, 50, 30, 20].slice(offset, 6);\n    let sum = REFORGE_WEIGHTS.reduce((a, c) => a + c);\n    const random = Math.random() * sum;\n    for (const [i, v] of REFORGE_WEIGHTS.entries()) {\n        sum -= v;\n        if (sum <= random) {\n            return i + 1;\n        }\n    }\n    throw Error();\n};", "import Game from \"@src/game/Game\";\nimport Statistics from \"@src/game/Statistics\";\nimport { querySelector } from \"@src/utils/helpers\";\nimport type { CraftId } from \"./crafting\";\nimport type Items from \"./Items\";\n\nexport default class CraftPresets {\n    presets: CraftPreset[] = [];\n    activePreset?: CraftPreset;\n    private readonly modal: HTMLDialogElement;\n    constructor(readonly items: Items) {\n\n        this.modal = this.items.page.querySelectorForce<HTMLDialogElement>('.p-game .p-items [data-preset-modal]');\n\n        //new preset button\n        querySelector('.s-preset-container [data-new]').addEventListener('click', () => {\n            const preset = this.newPreset();\n            this.editActivePreset();\n            preset.element.click();\n        });\n        //edit preset button\n        querySelector('.s-preset-container [data-edit]').addEventListener('click', () => this.editActivePreset());\n\n        //preset modal apply button\n        this.modal.querySelectorForce('[data-apply]').addEventListener('click', () => {\n            if (!this.activePreset) {\n                return;\n            }\n            const newIds = [...this.modal.querySelectorAll<HTMLTableRowElement>('[data-craft-list] table [data-id]')].filter(x => x.classList.contains('selected')).map(x => x.getAttribute('data-id'));\n            this.activePreset!.ids = newIds as CraftId[];\n            const name = this.modal.querySelector<HTMLInputElement>('input[data-name]')!.value;\n            if (name !== this.activePreset.name) {\n                this.activePreset.name = name;\n            }\n            this.selectPreset(this.activePreset);\n        });\n        //preset modal delete button\n        this.modal.querySelectorForce('[data-delete]').addEventListener('click', () => this.deleteActivePreset());\n\n        this.createDefaultPreset();\n        for (const savedPreset of Game.saveObj?.items?.craftPresets || []) {\n            if (savedPreset?.name && savedPreset.ids) {\n                this.newPreset(savedPreset.name, savedPreset.ids as CraftId[]);\n            }\n        }\n    }\n\n    private createDefaultPreset() {\n        const preset = this.newPreset('Default');\n        preset.editable = false;\n        this.selectPreset(preset);\n    }\n\n    newPreset(name = 'New', ids: CraftId[] = this.items.data.craftList.map(x => x.id)) {\n        const preset = new CraftPreset(name, ids);\n        preset.element.addEventListener('click', () => {\n            this.presets.forEach(x => x.element.classList.toggle('selected', x === preset));\n            this.selectPreset(preset);\n        });\n        querySelector('.s-preset-container [data-preset-list]').appendChild(preset.element);\n        this.presets.push(preset);\n        preset.element.click();\n        return preset;\n    }\n\n    selectPreset(preset?: CraftPreset) {\n        this.activePreset = preset;\n        this.items.updateCraftList(this.activePreset?.ids);\n        const canEdit = typeof this.activePreset !== 'undefined' && this.activePreset.editable;\n        this.items.page.querySelector<HTMLButtonElement>('.s-preset-container [data-edit]')!.disabled = !canEdit;\n    }\n\n    editActivePreset() {\n        if (!this.activePreset) {\n            return;\n        }\n        const modal = querySelector<HTMLDialogElement>('.p-game .p-items [data-preset-modal]');\n\n        modal.querySelector<HTMLInputElement>('input[data-name]')!.value = this.activePreset?.name;\n        const filteredCraftList = this.items.data.craftList.filter(x => x.levelReq <= Statistics.gameStats.Level.get());\n        const rows = [] as HTMLTableRowElement[];\n        for (const craftData of filteredCraftList) {\n            const label = this.items.craftDescToHtml(craftData.id);\n            const row = document.createElement('tr');\n            row.classList.add('g-list-item');\n            row.classList.toggle('selected', this.activePreset.ids.includes(craftData.id));\n            row.setAttribute('data-id', craftData.id);\n            row.insertAdjacentHTML('beforeend', `\n                <td>${label}</td>\n                <td>${craftData.levelReq}</td>\n                <td class=\"g-gold\">${craftData.goldCost}</td>`);\n            row.addEventListener('click', () => {\n                row.classList.toggle('selected', !row.classList.contains('selected'));\n            });\n            rows.push(row);\n        }\n\n        modal.querySelector<HTMLTableElement>('[data-craft-list] table tbody')!.replaceChildren(...rows);\n        modal.showModal();\n    }\n\n    deleteActivePreset() {\n        if (!this.activePreset) {\n            return;\n        }\n        this.activePreset.element.remove();\n        this.presets.splice(this.presets.indexOf(this.activePreset), 1);\n        if (this.presets.length === 0) {\n            this.items.updateCraftList();\n            this.selectPreset(undefined);\n        } else {\n            this.presets[0]?.element.click();\n        }\n    }\n}\n\nclass CraftPreset {\n    readonly element: HTMLLIElement;\n    editable = true;\n    constructor(private _name: string, public ids: CraftId[]) {\n        this.element = this.createElement();\n    }\n    get name() {\n        return this._name;\n    }\n    set name(v: string) {\n        this.element.textContent = v;\n    }\n    private createElement() {\n        const li = document.createElement('li');\n        li.classList.add('g-list-item');\n        li.setAttribute('data-name', this.name);\n        li.textContent = this.name;\n        return li;\n    }\n}\n\nexport interface CraftPresetSave {\n    name: string;\n    ids: CraftId[];\n}", "import Component from \"@src/game/components/Component\";\nimport Game, { Save } from \"@src/game/Game\";\nimport { Modifier } from \"@src/game/mods\";\nimport Player from \"@src/game/Player\";\nimport Statistics from \"@src/game/Statistics\";\nimport { highlightHTMLElement, querySelector } from \"@src/utils/helpers\";\nimport { CraftData, CraftId, craftTemplates } from \"./crafting\";\nimport CraftPresets, { CraftPresetSave } from \"./CraftPresets\";\n\n\nexport type ModTables = { [K in keyof ItemsConfig['modLists']]: ItemModifier[] }\n\nexport default class Items extends Component {\n    private readonly itemsPage = querySelector('.p-game .p-items');\n    private readonly itemListContainer = this.itemsPage.querySelectorForce('[data-item-list]');\n    private readonly itemModListContainer = this.itemsPage.querySelectorForce('[data-mod-list]');\n    private readonly itemCraftTableContainer = this.itemsPage.querySelectorForce('.s-craft-container [data-craft-list] table');\n    private readonly craftButton = this.itemsPage.querySelectorForce<HTMLButtonElement>('.s-craft-container [data-craft-button]');\n    private readonly craftMessageElement = this.itemsPage.querySelectorForce<HTMLButtonElement>('[data-craft-message]');\n    readonly items: Item[] = [];\n    private activeItem: Item;\n    private activeCraftId?: CraftId;\n    readonly modLists: ItemModifier[];\n    private presets: CraftPresets;\n    constructor(readonly data: ItemsConfig) {\n        super('items');\n        this.presets = new CraftPresets(this);\n        this.modLists = data.modLists.flatMap(group => group.map(mod => new ItemModifier(mod, group)));\n\n        if (data.itemList.length === 0 || data.itemList.sort((a, b) => a.levelReq - b.levelReq)[0]!.levelReq > data.levelReq) {\n            throw Error('No items available! There must be at least 1 item available');\n        }\n        data.craftList.forEach(x => {\n            if (!Object.keys(craftTemplates).includes(x.id)) {\n                throw Error(`${x.id} is invalid`);\n            }\n        });\n        this.createItems();\n        this.activeItem = this.items[0]!;\n        this.activeItem.element.click();\n\n\n        this.createCraftListItems(data.craftList);\n        this.updateCraftList(this.presets.activePreset?.ids);\n\n        Game.visiblityObserver.register(this.page, visible => {\n            if (visible) {\n                this.updateCraftButton();\n            }\n        });\n\n        Statistics.gameStats.Gold.addListener('change', () => {\n            if (this.page.classList.contains('hidden')) {\n                return;\n            }\n            this.updateCraftButton();\n        });\n\n        Statistics.gameStats.Level.addListener('change', () => this.updateCraftList(this.presets.activePreset?.ids));\n        this.craftButton.addEventListener('click', () => this.performCraft());\n    }\n\n    save(saveObj: Save) {\n        saveObj.items = {\n            items: this.items.reduce<Required<Save>['items']['items']>((a, c) => {\n                a.push({\n                    name: c.name,\n                    modList: c.mods.map(x => ({\n                        text: x.templateDesc,\n                        groupIndex: x.groupIndex,\n                        values: x.stats.map(x => x.value)\n                    }))\n                });\n                return a;\n            }, []),\n            craftPresets: [...this.presets.presets].slice(1).reduce<Required<Save>['items']['craftPresets']>((a, c) => {\n                a.push({ name: c.name, ids: c.ids });\n                return a;\n            }, [])\n        };\n    }\n\n    selectItem(item: Item) {\n        this.activeItem = item;\n        this.updateItemModList();\n        this.updateCraftButton();\n    }\n\n    private updateItemModList() {\n        const elements: HTMLLIElement[] = [];\n        for (const itemMod of this.activeItem.mods.sort(Modifier.sort)) {\n            const desc = itemMod.desc;\n\n            const element = document.createElement('li');\n            element.classList.add('g-mod-desc');\n            element.textContent = desc;\n            elements.push(element);\n        }\n        this.itemModListContainer.replaceChildren(...elements);\n    }\n\n    private createItems() {\n        for (const itemData of this.data.itemList) {\n            Statistics.gameStats.Level.registerCallback(itemData.levelReq, () => {\n                const item = new Item(this, itemData.name);\n                this.items.push(item);\n                this.itemListContainer.appendChild(item.element);\n                highlightHTMLElement(this.menuItem, 'click');\n                highlightHTMLElement(item.element, 'mouseover');\n            });\n        }\n    }\n\n    private createCraftListItems(craftDataList: ItemsConfig['craftList']) {\n        const rows = [] as HTMLTableRowElement[];\n        for (const craftData of craftDataList) {\n            const { goldCost, id, levelReq } = craftData;\n            const tr = document.createElement('tr');\n            tr.classList.add('g-list-item', 'hidden');\n            tr.setAttribute('data-id', id);\n            tr.setAttribute('data-cost', goldCost.toFixed());\n            const label = this.craftDescToHtml(id);\n            tr.insertAdjacentHTML('beforeend', `<tr><td>${label}</td><td class=\"g-gold\" data-cost>${goldCost}</td></tr>`);\n            tr.addEventListener('click', () => {\n                rows.forEach(x => x.classList.toggle('selected', x === tr));\n                this.activeCraftId = id;\n                this.updateCraftButton();\n            });\n\n            Statistics.gameStats.Level.registerCallback(levelReq, () => {\n                tr.setAttribute('data-enabled', '');\n\n                highlightHTMLElement(this.menuItem, 'click');\n                highlightHTMLElement(this.presets.presets[0]!.element, 'mouseover');\n                highlightHTMLElement(tr, 'mouseover');\n            });\n            rows.push(tr);\n        }\n        this.itemCraftTableContainer.replaceChildren(...rows);\n        rows[0]?.click();\n    }\n\n    updateCraftList(ids: CraftId[] = []) {\n        const elements = [...this.itemCraftTableContainer.querySelectorAll<HTMLElement>(`[data-enabled][data-id]`)];\n        elements.forEach(x => {\n            const id = x.getAttribute('data-id') as CraftId;\n            x.classList.toggle('hidden', !ids.includes(id));\n        });\n        const firstElement = elements.find(x => !x.classList.contains('hidden'));\n        firstElement?.click();\n        if (!firstElement) {\n            this.activeCraftId = undefined;\n        }\n        this.updateCraftButton();\n    }\n\n    private generateCraftData(): CraftData {\n        return {\n            itemModList: this.activeItem.mods,\n            modList: this.modLists.filter(x => x.levelReq <= Statistics.gameStats.Level.get())\n        };\n    }\n\n    private updateCraftButton() {\n        const validate = () => {\n            if (!this.activeCraftId) {\n                return 'No Craft Selected';\n            }\n            const costAttr = querySelector(`[data-id=\"${this.activeCraftId}\"]`).getAttribute('data-cost');\n            const cost = Number(costAttr);\n            if (cost > Statistics.gameStats.Gold.get()) {\n                return 'Not Enough Gold';\n            }\n            const template = craftTemplates[this.activeCraftId];\n            const craftData = this.generateCraftData();\n            const validator = template.validate(craftData);\n            if (validator.errors.length > 0) {\n                return validator.errors[0];\n            }\n            return true;\n        };\n\n        const msg = validate();\n        this.craftMessageElement.textContent = typeof (msg) === 'string' ? msg : '';\n        this.craftButton.disabled = typeof msg !== 'boolean';\n    }\n\n    private performCraft() {\n        if (!this.activeCraftId) {\n            return;\n        }\n        const cost = this.data.craftList.find(x => x.id === this.activeCraftId)?.goldCost;\n        if (!cost) {\n            console.error('something went wrong');\n            return;\n        }\n        const template = craftTemplates[this.activeCraftId];\n        const craftData = this.generateCraftData();\n        const validator = template.validate(craftData);\n        if (validator.errors.length > 0) {\n            console.error('something went wrong');\n            return;\n        }\n        this.activeItem.mods = template.getItemMods(craftData);\n        Statistics.gameStats.Gold.subtract(cost);\n\n        this.updateItemModList();\n    }\n\n    craftDescToHtml(id: CraftId) {\n        return craftTemplates[id].desc.replace(/\\[\\w+\\]/g, (x) => {\n            const tag = x.substring(1, x.length - 1);\n            return `<span data-mod-tag=\"${tag}\">${tag}</span>`;\n        });\n    }\n}\n\nclass Item {\n    readonly element: HTMLLIElement;\n    private _mods = [] as ItemModifier[];\n    constructor(readonly items: Items, readonly name: string) {\n        this.element = this.createElement();\n\n        this.tryLoad();\n    }\n    get mods() {\n        return this._mods;\n    }\n    set mods(v: ItemModifier[]) {\n        Player.modDB.removeBySource(this.name);\n        this._mods = v.map(x => x.copy());\n        Player.modDB.add(this.name, ...this._mods.flatMap(x => x.stats));\n    }\n    private createElement() {\n        const li = document.createElement('li');\n        li.textContent = this.name;\n        li.classList.add('g-list-item');\n        li.setAttribute('data-name', this.name);\n        li.addEventListener('click', () => {\n            this.items.selectItem(this);\n            this.items.items.forEach(x => x.element.classList.toggle('selected', x === this));\n        });\n        return li;\n    }\n\n    private tryLoad() {\n        try {\n            const savedItem = Game.saveObj?.items?.items?.find(x => x && x.name === this.name);\n            if (!savedItem) {\n                return;\n            }\n            const mods = savedItem.modList?.reduce<ItemModifier[]>((a, c) => {\n                if (c?.text && c.values) {\n                    const mod = this.items.modLists.find(x => x.groupIndex === (c.groupIndex || 0) && x.templateDesc === c.text)?.copy();\n                    if (!mod) {\n                        return a;\n                    }\n\n                    if (c.values.length !== mod.stats.length || c.values.some(x => typeof x !== 'number')) {\n                        a.push(mod);\n                        return a;\n                    }\n\n                    c.values.forEach((x, i) => {\n                        if (!x || typeof x !== 'number') {\n                            return;\n                        }\n                        const stat = mod.stats[i]!;\n                        stat.value = x;\n                    });\n                    a.push(mod);\n                    return a;\n                }\n                return a;\n            }, []) || [];\n            this.mods = mods;\n        } catch (e) {\n            throw Error('failed loading items');\n        }\n\n    }\n}\n\nexport class ItemModifier extends Modifier {\n    private readonly itemModData: ItemModConfig;\n    public readonly levelReq: number;\n    public weight: number;\n    readonly groupIndex: number;\n    readonly modGroup: ItemModConfig[];\n    constructor(itemModData: ItemModConfig, modGroup: ItemModConfig[]) {\n        super(itemModData.mod);\n        this.itemModData = itemModData;\n        this.levelReq = itemModData.levelReq;\n        this.weight = itemModData.weight;\n        this.groupIndex = modGroup.findIndex(x => x === itemModData);\n        this.modGroup = modGroup;\n    }\n\n    copy(): ItemModifier {\n        const copy = new ItemModifier(this.itemModData, this.modGroup);\n        copy.stats.forEach((v, i) => v.value = this.stats[i]?.value || v.min);\n        return copy;\n    }\n}\n\n//config\nexport interface ItemsConfig {\n    levelReq: number;\n    itemList: ItemConfig[];\n    modLists: ItemModConfig[][];\n    craftList: CraftConfig[];\n}\n\ninterface ItemConfig {\n    name: string;\n    levelReq: number;\n}\n\ninterface ItemModConfig {\n    levelReq: number;\n    weight: number;\n    mod: string;\n}\n\ninterface CraftConfig {\n    id: CraftId;\n    levelReq: number;\n    goldCost: number;\n}\n\n//save\nexport interface ItemsSave {\n    items: ItemSave[];\n    craftPresets: CraftPresetSave[];\n}\n\ninterface ItemSave {\n    name: string;\n    modList: {\n        values: number[];\n        groupIndex: number;\n        text: string;\n    }[];\n}", "import { highlightHTMLElement, querySelector } from \"@src/utils/helpers\";\nimport Component from \"./Component\";\nimport Game, { Save } from \"../Game\";\nimport { Modifier } from \"../mods\";\nimport Statistics from \"../Statistics\";\nimport Player from \"../Player\";\n\nexport default class Passives extends Component {\n\n    readonly passives: Passive[] = [];\n    readonly passivesListContainer: HTMLElement;\n    constructor(readonly data: PassivesConfig) {\n        super('passives');\n\n        this.passivesListContainer = this.page.querySelectorForce('.s-passive-list table');\n\n        {\n            //init passive list\n            for (const passiveListData of data.passiveLists) {\n                passiveListData.sort((a, b) => a.points - b.points);\n                for (const passiveData of passiveListData) {\n                    const passive = new Passive(this, passiveData, this.passives.length);\n                    passive.element.addEventListener('click', () => {\n                        passive.assigned = !passive.assigned;\n                        this.updatePoints();\n                        this.updatePassiveList();\n                    });\n                    Statistics.gameStats.Level.registerCallback(passiveData.levelReq, () => {\n                        passive.element.classList.remove('hidden');\n                        highlightHTMLElement(this.menuItem, 'click');\n                        highlightHTMLElement(passive.element, 'mouseover');\n                    });\n                    this.passives.push(passive);\n                }\n                this.page.querySelectorForce('.s-passive-list table').append(...this.passives.map(x => x.element));\n            }\n        }\n\n        Statistics.gameStats.Level.addListener('change', () => {\n            this.updatePoints();\n            this.updatePassiveList();\n        });\n\n        this.page.querySelectorForce('[data-reset]').addEventListener('click', () => this.resetPassives());\n\n        this.updatePoints();\n        this.updatePassiveList();\n    }\n\n    get maxPoints() {\n        return this.data.pointsPerLevel * Statistics.gameStats.Level.get() - 1;\n    }\n    get curPoints() {\n        return this.maxPoints - this.passives.filter(x => x.assigned).reduce((a, c) => a += c.data.points, 0);\n    }\n\n    private resetPassives() {\n        this.passives.forEach(x => x.assigned = false);\n        this.updatePassiveList();\n        this.updatePoints();\n    }\n\n    save(saveObj: Save) {\n        saveObj.passives = {\n            list: this.passives.reduce<Required<Save>['passives']['list']>((a, c) => {\n                if (c.assigned) {\n                    a.push({ desc: c.mod.templateDesc, index: c.index });\n                }\n                return a;\n            }, [])\n        };\n    }\n\n    private updatePoints() {\n        if (this.curPoints < 0) {\n            this.resetPassives();\n            console.warn('current passive points cannot go negative. passives have been reset');\n        }\n        querySelector<HTMLSpanElement>('.p-game .p-passives [data-cur-points]').textContent = this.curPoints.toFixed();\n        querySelector<HTMLSpanElement>('.p-game .p-passives [data-max-points]').textContent = this.maxPoints.toFixed();\n    }\n\n    private updatePassiveList() {\n        for (const passive of this.passives) {\n            const { element, assigned } = passive;\n            element.toggleAttribute('disabled', !passive.assigned && this.curPoints < passive.data.points);\n            element.classList.toggle('selected', assigned);\n        }\n    }\n}\n\nclass Passive {\n    private _assigned = false;\n    readonly element: HTMLTableRowElement;\n    readonly mod: Modifier;\n    constructor(readonly passives: Passives, readonly data: PassiveConfig, readonly index: number) {\n        this.mod = new Modifier(data.mod);\n\n        this.element = this.createElement();\n\n        const savedList = Game.saveObj?.passives?.list;\n        if (savedList) {\n            const desc = savedList.find(x => x && x.index === index)?.desc;\n            if (desc === this.mod.templateDesc && passives.curPoints >= data.points) {\n                this.assigned = true;\n            }\n        }\n    }\n\n    get assigned() {\n        return this._assigned;\n    }\n\n    set assigned(v: boolean) {\n        const modDB = Player.modDB;\n        const source = 'Passives'.concat('/', this.index.toFixed());\n        this._assigned = v;\n        if (this._assigned) {\n            modDB.add(source, ...this.mod.stats);\n        } else {\n            modDB.removeBySource(source);\n        }\n    }\n\n    private createElement() {\n        const row = document.createElement('tr');\n        row.classList.add('g-list-item', 'hidden');\n        row.insertAdjacentHTML('beforeend', `<td>${this.mod.desc}</td>`);\n        row.insertAdjacentHTML('beforeend', `<td>${this.data.points}</td>`);\n        return row;\n    }\n}\n\n//config\nexport interface PassivesConfig {\n    pointsPerLevel: number;\n    passiveLists: PassiveConfig[][];\n}\n\nexport interface PassiveConfig{\n    levelReq: number;\n    points: number;\n    mod: string;\n}\n\n//save\nexport interface PassivesSave {\n    list: PassiveSave[];\n}\n\ninterface PassiveSave {\n    index: number;\n    desc: string;\n}", "import { remap } from \"@src/utils/helpers\";\nimport type Value from \"@src/utils/Value\";\nimport Player from \"./Player\";\nimport Statistics from \"./Statistics\";\n\ninterface TextData {\n    labelText: string;\n    valueText: string;\n}\n\nclass Validator {\n    constructor(readonly regex: RegExp, readonly value: Value) {\n\n    }\n}\n\nexport default class Task {\n    public readonly text: string;\n    public readonly description: string;\n    public readonly textData: TextData;\n    public startValue: number;\n    private readonly _targetValue: number;\n    public readonly validator: Validator;\n\n    private readonly taskValidators: Validator[];\n\n    constructor(text: string) {\n        this.taskValidators = [\n            new Validator(/^Reach Level {(\\d+)}$/, Statistics.gameStats.Level),\n            new Validator(/^Generate Gold {(\\d+)}$/, Statistics.gameStats[\"Gold Generated\"]),\n            new Validator(/^Deal Damage {(\\d+)}$/, Player.stats[\"Total Damage\"]),\n            new Validator(/^Deal Physical Damage {(\\d+)}$/, Player.stats[\"Total Physical Damage\"]),\n            new Validator(/^Deal Elemental Damage {(\\d+)}$/, Player.stats[\"Total Elemental Damage\"]),\n            new Validator(/^Deal Bleed Damage {(\\d+)}$/, Player.stats[\"Total Bleed Damage\"]),\n            new Validator(/^Deal Burn Damage {(\\d+)}$/, Player.stats[\"Total Burn Damage\"]),\n            new Validator(/^Perform Hits {(\\d+)}$/, Player.stats.Hits),\n            new Validator(/^Perform Critical Hits {(\\d+)}$/, Player.stats[\"Critical Hits\"]),\n            new Validator(/^Regenerate Mana {(\\d+)}$/, Player.stats[\"Mana Generated\"]),\n        ];\n        this.text = text;\n        this.description = text.replace(/[{}]*/g, '');\n\n        const validator = this.taskValidators.find(x => x.regex.exec(text));\n        if (!validator) {\n            throw Error(`Task.ts: ${text} is an invalid task string`);\n        }\n        this.validator = validator;\n\n        const match = this.validator.regex.exec(text) as RegExpMatchArray;\n        if (!match[1]) {\n            throw Error('invalid task validator');\n        }\n        this.startValue = parseFloat((this.validator.value.get() - this.validator.value.defaultValue).toFixed());\n        this._targetValue = parseFloat(match[1]);\n\n        const valueIndex = text.indexOf(`{${match[1]}}`);\n        this.textData = {\n            labelText: this.description.substring(0, valueIndex - 1),\n            valueText: match[1]\n        };\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n    get value() {\n        const endValue = this.startValue + this._targetValue;\n        const value = parseFloat(this.validator.value.get().toFixed());\n        return remap(this.startValue, endValue, 0, this._targetValue, value);\n    }\n    get completed() {\n        return this.value >= this._targetValue;\n    }\n}", "import { highlightHTMLElement, querySelector } from \"@src/utils/helpers\";\nimport Component from \"./Component\";\nimport game, { Save } from \"../Game\";\nimport { Modifier } from \"../mods\";\nimport Task from \"../Task\";\nimport Player from \"../Player\";\n\n\nexport default class Achievements extends Component {\n    readonly achievements: Achievement[] = [];\n    constructor(readonly data: AchievementsConfig) {\n        super('achievements');\n\n        for (const achievementData of data.list) {\n            const achievement = new Achievement(this, achievementData);\n            this.achievements.push(achievement);\n            achievement.updateLabel();\n        }\n\n        game.gameLoop.subscribe(() => {\n            this.achievements.forEach(x => {\n                x.tryCompletion();\n            });\n        }, { intervalMilliseconds: 1000 });\n\n        game.visiblityObserver.registerLoop(this.page, visible => {\n            if (visible) {\n                this.achievements.forEach(x => x.updateLabel());\n            }\n        }, { intervalMilliseconds: 1000 });\n\n        querySelector('.p-game .p-achievements ul').append(...this.achievements.map(x => x.element));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    save(_saveObj: Save): void {\n    }\n\n}\n\nclass Achievement {\n    readonly task: Task;\n    readonly element: HTMLElement;\n    private completed = false;\n    constructor(readonly achievements: Achievements, readonly data: AchievementConfig) {\n        this.element = this.createElement();\n        this.task = new Task(data.description);\n        //always start from 0 because it's being calculated from saved statistics and thus no need to save any achievement progress\n        this.task.startValue = 0;\n\n        this.tryCompletion();\n    }\n    get taskCompleted() {\n        return this.task.completed;\n    }\n    tryCompletion() {\n        if (!this.taskCompleted || this.completed) {\n            return;\n        }\n\n        if (this.data.modList) {\n            const modifiers = this.data.modList.flatMap(x => new Modifier(x).stats);\n            const source = `Achievement/${this.data.description}`;\n            Player.modDB.add(source, ...modifiers);\n        }\n        highlightHTMLElement(this.achievements.menuItem, 'click');\n        highlightHTMLElement(this.element, 'mouseover');\n        this.updateLabel();\n        this.completed = true;\n    }\n\n    updateLabel() {\n        if (this.completed) {\n            return;\n        }\n        const label = this.element.querySelectorForce('[data-label]');\n        const descElement = document.createElement('span');\n        descElement.textContent = this.task.textData.labelText + ' ';\n        descElement.setAttribute('data-desc', '');\n\n        const varElement = document.createElement('var');\n        if (!this.task.completed) {\n            varElement.insertAdjacentHTML('beforeend', `<span data-cur-value>${this.task.value.toFixed()}</span>`);\n            varElement.insertAdjacentHTML('beforeend', `<span>/</span>`);\n        } else {\n            varElement.setAttribute('data-valid', '');\n        }\n        varElement.insertAdjacentHTML('beforeend', `<span data-target-value>${this.task.textData.valueText}</span></var>`);\n\n        label.replaceChildren(descElement, varElement);\n    }\n\n    private createElement() {\n        const accordion = document.createElement('li');\n        accordion.classList.add('g-accordion');\n        const header = document.createElement('div');\n        accordion.appendChild(header);\n        header.classList.add('header');\n        header.insertAdjacentHTML('beforeend', `<div data-label></div>`);\n\n        if (this.data.modList) {\n            const content = document.createElement('div');\n            accordion.appendChild(content);\n            content.classList.add('content');\n            for (const mod of this.data.modList) {\n                content.insertAdjacentHTML('beforeend', `<div class=\"g-mod-desc\">${mod.replace(/[{}]/g, '')}</div>`);\n            }\n            header.insertAdjacentHTML('beforeend', `<i></i>`);\n            header.addEventListener('click', () => {\n                header.toggleAttribute('data-open');\n            });\n        }\n        return accordion;\n    }\n}\n\nexport interface AchievementsConfig {\n    list: AchievementConfig[]\n}\n\nexport interface AchievementConfig{\n    description: string;\n    modList?: string[];\n}\n\n", "import { highlightHTMLElement, querySelector } from \"@src/utils/helpers\";\nimport Component from \"./Component\";\nimport game, { Save } from \"../Game\";\nimport Task from \"../Task\";\nimport Statistics from \"../Statistics\";\n\n\nexport default class Missions extends Component {\n    readonly slots: MissionSlot[] = [];\n    private readonly missionsListContainer = this.page.querySelectorForce<HTMLUListElement>('ul[data-mission-list]');\n    constructor(readonly data: MissionsConfig) {\n        super('missions');\n\n        for (const slotData of data.slots) {\n            Statistics.gameStats.Level.registerCallback(slotData.levelReq, () => {\n                const slot = new MissionSlot(this, slotData.cost);\n                this.slots.push(slot);\n                this.missionsListContainer.appendChild(slot.element);\n            });\n        }\n\n        game.gameLoop.subscribe(() => {\n            this.slots.forEach(x => x.tryCompletion());\n        }, { intervalMilliseconds: 1000 });\n\n        game.visiblityObserver.registerLoop(this.page, visible => {\n            if (visible) {\n                this.slots.forEach(x => x.updateLabel());\n            }\n        }, { intervalMilliseconds: 1000 });\n\n        querySelector('.p-game > menu [data-tab-target=\"missions\"]').classList.remove('hidden');\n    }\n\n    save(saveObj: Save): void {\n        saveObj.missions = {\n            missions: this.slots.reduce<MissionsSave['missions']>((a, c) => {\n                if (c.task) {\n                    a.push({ desc: c.task.text || '', startValue: c.task.startValue || 0 });\n                }\n                return a;\n            }, [])\n        };\n    }\n\n}\n\nclass MissionSlot {\n    private _task: Task | undefined;\n    private _missionData: MissionConfig | undefined;\n    private _element: HTMLLIElement;\n    private completed = false;\n    constructor(readonly missions: Missions, readonly unlockCost: number) {\n        this._element = this.createElement();\n        Statistics.gameStats.Gold.addListener('change', () => {\n            this.updateNewButton();\n        });\n        this.tryLoad();\n\n        highlightHTMLElement(this.missions.menuItem, 'click');\n        highlightHTMLElement(this.element, 'mouseover');\n    }\n    get element() {\n        return this._element;\n    }\n    get missionData() {\n        return this._missionData;\n    }\n    get newMissionCost() {\n        return Math.ceil((this._missionData?.goldAmount || 0) * 0.1);\n    }\n    get task() {\n        return this._task;\n    }\n    get taskCompleted() {\n        return this._task?.completed;\n    }\n\n    tryCompletion() {\n        if (!this.taskCompleted || this.completed) {\n            return;\n        }\n        this.completed = true;\n        highlightHTMLElement(this.missions.menuItem, 'click');\n        highlightHTMLElement(this.element, 'mouseover');\n        this.updateSlot();\n    }\n\n    private unlock() {\n\n        this._element.querySelector('[data-trigger=\"buy\"]')?.remove();\n\n        const buttonClaim = document.createElement('button');\n        buttonClaim.classList.add('g-button');\n        buttonClaim.setAttribute('data-trigger', 'claim');\n        buttonClaim.insertAdjacentHTML('beforeend', '<span>Claim</span>');\n        buttonClaim.insertAdjacentHTML('beforeend', `<span class=\"g-gold\" data-cost></span>`);\n        buttonClaim.addEventListener('click', () => this.claim());\n\n        const buttonNew = document.createElement('button');\n        buttonNew.classList.add('g-button');\n        buttonNew.setAttribute('data-trigger', 'new');\n        buttonNew.insertAdjacentHTML('beforeend', '<span>New</span>');\n        buttonNew.insertAdjacentHTML('beforeend', `<span class=\"g-gold\" data-cost></span>`);\n        buttonNew.addEventListener('click', () => {\n            Statistics.gameStats.Gold.subtract(this.newMissionCost);\n            this.generateRandomMission();\n        });\n\n        this._element.appendChild(buttonClaim);\n        this._element.appendChild(buttonNew);\n    }\n\n    private claim() {\n        if (!this._missionData) {\n            return;\n        }\n        Statistics.gameStats.Gold.add(this._missionData.goldAmount);\n        this.generateRandomMission();\n        this.completed = false;\n    }\n\n    private generateRandomMission() {\n\n        const missionDataArr = this.missions.data.missionLists.reduce((a, c) => {\n            const missionData = c.filter(x => x.levelReq <= Statistics.gameStats.Level.get()).sort((a, b) => b.levelReq - a.levelReq)[0];\n            if (missionData) {\n                a.push(missionData);\n            }\n            return a;\n        }, []);\n        if (missionDataArr.length === 0) {\n            throw Error('No missions available');\n        }\n        const index = Math.floor(Math.random() * missionDataArr.length);\n        this._missionData = missionDataArr[index];\n        if (!this._missionData) {\n            throw Error('missing mission data');\n        }\n        const description = this._missionData.description || 'Error';\n        this._task = new Task(description);\n\n        const id = game.gameLoop.subscribe(() => {\n            if (this._task?.completed) {\n                game.gameLoop.unsubscribe(id);\n                this.updateSlot();\n            }\n        }, { intervalMilliseconds: 1000 });\n\n        this.updateSlot();\n    }\n\n    private updateSlot() {\n        this.updateLabel();\n        this.updateClaimButton();\n        this.updateNewButton();\n    }\n\n    updateLabel() {\n        if (!this._task) {\n            return;\n        }\n        const label = this._element.querySelectorForce('[data-label]');\n        const descElement = document.createElement('span');\n        descElement.textContent = this._task.textData.labelText + ' ';\n        descElement.setAttribute('data-desc', '');\n\n        const varElement = document.createElement('var');\n        if (!this._task.completed) {\n            varElement.insertAdjacentHTML('beforeend', `<span data-cur-value>${this._task.value.toFixed()}</span>`);\n            varElement.insertAdjacentHTML('beforeend', `<span>/</span>`);\n        } else {\n            varElement.setAttribute('data-valid', '');\n        }\n        varElement.insertAdjacentHTML('beforeend', `<span data-target-value>${this._task.textData.valueText}</span></var>`);\n\n        label.replaceChildren(descElement, varElement);\n    }\n\n    private updateClaimButton() {\n        if (!this._missionData || !this._task) {\n            return;\n        }\n        const element = this._element.querySelectorForce<HTMLButtonElement>('[data-trigger=\"claim\"]');\n        element.querySelectorForce('[data-cost]').textContent = this._missionData.goldAmount.toFixed();\n        element.disabled = !this._task.completed;\n    }\n\n    private updateNewButton() {\n        if (!this._missionData || !this._task) {\n            return;\n        }\n        const element = this._element.querySelectorForce<HTMLButtonElement>('[data-trigger=\"new\"]');\n        element.querySelectorForce<HTMLSpanElement>('[data-cost]').textContent = this.newMissionCost.toFixed();\n        element.disabled = this._task.completed || Statistics.gameStats.Gold.get() < this.newMissionCost;\n    }\n\n    private createElement() {\n        const li = document.createElement('li');\n        const label = document.createElement('div');\n        label.textContent = '[Locked]';\n        label.setAttribute('data-label', '');\n\n        const button = document.createElement('button');\n        button.classList.add('g-button');\n        button.insertAdjacentHTML('beforeend', `<span>Buy</span>`);\n        button.insertAdjacentHTML('beforeend', `<span class=\"g-gold\" data-cost>${this.unlockCost}</span>`);\n        button.setAttribute('data-trigger', 'buy');\n        button.addEventListener('click', () => {\n            Statistics.gameStats.Gold.subtract(this.unlockCost);\n            this.unlock();\n            this.generateRandomMission();\n        });\n        button.disabled = true;\n        Statistics.gameStats.Gold.addListener('change', amount => {\n            button.disabled = amount < this.unlockCost;\n        });\n\n        li.appendChild(label);\n        li.appendChild(button);\n        return li;\n    }\n\n    private tryLoad() {\n        const savedMission = game.saveObj?.missions?.missions?.[this.missions.slots.length];\n        if (!savedMission) {\n            return;\n        }\n        this.unlock();\n\n        const missionData = this.missions.data.missionLists.flatMap(x => x).find(x => savedMission.desc && x.description === savedMission.desc);\n        if (missionData) {\n            this._missionData = missionData;\n            this._task = new Task(missionData.description);\n            this._task.startValue = savedMission.startValue || 0;\n            this.tryCompletion();\n        } else {\n            this.generateRandomMission();\n        }\n\n        this.updateSlot();\n    }\n}\n\n//config\nexport interface MissionsConfig {\n    levelReq: number;\n    slots: MissionSlotConfig[];\n    missionLists: MissionConfig[][];\n}\n\nexport interface MissionSlotConfig {\n    levelReq: number;\n    cost: number;\n}\nexport interface MissionConfig {\n    description: string;\n    levelReq: number;\n    goldAmount: number;\n}\n\n//save\nexport interface MissionsSave{\n    missions: Mission[];\n}\n\ninterface Mission{\n    desc: string;\n    startValue: number;\n}", "import { hasAnyFlag, highlightHTMLElement } from \"@src/utils/helpers\";\nimport { MinionEntity } from \"../Entity\";\nimport Game, { Save } from \"../Game\";\nimport { KeywordModifierFlag, Modifier, StatModifier } from \"../mods\";\nimport Player from \"../Player\";\nimport Statistics, { MinionStatistics, StatisticSave } from \"../Statistics\";\nimport Component from \"./Component\";\n\n\nexport default class Minions extends Component {\n\n    private readonly minions: Minion[] = [];\n    private readonly dataSlotListContainer: HTMLElement;\n    readonly slots: Slot[] = [];\n    activeSlot?: Slot;\n    private activeMinion?: Minion;\n    private readonly view: View;\n    constructor(readonly config: MinionsConfig) {\n        super('minions');\n        this.view = new View(this);\n        this.dataSlotListContainer = this.page.querySelectorForce('ul[data-slots]');\n\n        for (const data of config.list) {\n            const levelReq = Array.isArray(data) ? data[0]!.levelReq : 1;\n            Statistics.gameStats.Level.registerCallback(levelReq, () => {\n                const minion = new Minion(data);\n                this.minions.push(minion);\n                this.createMinionListItem(minion);\n            });\n        }\n\n        this.selectListItem(this.minions[0]);\n\n        this.page.querySelectorForce('[data-add-slot]').addEventListener('click', this.createSlot.bind(this));\n        this.page.querySelectorForce('[data-remove-slot]').addEventListener('click', this.removeSlot.bind(this));\n\n        Game.visiblityObserver.register(this.page, visible => {\n            if (visible) {\n                this.updateCounter();\n                if (this.activeMinion) {\n                    this.view.show(this.activeMinion, -1);\n                }\n            }\n        });\n\n        Game.visiblityObserver.registerLoop(this.page, visible => {\n            if (!visible) {\n                return;\n            }\n            this.slots.forEach(x => {\n                if (!x.minion) {\n                    return;\n                }\n                x.updateProgressBar();\n            });\n        });\n\n        Player.onStatsUpdate.listen(() => {\n            this.fixStuff();\n        });\n\n        for (const slotData of Game.saveObj?.minions?.minionSlots || []) {\n            const slot = this.createSlot();\n            const minion = this.minions.find(x => x.name === slotData?.name);\n            if (!minion) {\n                continue;\n            }\n            minion.setRankIndex(slotData?.rankIndex || 0);\n            slot.setMinion(minion);\n        }\n\n        this.selectSlot(this.slots[0]);\n        this.updateCounter();\n    }\n\n    get maxActiveMinions() {\n        return Player.stats[\"Maximum Minions\"].get();\n    }\n\n    updateCounter() {\n        const active = this.slots.filter(x => x.minion && x.minion.enabled).length;\n        const max = Player.stats[\"Maximum Minions\"].get();\n        const text = `${active}/${max}`;\n        this.page.querySelectorForce('.s-toolbar [data-count]').textContent = text;\n    }\n\n    private createMinionListItem(minion: Minion) {\n        const li = document.createElement('li');\n        li.classList.add('g-list-item');\n        li.setAttribute('data-name', minion.name || 'unknown');\n        li.textContent = minion.name || 'unknown';\n        li.addEventListener('click', () => {\n            this.selectListItem(minion);\n        });\n        highlightHTMLElement(this.menuItem, 'click');\n        highlightHTMLElement(li, 'mouseover');\n        this.page.querySelectorForce('[data-list]').appendChild(li);\n        return li;\n    }\n\n    private createSlot() {\n        const slot = new Slot(this);\n        this.slots.push(slot);\n        this.dataSlotListContainer.appendChild(slot.element);\n        slot.element.addEventListener('click', () => this.selectSlot(slot));\n        slot.element.click();\n        this.updateCounter();\n        return slot;\n    }\n\n    private selectSlot(slot?: Slot) {\n        if (!slot && this.activeSlot) {\n            this.activeSlot.setMinion();\n        }\n        this.activeSlot = slot;\n        this.slots.forEach(x => x.element.classList.toggle('selected', x === slot));\n\n        this.selectListItem(this.activeSlot?.minion);\n\n        this.page.querySelectorForce<HTMLButtonElement>('[data-remove-slot]').disabled = !this.activeSlot;\n    }\n\n    private removeSlot() {\n        if (!this.activeSlot) {\n            return;\n        }\n        this.activeSlot.element.remove();\n        const slotIndex = this.slots.indexOf(this.activeSlot);\n        this.slots.splice(slotIndex, 1);\n        const newSlot = this.slots[Math.min(slotIndex, this.slots.length - 1)];\n        this.selectSlot(newSlot);\n        this.updateCounter();\n    }\n\n    private selectListItem(minion?: Minion) {\n        this.activeMinion = minion;\n        if (minion) {\n            this.page.querySelectorAll('[data-list] [data-name]').forEach(x => {\n                x.classList.toggle('selected', x.getAttribute('data-name') === minion.ranks[0]!.config.name);\n            });\n            this.view.show(minion);\n        } else {\n            const element = this.page.querySelector<HTMLElement>('[data-list] [data-name]:first-child');\n            element?.click();\n        }\n    }\n\n    fixStuff() {\n        this.minions.forEach(x => x.disable());\n        for (const slot of this.slots) {\n            const minion = slot.minion;\n            if (!minion) {\n                continue;\n            }\n            const count = this.slots.filter(x => x.minion && x.minion.enabled).length;\n            if (count < this.maxActiveMinions) {\n                minion.enable();\n            }\n        }\n        this.updateCounter();\n    }\n\n    save(saveObj: Save): void {\n        saveObj.minions = {\n            minionSlots: this.slots.reduce<MinionSlotSave[]>((a, c) => {\n                const minion: MinionSlotSave = { name: c.minion?.name, rankIndex: c.minion?.rankIndex };\n                a.push(minion);\n                return a;\n            }, []),\n            minionList: this.minions.reduce((a, c) => {\n                const stats = Statistics.createStatsSaveObj(c.stats);\n                const name = c.name;\n                const ranks = c.ranks.filter(x => x.unlocked).map(x => x.config.name);\n                a.push({ name, ranks, stats });\n                return a;\n            }, [] as MinionSave[])\n        };\n    }\n}\n\nclass Slot {\n    readonly element: HTMLElement;\n    private readonly progressBar: HTMLProgressElement;\n    private _minion?: Minion;\n    constructor(private readonly minions: Minions) {\n        this.element = this.createElement();\n        this.progressBar = this.element.querySelectorForce('progress');\n    }\n    get minion() {\n        return this._minion;\n    }\n\n    setMinion(minion?: Minion) {\n        this._minion = minion;\n        this.element.querySelectorForce('[data-name]').textContent = minion ? minion.rank.config.name : '[Empty]';\n        this.minions.fixStuff();\n    }\n\n    updateProgressBar() {\n        if (!this._minion) {\n            return;\n        }\n        const pct = this._minion.attackTime / this._minion.attackWaitTime;\n        if (!Number.isNaN(pct)) {\n            this.progressBar.value = pct;\n        }\n    }\n\n\n    private createElement() {\n        const li = document.createElement('li');\n        li.classList.add('g-list-item');\n        li.insertAdjacentHTML('beforeend', `<div data-name>[Empty]</div`);\n        li.insertAdjacentHTML('beforeend', `<progress class=\"small\" value=\"0\" max=\"1\"></progress>`);\n        return li;\n    }\n}\n\ninterface Rank {\n    config: MinionConfig;\n    mods: Modifier[];\n    unlocked: boolean;\n}\n\nclass Minion extends MinionEntity {\n    readonly ranks: Rank[] = [];\n    private _rankIndex = 0;\n    private _enabled = false;\n    constructor(configs: MinionConfig | MinionConfig[]) {\n        configs = Array.isArray(configs) ? configs : [configs];\n        super(configs[0]!.name);\n        const savedMinion = Game.saveObj?.minions?.minionList?.find(x => x?.name === this.name);\n        for (const config of configs) {\n            this.ranks.push({\n                config,\n                mods: config.mods.map(x => new Modifier(x)),\n                unlocked: !!savedMinion?.ranks?.find(x => x === config.name) || config.goldCost === 0\n            });\n        }\n        this.loadStats(savedMinion?.stats as Record<keyof MinionStatistics['stats'], StatisticSave>);\n    }\n    get rankIndex() {\n        return this.ranks.indexOf(this.rank);\n    }\n    get rank() {\n        return this.ranks[this._rankIndex]!;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n\n    setRankIndex(rankIndex: number) {\n        this._rankIndex = rankIndex;\n    }\n\n    getNextRank() {\n        return this.ranks[this._rankIndex + 1];\n    }\n\n    enable() {\n        this.applyModifiers();\n        this.beginAutoAttack();\n        Game.entityHandler.addEntity(this);\n        this._enabled = true;\n    }\n\n    disable() {\n        if (!this._enabled) {\n            return;\n        }\n        this._enabled = false;\n        this._modDB.clear();\n        this.stopAttacking();\n        Game.entityHandler.removeEntity(this);\n    }\n\n    private applyModifiers() {\n        this.modDB.clear();\n        const minionModsFromPlayer = Player.modDB.modList.filter(x => hasAnyFlag(x.keywords, KeywordModifierFlag.Global, KeywordModifierFlag.Minion));\n        const minionMods = this.rank.mods.flatMap<StatModifier>(x => x.copy().stats);\n        const sourceName = `Minion/${this.rank.config.name}`;\n        this.modDB.add(sourceName, ...[new StatModifier({ name: 'AttackSpeed', value: this.rank.config.attackSpeed, valueType: 'Base' })]);\n        this.modDB.add(sourceName, ...[new StatModifier({ name: 'BaseDamageMultiplier', value: this.rank.config.baseDamageMultiplier, valueType: 'Base' })]);\n        this.modDB.add(sourceName, ...[...minionModsFromPlayer, ...minionMods]);\n\n        this.updateStats();\n    }\n}\n\nclass View {\n    private activeMinion?: Minion;\n    private rankIndex = 0;\n\n    readonly container: HTMLElement;\n    private readonly decrementRankButton: HTMLButtonElement;\n    private readonly incrementRankButton: HTMLButtonElement;\n    private readonly addButton: HTMLButtonElement;\n    private readonly removeButton: HTMLButtonElement;\n    private readonly unlockButton: HTMLButtonElement;\n    constructor(private readonly minions: Minions) {\n        this.container = this.minions.page.querySelectorForce('[data-view]');\n        this.decrementRankButton = this.container.querySelectorForce('[data-decrement]');\n        this.incrementRankButton = this.container.querySelectorForce('[data-increment]');\n\n        this.addButton = this.container.querySelectorForce('[data-add]');\n        this.removeButton = this.container.querySelectorForce('[data-remove]');\n        this.unlockButton = this.container.querySelectorForce('[data-unlock]');\n\n\n        this.decrementRankButton.addEventListener('click', () => {\n            this.show(this.activeMinion!, this.rankIndex - 1);\n        });\n        this.incrementRankButton.addEventListener('click', () => {\n            this.show(this.activeMinion!, this.rankIndex + 1);\n        });\n\n        this.addButton.addEventListener('click', () => {\n            this.activeMinion!.setRankIndex(this.rankIndex!);\n            this.minions.activeSlot?.setMinion(this.activeMinion);\n            this.show(this.activeMinion!, this.rankIndex);\n        });\n\n        this.removeButton.addEventListener('click', () => {\n            this.minions.activeSlot?.setMinion(undefined);\n            this.show(this.activeMinion!, this.rankIndex);\n        });\n\n        this.container.querySelectorForce<HTMLButtonElement>('[data-unlock]').addEventListener('click', () => {\n            const rank = this.activeMinion?.ranks[this.rankIndex!];\n            if (rank && this.activeMinion) {\n                Statistics.gameStats.Gold.subtract(rank.config.goldCost || 0);\n                rank.unlocked = true;\n                this.show(this.activeMinion, this.rankIndex);\n            }\n        });\n\n        Statistics.gameStats.Gold.addListener('change', x => {\n            if (this.minions.page.classList.contains('hidden')) {\n                return;\n            }\n            const rank = this.activeMinion?.ranks[this.rankIndex];\n            if (rank && !rank.unlocked) {\n                if (rank.config.goldCost <= x) {\n                    this.unlockButton.disabled = false;\n                }\n            }\n        });\n    }\n\n    show(minion: Minion, rankIndex?: number) {\n        if (typeof rankIndex === 'number') {\n            this.rankIndex = rankIndex === -1 ? this.rankIndex : rankIndex;\n        } else {\n            this.rankIndex = minion.rankIndex;\n        }\n        this.activeMinion = minion;\n\n        const rank = minion.ranks[this.rankIndex];\n        if (!rank) {\n            throw RangeError('rank index out of bounds');\n        }\n\n        //header\n        {\n            this.container.querySelectorForce('[data-title]').textContent = rank.config.name;\n\n            this.decrementRankButton.style.visibility = 'hidden';\n            this.incrementRankButton.style.visibility = 'hidden';\n            if (minion.ranks.length > 1) {\n                this.decrementRankButton.style.visibility = 'visible';\n                this.incrementRankButton.style.visibility = 'visible';\n                this.decrementRankButton.disabled = this.rankIndex <= 0;\n                this.incrementRankButton.disabled = !rank.unlocked || this.rankIndex >= minion.ranks.length - 1;\n            }\n        }\n\n        //stats\n        {\n            const table = this.container.querySelectorForce('table');\n            table.replaceChildren();\n            table.insertAdjacentHTML('beforeend', `<tr><td>Attack Speed</td><td>${rank.config.attackSpeed.toFixed(2)}</td></tr>`);\n            table.insertAdjacentHTML('beforeend', `<tr><td>Base Damage Multiplier</td><td>${rank.config.baseDamageMultiplier}%</td></tr>`);\n        }\n\n        //mods\n        {\n            const container = this.container.querySelectorForce('[data-mods]');\n            container.replaceChildren();\n            for (const mod of rank.mods) {\n                const element = document.createElement('div');\n                element.classList.add('g-mod-desc');\n                element.textContent = mod.desc;\n                container.appendChild(element);\n            }\n        }\n\n        this.addButton.disabled = !this.validateAddButton(minion, rank);\n        this.addButton.classList.toggle('hidden', !rank.unlocked);\n        if (this.minions.activeSlot?.minion?.rank === rank) {\n            this.addButton.classList.add('hidden');\n        }\n\n        this.unlockButton.classList.toggle('hidden', rank.unlocked);\n        this.unlockButton.disabled = Statistics.gameStats.Gold.get() < (rank.config.goldCost || 0);\n        this.unlockButton.innerHTML = `<span>Unlock <span class=\"g-gold\">${rank.config.goldCost}</span></span>`;\n\n        this.removeButton.classList.toggle('hidden', this.minions.activeSlot?.minion?.rank !== rank);\n    }\n\n    private validateAddButton(minion: Minion, rank: Minion['rank']) {\n        if (!rank.unlocked) {\n            return false;\n        }\n        if (!this.minions.activeSlot) {\n            return false;\n        }\n        if (this.minions.activeSlot.minion?.rank === rank) {\n            return false;\n        }\n        if (this.minions.slots.filter(x => x !== this.minions.activeSlot).some(x => x.minion === minion)) {\n            return false;\n        }\n        return true;\n    }\n}\n\n//config\nexport interface MinionsConfig {\n    levelReq: number;\n    list: (MinionConfig | MinionConfig[])[];\n}\n\ninterface MinionConfig {\n    name: string;\n    levelReq: number;\n    attackSpeed: number;\n    baseDamageMultiplier: number;\n    mods: string[];\n    goldCost: number;\n}\n\n//save\nexport interface MinionsSave {\n    minionSlots: MinionSlotSave[];\n    minionList: MinionSave[];\n}\n\ninterface MinionSlotSave {\n    name?: string;\n    rankIndex?: number;\n}\n\ninterface MinionSave {\n    name: string;\n    stats: Record<keyof MinionStatistics['stats'], StatisticSave>;\n    ranks: string[];\n}", "import Skills, { SkillsConfig } from \"./skills/Skills\";\nimport Items, { ItemsConfig, ItemsSave } from \"./items/Items\";\nimport type Component from \"./Component\";\nimport Passives, { PassivesConfig, PassivesSave } from \"./Passives\";\nimport Achievements, { AchievementsConfig } from \"./Achievements\";\nimport Missions, { MissionsConfig, MissionsSave } from \"./Missions\";\nimport Minions, { MinionsConfig, MinionsSave } from \"./Minions\";\n\nimport skillsHtml from '@html/skills.html';\nimport passivesHtml from '@html/passives.html';\nimport itemsHtml from '@html/items.html';\nimport missionsHtml from '@html/missions.html';\nimport achievementsHtml from '@html/achievements.html';\nimport minionsHtml from '@html/minions.html';\n\nimport { querySelector } from \"@src/utils/helpers\";\nimport CustomError from \"@src/utils/CustomError\";\nimport Game from \"../Game\";\n\nexport { SkillsConfig };\nexport { ItemsConfig, ItemsSave };\nexport { PassivesConfig, PassivesSave };\nexport { AchievementsConfig };\nexport { MissionsConfig, MissionsSave };\nexport { MinionsConfig, MinionsSave };\n\nexport type ComponentName = { [K in keyof Required<ComponentsConfig>]: K }[keyof ComponentsConfig];\n\nexport interface ComponentWrapper {\n    html: string;\n    constr: new (data: unknown) => Component;\n    label: string;\n}\n\nexport interface ComponentsConfig {\n    skills: SkillsConfig;\n    passives?: PassivesConfig;\n    items?: ItemsConfig;\n    missions?: MissionsConfig;\n    achievements?: AchievementsConfig;\n    minions?: MinionsConfig;\n}\n\nexport const componentConfigs: Record<keyof ComponentsConfig, ComponentWrapper> = {\n    skills: {\n        constr: Skills as (new() => Skills),\n        html: skillsHtml,\n        label: 'Skills'\n    },\n    passives: {\n        constr: Passives as (new() => Passives),\n        html: passivesHtml,\n        label: 'Passives'\n    },\n    items: {\n        constr: Items as (new() => Items),\n        html: itemsHtml,\n        label: 'Items'\n    },\n    missions: {\n        constr: Missions as (new() => Missions),\n        html: missionsHtml,\n        label: 'Missions'\n    },\n    minions: {\n        constr: Minions as (new() => Minions),\n        html: minionsHtml,\n        label: 'Minions'\n    },\n    achievements: {\n        constr: Achievements as (new() => Achievements),\n        html: achievementsHtml,\n        label: 'Achievements'\n    }\n};\n\n\n\nexport function loadComponent(key: ComponentName) {\n    const gamePage = querySelector('.p-game');\n    const menuContainer = gamePage.querySelectorForce('[data-main-menu] .s-components');\n    const mainView = gamePage.querySelectorForce('[data-main-view]');\n\n    const { constr, html, label } = componentConfigs[key];\n\n    //page\n    const page = new DOMParser().parseFromString(html, 'text/html').querySelector(`.p-${key}`);\n    if (!page || !(page instanceof HTMLElement)) {\n        throw new CustomError(`invalid html of component: ${key}`);\n    }\n    mainView.appendChild(page);\n    //menu item\n    const menuItem = document.createElement('li');\n    menuItem.textContent = label;\n    menuItem.classList.add('g-list-item');\n    menuItem.setAttribute('data-tab-target', key);\n    menuContainer.appendChild(menuItem);\n    {\n        const keys = Object.keys(componentConfigs);\n        const sort = (a: ComponentName, b: ComponentName) => keys.indexOf(a) - keys.indexOf(b);\n        const sortedItems = [...menuContainer.children].sort((a, b) =>\n            sort(a.getAttribute('data-tab-target') as ComponentName, b.getAttribute('data-tab-target') as ComponentName));\n        menuContainer.replaceChildren(...sortedItems);\n    }\n\n    //instance\n    const instance = new constr(Game.config!.components![key]);\n\n\n    return instance;\n}\n", "interface Button {\n    label: string;\n    type: 'confirm' | 'cancel';\n    callback?: (args?: unknown) => void;\n    args?: unknown;\n}\ninterface AlertParams {\n    title?: string;\n    body: string;\n    buttons?: Button[]\n    footerText?: string;\n}\n\nexport default function customAlert(opts: AlertParams) {\n    const element = document.createElement('div');\n    element.classList.add('g-alert-window');\n    element.innerHTML = `\n        <div class=\"s-content\">\n            <header><h3></h3></header>\n            <div data-body></div>\n            <div class=\"s-buttons\"></div>\n            <footer><small></small></footer>\n        </div>\n        <div class=\"backdrop\"></div>`;\n\n    element.querySelectorForce<HTMLElement>('header h3').innerText = opts.title || '';\n    element.querySelectorForce<HTMLElement>('[data-body]').innerText = opts.body;\n    element.querySelectorForce<HTMLElement>('footer small').innerText = opts.footerText || '';\n\n    element.querySelectorForce('.backdrop').addEventListener('mousedown', () => {\n        element.remove();\n    });\n\n    const buttons: HTMLButtonElement[] = [];\n    for (const buttonData of opts.buttons || []) {\n        const button = document.createElement('button');\n        button.classList.add('g-button');\n        button.setAttribute('type', 'submit');\n        const role = buttonData.type;\n        button.setAttribute('data-role', role);\n        button.textContent = buttonData.label;\n        button.addEventListener('click', () => {\n            buttonData.callback?.(buttonData.args);\n            element.remove();\n        });\n        buttons.push(button);\n\n    }\n    element.querySelectorForce('.s-buttons').append(...buttons);\n\n    document.body.appendChild(element);\n}", "import { registerTabs, querySelector, isLocalHost } from \"@utils/helpers\";\nimport Player, { PlayerSave } from './Player';\nimport Enemy, { EnemySave } from './Enemy';\nimport Loop from \"@utils/Loop\";\nimport Statistics, { StatisticsSave } from \"./Statistics\";\nimport EventEmitter from \"@src/utils/EventEmitter\";\nimport saveManager from \"@src/utils/saveManager\";\n\nimport { VisibilityObserver } from \"@src/utils/Observers\";\nimport type Component from \"./components/Component\";\nimport { componentConfigs, ComponentName, ComponentsConfig, ItemsSave, loadComponent, MinionsSave, MissionsSave, PassivesSave } from \"./components/componentHandler\";\nimport customAlert from \"@src/utils/alert\";\nimport type { SkillsSave } from \"./components/skills/Skills\";\nimport { EntityHandler } from \"./Entity\";\n\nexport class Game {\n    readonly page = querySelector('.p-game');\n    readonly gameLoop = new Loop();\n    readonly visiblityObserver: VisibilityObserver;\n    readonly componentsList: Component[] = [];\n    readonly entityHandler = new EntityHandler();\n    readonly onSave = new EventEmitter<Save>();\n    private _config: GameConfig | undefined;\n    private _saveObj?: DeepPartial<Save>;\n    constructor() {\n        this.visiblityObserver = new VisibilityObserver(this.gameLoop);\n\n        if (isLocalHost()) {\n            this.setupDevHelpers();\n        }\n\n        this.page.querySelectorForce('[data-target=\"home\"]').addEventListener('click', () => {\n            this.page.classList.add('hidden');\n            querySelector('.p-home').classList.remove('hidden');\n        });\n        registerTabs(this.page.querySelectorForce<HTMLElement>('[data-main-menu]'), this.page.querySelectorForce<HTMLElement>('[data-main-view]'));\n    }\n    get config() {\n        return this._config;\n    }\n    get saveObj() {\n        return this._saveObj;\n    }\n\n    async init(config: GameConfig, saveObj?: Save) {\n        this._config = config;\n        this._saveObj = saveObj;\n\n\n        this.page.querySelectorForce('[data-config-name]').textContent = this._config.meta.name;\n\n        //Reset\n        this.reset();\n\n        //Initialize\n        try {\n            Statistics.init();\n            Enemy.init();\n            Player.init();\n            this.initComponents();\n        } catch (e) {\n            this.reset();\n            throw e;\n        }\n\n\n        //Setup\n        this.setup();\n\n        await this.save();\n\n        //Per second loop\n        this.gameLoop.subscribe(() => {\n            Statistics.gameStats[\"Time Played\"].add(1);\n            const amount = Statistics.gameStats['Gold Generation'].get();\n            Statistics.gameStats.Gold.add(amount);\n            Statistics.gameStats[\"Gold Generated\"].add(amount);\n\n            // Statistics.updateStats('Global', Statistics.gameStats);\n            Statistics.updateAll();\n        }, { intervalMilliseconds: 1000 });\n\n        this.gameLoop.subscribe(() => {\n            this.save();\n        }, { intervalMilliseconds: 1000 * 60 });\n\n        {\n            const endPrompt = config.options?.endPrompt;\n            if (endPrompt) {\n                Statistics.gameStats.Level.addListener('change', level => {\n                    if (level > Enemy.maxIndex + 1) {\n                        customAlert({\n                            title: endPrompt.title,\n                            body: endPrompt.body,\n                            footerText: endPrompt.footer,\n                            buttons: [{ label: 'Continue', type: 'confirm' }]\n                        });\n                    }\n                });\n            }\n        }\n    }\n\n    private reset() {\n        this.onSave.removeAllListeners();\n        this.disposeComponents();\n        this.visiblityObserver.disconnectAll();\n        this.entityHandler.reset();\n        this.gameLoop.reset();\n        Player.reset();\n        Statistics.reset();\n    }\n\n    private setup() {\n        // Statistics.setup();\n        Enemy.setup();\n        Player.setup();\n\n        if (!isLocalHost()) {\n            this.gameLoop.start();\n        }\n        this.page.querySelectorForce<HTMLElement>('[data-tab-target=\"combat\"]').click();\n        document.querySelectorAll('[data-highlight-notification]').forEach(x => x.removeAttribute('data-highlight-notification'));\n    }\n\n    private initComponents() {\n        const menuContainer = this.page.querySelectorForce('[data-main-menu] .s-components');\n        menuContainer.replaceChildren();\n        if (!this.config?.components) {\n            return;\n        }\n        for (const key of Object.keys(componentConfigs)) {\n            const data = this.config.components[key as ComponentName];\n            if (!data) {\n                continue;\n            }\n            Statistics.gameStats.Level.registerCallback('levelReq' in data ? data.levelReq : 1, () => {\n                const component = loadComponent(key as ComponentName);\n                this.componentsList.push(component);\n            });\n        }\n\n    }\n\n    private disposeComponents() {\n        Object.keys(componentConfigs).forEach(x => {\n            this.page.querySelector(`[data-main-menu] [data-tab-target=\"${x}\"]`)?.remove();\n            this.page.querySelector(`[data-main-view] [data-tab-content=\"${x}\"]`)?.remove();\n        });\n        this.componentsList.splice(0);\n    }\n\n    private setupDevHelpers() {\n        console.log('Press Space to toggle GameLoop');\n        document.body.addEventListener('keydown', x => {\n            if (x.code === 'Space') {\n                x.preventDefault();\n                if (this.gameLoop.running) {\n                    document.title = `Tinkerers Subject (Stopped)`;\n                    this.gameLoop.stop();\n                } else {\n                    this.gameLoop.start();\n                    document.title = 'Tinkerers Subject (Running)';\n                }\n            }\n        });\n    }\n\n    async save() {\n        if (!this.config) {\n            throw Error('missing configuration');\n        }\n        const map = await saveManager.load<Save>('Game') || new Map<string, Save>();\n        const saveObj = map.get(this.config.meta.id) as Save || { meta: { ...this.config.meta } };\n        saveObj.meta.lastSavedAt = Date.now();\n        Player.save(saveObj);\n        Enemy.save(saveObj);\n        Statistics.save(saveObj);\n\n        for (const componentData of this.componentsList) {\n            componentData.save(saveObj);\n        }\n        this._saveObj = saveObj;\n\n        map.set(this.config.meta.id, saveObj);\n        await saveManager.save<Save>('Game', Object.fromEntries(map));\n    }\n\n    async load(config: GameConfig) {\n        const map = await saveManager.load<Save>('Game');\n        if (!map) {\n            return false;\n        }\n        const saveObj = map.get(config.meta.id);\n        if (!saveObj) {\n            console.log('could not load', config.meta.id);\n            return false;\n        }\n\n        try {\n            await this.init(config, saveObj);\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    async getMostRecentSave() {\n        try {\n            const map = await saveManager.load<Save>('Game');\n            if (!map) {\n                return;\n            }\n            return [...map].map(x => x[1]).sort((a, b) => b.meta.lastSavedAt - a.meta.lastSavedAt)[0];\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    async deleteSave(id: string) {\n        const map = await saveManager.load<Save>('Game');\n        if (!map) {\n            return;\n        }\n        if (map?.delete(id)) {\n            return await saveManager.save<Save>('Game', Object.fromEntries(map));\n        }\n    }\n\n    async hasSave(id: Save['meta']['id']) {\n        const map = await saveManager.load<Save>('Game');\n        if (!map) {\n            return false;\n        }\n        return map.has(id);\n    }\n}\n\nexport default new Game();\n\n\nexport interface MetaConfig {\n    name: string;\n    rawUrl: string;\n    id: string;\n    createdAt: number;\n    lastSavedAt: number;\n}\n\nexport interface GameConfig {\n    meta: MetaConfig;\n    options?: OptionsConfig;\n    player?: { modList: string[]; }\n    enemies: { enemyList: number[]; }\n    components?: ComponentsConfig;\n}\n\nexport interface OptionsConfig {\n    endPrompt?: {\n        title: string;\n        body: string;\n        footer?: string;\n    }\n}\n\n\nexport interface Save {\n    meta: MetaConfig;\n    player?: PlayerSave;\n    enemy?: EnemySave;\n    statistics?: StatisticsSave;\n\n    //components\n    skills?: SkillsSave;\n    passives?: PassivesSave;\n    items?: ItemsSave;\n    missions?: MissionsSave;\n    minions?: MinionsSave;\n}\n\n", "import Ajv from 'ajv';\nimport gameConfigSchema from '@public/gconfig/schemas/gameConfig.schema.json';\nimport definitionsSchema from '@public/gconfig/schemas/definitions/definitions.schema.json';\nimport playerSchema from '@public/gconfig/schemas/definitions/player.schema.json';\nimport enemiesSchema from '@public/gconfig/schemas/definitions/enemies.schema.json';\nimport optionsSchema from '@public/gconfig/schemas/definitions/options.schema.json';\nimport tasksSchema from '@public/gconfig/schemas/definitions/tasks.schema.json';\nimport modsSchema from '@public/gconfig/schemas/definitions/mods.schema.json';\nimport componentsSchema from '@public/gconfig/schemas/definitions/components/components.schema.json';\nimport skillsSchema from '@public/gconfig/schemas/definitions/components/skills.schema.json';\nimport passivesSchema from '@public/gconfig/schemas/definitions/components/passives.schema.json';\nimport itemsSchema from '@public/gconfig/schemas/definitions/components/items.schema.json';\nimport missionsSchema from '@public/gconfig/schemas/definitions/components/missions.schema.json';\nimport achievementsSchema from '@public/gconfig/schemas/definitions/components/achievements.schema.json';\nimport minionsSchema from '@public/gconfig/schemas/definitions/components/minions.schema.json';\n\nexport const configValidator = new Ajv({ strictTuples: false, schemas: [definitionsSchema, playerSchema, enemiesSchema, optionsSchema, tasksSchema, modsSchema, componentsSchema, skillsSchema, passivesSchema, itemsSchema, missionsSchema, achievementsSchema, minionsSchema] }).compile(gameConfigSchema);\n", "import Game, { GameConfig, MetaConfig, Save } from \"@src/game/Game\";\nimport { generateTime, isLocalHost, querySelector, registerTabs } from \"./utils/helpers\";\nimport { configValidator } from \"@src/utils/validateConfig\";\nimport configList from '@public/gconfig/configList.json';\nimport saveManager from \"@src/utils/saveManager\";\nimport customAlert from \"./utils/alert\";\nimport Statistics from \"./game/Statistics\";\nimport Player from \"./game/Player\";\n\nconst entryTypes = ['new', 'saved'] as const;\ntype EntryType = typeof entryTypes[number];\n\ntype Entry = Partial<MetaConfig & { description: string }>\n\nexport class Home {\n    private readonly page = querySelector('.p-home');\n    private activeEntry: Entry = {};\n    constructor() {\n        this.setupEventListeners();\n\n        querySelector('header [data-target]').classList.add('hidden');\n        querySelector('.p-home > menu [data-type=\"new\"]').click();\n\n        window.TS = {\n            deleteAllSaves: async () => {\n                const saves = await this.createEntries('saved') as DeepPartial<MetaConfig>[];\n                const ids = saves.map(x => x.id ? x.id : undefined).filter((x): x is Exclude<string, null | undefined> => typeof x === 'string');\n                for (const id of ids) {\n                    await Game.deleteSave(id);\n                }\n            },\n            game: Game,\n            player: Player,\n            statistics: Statistics\n        };\n    }\n\n    private setupEventListeners() {\n\n        this.page.querySelectorForce('[data-target=\"game\"]').addEventListener('click', () => {\n            this.page.classList.add('hidden');\n            querySelector('.p-game').classList.remove('hidden');\n        });\n\n        registerTabs(querySelector('.p-home > menu'), querySelector('.p-home .s-main'), target => {\n            const type = target.getAttribute('data-tab-target') as EntryType;\n            if (!entryTypes.includes(type)) {\n                throw Error('wrong type');\n            }\n            this.populateEntryList(type);\n        });\n\n        //start new config button\n        querySelector('.p-home .p-new [data-entry-info] [data-start]').addEventListener('click', this.startNewConfigCallback.bind(this));\n        //start saved config button\n        querySelector('.p-home .p-saved [data-entry-info] [data-start]').addEventListener('click', async () => {\n            const map = await saveManager.load<Save>('Game');\n            if (map && this.activeEntry.id) {\n                const save = map.get(this.activeEntry.id);\n                if (save) {\n                    await this.startSavedGame(save);\n                }\n            }\n        });\n        //delete saved config button\n        querySelector('.p-home .p-saved [data-entry-info] [data-delete]').addEventListener('click', this.deleteSavedGame.bind(this));\n    }\n\n    private async startNewConfigCallback() {\n        if (!this.activeEntry.name) {\n            console.error('no entry selected');\n            return;\n        }\n        const map = await saveManager.load<Save>('Game');\n        const save = map ? Array.from(map).find(([_key, value]) => value.meta.name === this.activeEntry.name)?.[1] : undefined;\n        if (save && save.meta) {\n            customAlert({\n                title: \"Configuration already exists\",\n                body: \"You already have a save with this configuration.\\n\\nNew - Start a new game with a new save file\\nOverride - Start a new game and override save file\\nContinue - Start from save file\",\n                buttons: [\n                    {\n                        label: 'New', type: 'confirm', callback: () => this.startNewGame()\n                    },\n                    {\n                        label: 'Override', type: 'confirm', callback: () => this.startSavedGame(save, true)\n                    },\n                    {\n                        label: 'Continue', type: 'confirm', callback: () => this.startSavedGame(save)\n                    },\n                    {\n                        label: 'Cancel', type: 'cancel'\n                    }\n                ]\n            });\n        } else {\n            await this.startNewGame();\n        }\n    }\n\n    private deleteSavedGame() {\n        const deleteSave = async () => {\n            if (this.activeEntry.id) {\n                await Game.deleteSave(this.activeEntry.id);\n                this.populateEntryList('saved');\n            }\n        };\n        customAlert({\n            title: 'Delete Save',\n            body: 'Are you sure?',\n            buttons: [{ label: 'Yes', type: 'confirm', callback: deleteSave }, { label: 'No', type: 'cancel' }],\n            footerText: 'This will delete your save file permanently'\n        });\n    }\n\n    async tryLoadRecentSave() {\n        const save = await Game.getMostRecentSave();\n        if (!save || !save.meta) {\n            return false;\n        }\n        this.activeEntry = { ...save.meta };\n        await this.startSavedGame(save);\n    }\n\n    async populateEntryList(type: EntryType) {\n        const page = querySelector(`.p-home .p-${type}`);\n        const listContainer = page.querySelectorForce(`.p-home [data-entry-list]`);\n        const infoContainer = page.querySelectorForce(`.p-home [data-entry-info]`);\n        listContainer.classList.add('hidden');\n        infoContainer.classList.add('hidden');\n        const entries = await this.createEntries(type);\n        const elements = this.createEntryListElements(entries, type);\n        listContainer.replaceChildren(...elements);\n        if (elements.length === 0) {\n            let msg = '';\n            switch (type) {\n            case 'new': msg = 'Configuration list is empty'; break;\n            case 'saved': msg = 'There are no saved games'; break;\n            }\n            listContainer.textContent = msg;\n        }\n        listContainer.classList.remove('hidden');\n        infoContainer.classList.toggle('hidden', entries.length === 0);\n        elements[0]?.click();\n    }\n\n    private createEntryListElements(entries: Entry[], type: EntryType) {\n        const elements: HTMLLIElement[] = [];\n        for (const entry of entries) {\n            const { name, rawUrl } = entry;\n            if (!name || !rawUrl) {\n                throw Error('invalid entry');\n            }\n            const li = document.createElement('li');\n            li.classList.add('g-list-item');\n            if (type === 'new') {\n\n                const suffix = rawUrl.startsWith('https') || !isLocalHost() ? '' : '(Local) ';\n                const label = suffix.concat(name);\n                li.insertAdjacentHTML('beforeend', `<span>${label}</span>`);\n            } else if (type === 'saved' && 'lastSavedAt' in entry) {\n                const timeData = generateTime(entry.lastSavedAt);\n                const timeSinceLastSaveText = `Last played: ${timeData.hours > 0 ? timeData.hours + 'h ' : ''}${timeData.mins}min`;\n                li.insertAdjacentHTML('beforeend', `\n                <span>${name}</span>\n                <span data-type=\"date\">${timeSinceLastSaveText}</span>`);\n            }\n            li.addEventListener('click', () => {\n                this.activeEntry = entry;\n                elements.forEach(x => x.classList.toggle('selected', x === li));\n                this.showEntry(entry, type);\n            });\n            elements.push(li);\n        }\n        return elements;\n    }\n\n    private showEntry(entry: Entry, type: EntryType) {\n        if (!entry.name) {\n            throw Error();\n        }\n        const infoContainer = querySelector(`.p-home [data-tab-content=\"${type}\"] [data-entry-info]`);\n        infoContainer.querySelectorForce('[data-title]').textContent = entry.name;\n        infoContainer.querySelectorForce('[data-desc]').textContent = entry.description || '';\n    }\n\n    private async createEntries(type: EntryType) {\n        try {\n            if (type === 'new') {\n                return configList.list.map<Entry>(x => ({ ...x, id: '' }));\n            }\n            const map = await saveManager.load<Save>('Game');\n            if (!map) {\n                return [];\n            }\n            return Array.from(map.values()).map(x => x.meta).sort((a, b) => b.lastSavedAt - a.lastSavedAt);\n\n        } catch (e) {\n            throw Error('failed to create entries');\n        }\n    }\n\n    //new game\n    async startNewGame() {\n        const { name, rawUrl } = this.activeEntry;\n        if (!name || !rawUrl) {\n            throw Error();\n        }\n        const entry: MetaConfig = {\n            id: crypto.randomUUID(),\n            name,\n            rawUrl,\n            createdAt: 0,\n            lastSavedAt: 0,\n        };\n        await this.startGame(entry);\n    }\n\n    async startSavedGame(save: Save, override = false) {\n        const { name, rawUrl } = this.activeEntry;\n        if (!name || !rawUrl) {\n            return;\n        }\n        const entry: MetaConfig = {\n            id: save.meta.id,\n            createdAt: override ? Date.now() : save.meta.createdAt,\n            lastSavedAt: override ? save.meta.createdAt : 0,\n            name,\n            rawUrl\n        };\n\n        if (override) {\n            await Game.deleteSave(entry.id);\n            await this.startGame(entry);\n        } else {\n            await this.startGame(entry, save);\n        }\n\n    }\n\n    async getConfig(url: string) {\n        const config = await (await fetch(url)).json() as GameConfig;\n        if (!configValidator(config)) {\n            console.error(`config at: ${url} is not valid`, configValidator.errors);\n            return false;\n        }\n        return config;\n    }\n\n    async startGame(entry: MetaConfig, saveObj?: Save) {\n        try {\n            const config = await this.getConfig(entry.rawUrl);\n            if (!config) {\n                return;\n            }\n            config.meta = entry;\n            await Game.init(config, saveObj);\n            const navBtn = querySelector('header [data-target]');\n            navBtn.classList.remove('hidden');\n            navBtn.click();\n        } catch (e) {\n            console.error(`Failed to load \"${this.activeEntry.name}\" at: ${this.activeEntry.rawUrl}`);\n            console.error(e);\n        }\n\n    }\n}\n\nexport default new Home();", "import home from './Home';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    init();\n});\n\nasync function init() {\n\n    await home.tryLoadRecentSave();\n    document.body.classList.remove('hidden');\n}\n"],
  "mappings": "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",
  "names": ["define", "module", "exports", "o", "e", "n", "global", "Promise", "self", "i", "key", "length", "idb", "forage", "value", "err", "keys", "db", "t", "error", "resolve", "reject", "sameValue", "includes", "LocalForage", "configureMissingMethods", "methodNotImplementedFactory", "promise", "setDriverSupport", "supportedDrivers", "UsedValueState", "self", "Type", "self", "DataType", "_a", "self", "baseId", "self", "merge", "sets", "length", "slice", "xl", "x", "join", "subexp", "str", "typeOf", "o", "undefined", "Object", "prototype", "toString", "call", "split", "pop", "shift", "toLowerCase", "toUpperCase", "toArray", "obj", "Array", "setInterval", "assign", "target", "source", "key", "buildExps", "isIRI", "ALPHA$$", "CR$", "DIGIT$$", "DQUOTE$$", "HEXDIG$$", "SP$$", "PCT_ENCODED$", "SUB_DELIMS$$", "RESERVED$$", "GEN_DELIMS$$", "UCSCHAR$$", "SCHEME$", "USERINFO$", "UNRESERVED$$", "DEC_OCTET$", "DEC_OCTET_RELAXED$", "H16$", "LS32$", "IPV4ADDRESS$", "IPV6ADDRESS1$", "IPV6ADDRESS2$", "IPV6ADDRESS3$", "IPV6ADDRESS4$", "IPV6ADDRESS5$", "IPV6ADDRESS6$", "IPV6ADDRESS7$", "IPV6ADDRESS8$", "IPV6ADDRESS9$", "ZONEID$", "IPV6ADDRESS$", "IP_LITERAL$", "IPV6ADDRZ_RELAXED$", "IPVFUTURE$", "HOST$", "REG_NAME$", "PORT$", "AUTHORITY$", "PCHAR$", "SEGMENT$", "SEGMENT_NZ$", "SEGMENT_NZ_NC$", "PATH_ABEMPTY$", "PATH_ABSOLUTE$", "PATH$", "PATH_NOSCHEME$", "PATH_ROOTLESS$", "PATH_EMPTY$", "QUERY$", "IPRIVATE$$", "FRAGMENT$", "HIER_PART$", "URI$", "RELATIVE_PART$", "RELATIVE$", "URI_REFERENCE$", "ABSOLUTE_URI$", "GENERIC_REF$", "RELATIVE_REF$", "ABSOLUTE_REF$", "SAMEDOC_REF$", "AUTHORITY_REF$", "RegExp", "maxInt", "base", "tMin", "tMax", "skew", "damp", "initialBias", "initialN", "delimiter", "regexPunycode", "regexNonASCII", "regexSeparators", "errors", "baseMinusTMin", "floor", "Math", "stringFromCharCode", "String", "fromCharCode", "error", "type", "RangeError", "map", "array", "fn", "result", "mapDomain", "string", "parts", "replace", "labels", "encoded", "ucs2decode", "output", "counter", "value", "charCodeAt", "extra", "push", "ucs2encode", "fromCodePoint", "basicToDigit", "codePoint", "digitToBasic", "digit", "flag", "adapt", "delta", "numPoints", "firstTime", "k", "decode", "input", "inputLength", "i", "n", "bias", "basic", "lastIndexOf", "j", "index", "oldi", "w", "t", "baseMinusT", "out", "splice", "encode", "currentValue", "basicLength", "handledCPCount", "m", "handledCPCountPlusOne", "q", "qMinusT", "toUnicode", "test", "toASCII", "punycode", "SCHEMES", "pctEncChar", "chr", "c", "e", "pctDecChars", "newStr", "il", "parseInt", "substr", "c2", "c3", "_normalizeComponentEncoding", "components", "protocol", "decodeUnreserved", "decStr", "match", "UNRESERVED", "scheme", "PCT_ENCODED", "NOT_SCHEME", "userinfo", "NOT_USERINFO", "host", "NOT_HOST", "path", "NOT_PATH", "NOT_PATH_NOSCHEME", "query", "NOT_QUERY", "fragment", "NOT_FRAGMENT", "_stripLeadingZeros", "_normalizeIPv4", "matches", "IPV4ADDRESS", "address", "_normalizeIPv6", "IPV6ADDRESS", "zone", "reverse", "last", "first", "firstFields", "lastFields", "isLastFieldIPv4Address", "fieldCount", "lastFieldsStart", "fields", "allZeroFields", "reduce", "acc", "field", "lastLongest", "longestZeroFields", "sort", "a", "b", "newHost", "newFirst", "newLast", "URI_PARSE", "NO_MATCH_IS_UNDEFINED", "parse", "uriString", "options", "iri", "IRI_PROTOCOL", "URI_PROTOCOL", "reference", "port", "isNaN", "indexOf", "schemeHandler", "unicodeSupport", "domainHost", "_recomposeAuthority", "uriTokens", "_", "$1", "$2", "RDS1", "RDS2", "RDS3", "RDS5", "removeDotSegments", "im", "s", "Error", "serialize", "authority", "charAt", "absolutePath", "resolveComponents", "relative", "skipNormalization", "tolerant", "resolve", "baseURI", "relativeURI", "schemelessOptions", "normalize", "uri", "equal", "uriA", "uriB", "escapeComponent", "ESCAPE", "unescapeComponent", "handler", "secure", "http", "isSecure", "wsComponents", "resourceName", "ws", "O", "ATEXT$$", "QTEXT$$", "VCHAR$$", "SOME_DELIMS$$", "NOT_LOCAL_PART", "NOT_HFNAME", "NOT_HFVALUE", "mailtoComponents", "to", "unknownHeaders", "headers", "hfields", "hfield", "toAddrs", "subject", "body", "addr", "toAddr", "atIdx", "localPart", "domain", "name", "URN_PARSE", "urnComponents", "nid", "nss", "urnScheme", "uriComponents", "UUID", "uuidComponents", "uuid", "https", "wss", "mailto", "urn", "Ajv", "self", "self", "DiscrError", "Ajv", "StatModifierFlag", "x", "min", "max", "Statistic", "EntityStatistics", "stats", "localforage", "_a", "Skill", "_a", "x", "a", "Ajv", "save"]
}

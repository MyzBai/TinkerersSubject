{
  "version": 3,
  "sources": ["../../node_modules/localforage/dist/localforage.js", "../../node_modules/ajv/lib/compile/codegen/code.ts", "../../node_modules/ajv/lib/compile/codegen/scope.ts", "../../node_modules/ajv/lib/compile/codegen/index.ts", "../../node_modules/ajv/lib/compile/util.ts", "../../node_modules/ajv/lib/compile/names.ts", "../../node_modules/ajv/lib/compile/errors.ts", "../../node_modules/ajv/lib/compile/validate/boolSchema.ts", "../../node_modules/ajv/lib/compile/rules.ts", "../../node_modules/ajv/lib/compile/validate/applicability.ts", "../../node_modules/ajv/lib/compile/validate/dataType.ts", "../../node_modules/ajv/lib/compile/validate/defaults.ts", "../../node_modules/ajv/lib/vocabularies/code.ts", "../../node_modules/ajv/lib/compile/validate/keyword.ts", "../../node_modules/ajv/lib/compile/validate/subschema.ts", "../../node_modules/fast-deep-equal/index.js", "../../node_modules/json-schema-traverse/index.js", "../../node_modules/ajv/lib/compile/resolve.ts", "../../node_modules/ajv/lib/compile/validate/index.ts", "../../node_modules/ajv/lib/runtime/validation_error.ts", "../../node_modules/ajv/lib/compile/ref_error.ts", "../../node_modules/ajv/lib/compile/index.ts", "../../node_modules/uri-js/src/index.ts", "../../node_modules/uri-js/src/schemes/urn-uuid.ts", "../../node_modules/uri-js/src/schemes/urn.ts", "../../node_modules/uri-js/src/schemes/mailto.ts", "../../node_modules/uri-js/src/schemes/wss.ts", "../../node_modules/uri-js/src/schemes/ws.ts", "../../node_modules/uri-js/src/schemes/https.ts", "../../node_modules/uri-js/src/schemes/http.ts", "../../node_modules/uri-js/src/uri.ts", "../../node_modules/uri-js/node_modules/punycode/punycode.es6.js", "../../node_modules/uri-js/src/regexps-iri.ts", "../../node_modules/uri-js/src/regexps-uri.ts", "../../node_modules/uri-js/src/util.ts", "../../node_modules/ajv/lib/runtime/uri.ts", "../../node_modules/ajv/lib/core.ts", "../../node_modules/ajv/lib/vocabularies/core/id.ts", "../../node_modules/ajv/lib/vocabularies/core/ref.ts", "../../node_modules/ajv/lib/vocabularies/core/index.ts", "../../node_modules/ajv/lib/vocabularies/validation/limitNumber.ts", "../../node_modules/ajv/lib/vocabularies/validation/multipleOf.ts", "../../node_modules/ajv/lib/runtime/ucs2length.ts", "../../node_modules/ajv/lib/vocabularies/validation/limitLength.ts", "../../node_modules/ajv/lib/vocabularies/validation/pattern.ts", "../../node_modules/ajv/lib/vocabularies/validation/limitProperties.ts", "../../node_modules/ajv/lib/vocabularies/validation/required.ts", "../../node_modules/ajv/lib/vocabularies/validation/limitItems.ts", "../../node_modules/ajv/lib/runtime/equal.ts", "../../node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts", "../../node_modules/ajv/lib/vocabularies/validation/const.ts", "../../node_modules/ajv/lib/vocabularies/validation/enum.ts", "../../node_modules/ajv/lib/vocabularies/validation/index.ts", "../../node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts", "../../node_modules/ajv/lib/vocabularies/applicator/items.ts", "../../node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts", "../../node_modules/ajv/lib/vocabularies/applicator/items2020.ts", "../../node_modules/ajv/lib/vocabularies/applicator/contains.ts", "../../node_modules/ajv/lib/vocabularies/applicator/dependencies.ts", "../../node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts", "../../node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts", "../../node_modules/ajv/lib/vocabularies/applicator/properties.ts", "../../node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts", "../../node_modules/ajv/lib/vocabularies/applicator/not.ts", "../../node_modules/ajv/lib/vocabularies/applicator/anyOf.ts", "../../node_modules/ajv/lib/vocabularies/applicator/oneOf.ts", "../../node_modules/ajv/lib/vocabularies/applicator/allOf.ts", "../../node_modules/ajv/lib/vocabularies/applicator/if.ts", "../../node_modules/ajv/lib/vocabularies/applicator/thenElse.ts", "../../node_modules/ajv/lib/vocabularies/applicator/index.ts", "../../node_modules/ajv/lib/vocabularies/format/format.ts", "../../node_modules/ajv/lib/vocabularies/format/index.ts", "../../node_modules/ajv/lib/vocabularies/metadata.ts", "../../node_modules/ajv/lib/vocabularies/draft7.ts", "../../node_modules/ajv/lib/vocabularies/discriminator/types.ts", "../../node_modules/ajv/lib/vocabularies/discriminator/index.ts", "../../node_modules/ajv/lib/ajv.ts", "../../src/utils/helpers.ts", "../../src/utils/saveManager.ts", "../../src/home/configEntryHandlers.ts", "../../src/utils/EventEmitter.ts", "../../src/utils/Value.ts", "../../src/game/mods.ts", "../../src/game/calc/calcDamage.ts", "../../src/game/calc/calcMod.ts", "../../src/game/enemy.ts", "../../src/utils/Observers.ts", "../../src/game/statistics.ts", "../../src/game/player.ts", "../../src/game/skills/skillModal.ts", "../../src/game/skills/skillSlots.ts", "../../src/game/skills/skills.ts", "../../src/utils/Loop.ts", "../../src/game/components/passives.ts", "../../src/game/components/items/crafting.ts", "../../src/game/components/items/items.ts", "../../src/game/components/achievements.ts", "../../src/game/components/loader.ts", "../../src/game/saveGame.ts", "../../src/game/game.ts", "../../src/utils/validateConfig.ts", "../../src/home/home.ts", "../../src/main.ts"],
  "sourcesContent": ["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n", "export abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n", "import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n", "import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(private readonly varKind: Name, private readonly name: Name, private rhs?: SafeExpr) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(readonly lhs: Code, public rhs: SafeExpr, private readonly sideEffects?: boolean) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(lhs: Code, private readonly op: Code, rhs: SafeExpr, sideEffects?: boolean) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(private condition: Code | boolean, nodes?: ChildNode[]) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(public name: Name, public args: Code, public async?: boolean) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n", "import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n", "import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n", "import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n", "import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n", "import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = typeof _jsonTypes[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n", "import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n", "import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n", "import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n", "import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n", "import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n", "import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n", "import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponents} from \"uri-js\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponents): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let baseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") baseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = baseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(baseId ? _resolve(baseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n", "import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  it.dataTypes = it.dataTypes.filter((t) => includesType(types, t))\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n", "import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n", "import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n", "import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport * as URI from \"uri-js\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URI.URIComponents,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n", "import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;", "/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n", "import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n", "import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n", "export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}", "import * as uri from \"uri-js\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n", "export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n", "import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n", "// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n", "import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n", "import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n", "import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n", "import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n", "import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n", "import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n", "import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch?.$ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nclass Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n", "\n\n\nexport const avg = (a: number, b: number) => (a + b) / 2;\nexport const randomRange = (min: number, max: number) => Math.random() * (max - min) + min;\nexport const randomRangeInt = (min: number, max: number) => Math.floor(randomRange(min, max));\nexport const clamp = (value: number, min: number, max: number) => Math.max(min, Math.min(value, max));\nexport const lerp = (a: number, b: number, t: number) => a + (b - a) * t;\nexport const isLocalHost = location.hostname === 'localhost' || location.hostname === '127.0.0.1' || location.port.length !== 0 || location.protocol !== 'http:';\n\nexport function queryHTML<T extends HTMLElement>(selectors: string, parent?: HTMLElement) {\n    const element = (parent || document).querySelector<T>(selectors);\n    if (!element) {\n        throw Error(`HTMLElement with selectors ${selectors} could not be found!`);\n    }\n    return element;\n}\n\n// export function initTabs(btnsParent: Element | null, contentsParent: Element | null) {\n\n//     if (!btnsParent || !contentsParent) {\n//         console.error(btnsParent, contentsParent);\n//         return;\n//     }\n//     const btns = btnsParent.querySelectorAll(':scope > [data-tab-target]');\n//     btns.forEach(menuBtn => {\n//         menuBtn.addEventListener('click', () => {\n//             btns.forEach(x => x.classList.toggle('selected', x === menuBtn));\n//             const targetAttr = menuBtn.getAttribute('data-tab-target');\n//             const target = contentsParent.querySelector(`[data-tab-content=\"${targetAttr}\"]`);\n//             Array.from(target?.parentElement?.children || []).filter(x => x.hasAttribute('data-tab-content')).forEach(x => {\n//                 x.classList.toggle('hidden', x.getAttribute('data-tab-content') !== targetAttr);\n//             });\n//         });\n//     });\n// }\n\nexport function registerTabs(btnsParent: HTMLElement, contentsParent: HTMLElement, callback: (btn: HTMLElement, content: HTMLElement) => void) {\n    const btns = [...btnsParent.querySelectorAll<HTMLElement>(':scope > [data-tab-target]')];\n    for (const btn of btns) {\n        btn.addEventListener('click', () => {\n            btns.forEach(x => x.classList.toggle('selected', x === btn));\n            const targetAttr = btn.getAttribute('data-tab-target');\n            const target = queryHTML(`[data-tab-content=\"${targetAttr}\"]`, contentsParent);\n            callback(btn, target);\n        });\n    }\n}\n\nexport function tabCallback(btn: HTMLElement, content: HTMLElement) {\n    const targetAttr = btn.getAttribute('data-tab-target');\n    [...content.parentElement?.children || []].filter(x => x.hasAttribute('data-tab-content')).forEach(x => {\n        x.classList.toggle('hidden', x.getAttribute('data-tab-content') !== targetAttr);\n    });\n}\n\n\nexport function highlightHTMLElement(element: HTMLElement, trigger: 'click' | 'mouseover') {\n    const attr = 'data-highlight-notification';\n    if (element.classList.contains('selected')) {\n        return;\n    }\n    element.setAttribute(attr, '');\n    const listener = () => {\n        element.removeAttribute(attr);\n        element.removeEventListener(trigger, listener);\n    };\n    element.addEventListener(trigger, listener);\n}\n\n// export const highlightHTMLElement = (() => {\n//     type Trigger = 'click' | 'mouseover';\n//     const attributeName = 'data-highlight-notification';\n\n//     class Node {\n//         element: HTMLElement;\n//         parent: Node | null;\n//         isRoot: boolean;\n//         trigger: Trigger;\n//         constructor(element: HTMLElement, parent: Node | null, isRoot: boolean, trigger: Trigger) {\n//             this.element = element;\n//             this.parent = parent;\n//             this.isRoot = isRoot;\n//             this.trigger = trigger;\n//             if (!isRoot) {\n//                 const listener = () => {\n//                     element.removeEventListener(trigger, listener);\n//                     element.removeAttribute(attributeName);\n//                     this.parent?.evaluate();\n//                 }\n//                 element.addEventListener(trigger, listener);\n//             }\n\n//         }\n//         evaluate() {\n//             const children = nodes.filter(x => x.parent === this);\n//             if (children.length === 0) {\n//                 return;\n//             }\n//             const test = children.some(x => x.element.hasAttribute(attributeName));\n//             if (!test) {\n//                 this.element.removeAttribute(attributeName);\n//                 this.parent?.evaluate();\n//             }\n//         }\n//     }\n//     const nodes = [] as Node[];\n//     function register(roots: HTMLElement[], elements: HTMLElement[], trigger: Trigger) {\n\n//         let parent: Node = null;\n//         for (const root of roots) {\n//             let rootNode = nodes.find(x => x.element === root);\n//             if (!rootNode) {\n//                 rootNode = new Node(root, parent, true, trigger);\n//                 nodes.push(rootNode);\n//             }\n//             parent = rootNode;\n//         }\n//         for (const element of elements) {\n//             const node = new Node(element, parent, false, trigger);\n//             nodes.push(node);\n//         }\n\n//         [...roots, ...elements].forEach(x => x.setAttribute(attributeName, ''));\n//     }\n//     return {\n//         register,\n//     }\n// })();", "import localforage from 'localforage';\n\ntype SaveType = 'Game';\n\nexport default { save, load }\n\nexport async function save(type: SaveType, object: Object) {\n    try {\n        switch (type) {\n            case 'Game': return await saveBlob('ts-game', object);\n        }\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nexport async function load<T>(type: SaveType) {\n    try {\n        switch (type) {\n            case 'Game':\n                const blob = await loadBlob('ts-game');\n                if (blob) {\n                    return blob as T;\n                }\n                return null;\n            default: return null;\n        }\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nasync function saveBlob(key: string, object: Object) {\n    const str = window.btoa(JSON.stringify(object));\n    const blob = new Blob([str], { type: 'text/plain' });\n    return await localforage.setItem<Blob>(key, blob);\n}\n\nasync function loadBlob(key: string) {\n    const blob = await localforage.getItem<Blob>(key);\n    if (!blob) {\n        return blob;\n    }\n    const str = await blob.text();\n    return JSON.parse(window.atob(str)) as Object;\n}", "import type GConfig from \"@src/types/gconfig\";\nimport configList from '@public/gconfig/configList.json';\nimport saveManager from \"@src/utils/saveManager\";\nimport type { Save } from \"@src/game/saveGame\";\nimport { queryHTML } from \"@src/utils/helpers\";\n\nexport type EntryType = 'new' | 'save';\n\ninterface EntryHandler {\n    getEntries: () => Promise<ConfigEntry[]>;\n    getEntryListElements(): Promise<HTMLLIElement[]>;\n}\n\nexport interface ConfigEntry {\n    type: EntryType;\n    name: string;\n    description?: string;\n    rawUrl: string;\n    id: string;\n    createdAt?: number;\n    lastSavedAt?: number;\n}\n\nlet activeEntry: ConfigEntry;\n\nexport class ConfigEntryHandler {\n    config: GConfig | undefined;\n    private remoteEntryHandler = new NewEntryHandler();\n    private savedEntryHandler = new SavedEntryHandler();\n    constructor() { }\n\n    getActiveEntry() {\n        return activeEntry;\n    }\n\n    async getEntryListElements(type: EntryType) {\n        switch (type) {\n            case 'new': return await this.remoteEntryHandler.getEntryListElements();\n            case 'save': return await this.savedEntryHandler.getEntryListElements();\n        }\n    }\n}\n\nclass NewEntryHandler implements EntryHandler {\n    constructor() { }\n\n    async getEntries() {\n        return configList.list.map<ConfigEntry>(x => ({ ...x, id: crypto.randomUUID(), type: 'new' }));\n    }\n\n\n    async getEntryListElements() {\n        const entries = await this.getEntries();\n        const elements = [] as HTMLLIElement[];\n        for (const entry of entries) {\n            const element = document.createElement('li');\n            element.classList.add('g-list-item');\n            const suffix = entry.rawUrl.startsWith('https:') ? '' : ' (Local)';\n            element.textContent = entry.name + suffix;\n            element.addEventListener('click', () => {\n                activeEntry = entry;\n            });\n            elements.push(element);\n        }\n        return elements;\n    }\n}\n\nclass SavedEntryHandler implements EntryHandler {\n    constructor() { }\n\n    async getEntries() {\n        const blob = await saveManager.load('Game') as { [K: string]: Save };\n        if (!blob) {\n            return [];\n        }\n        const arr = Object.values(blob).sort((a, b) => b.meta.lastSavedAt - a.meta.lastSavedAt);\n        return arr.map<ConfigEntry>(x => ({ ...x.meta, type: 'save' }));\n    }\n\n    async getEntryListElements() {\n        const entries = await this.getEntries();\n        const elements = [] as HTMLLIElement[];\n        for (const entry of entries.filter(x => x.rawUrl)) {\n            const element = document.createElement('li');\n            element.classList.add('g-list-item');\n            const timeText = this.generateTimeText(entry.lastSavedAt);\n            element.insertAdjacentHTML('beforeend', `<div>${entry.name}</div><div class=\"g-text-small\">${timeText}</div>`);\n            element.addEventListener('click', () => {\n                activeEntry = entry;\n                queryHTML('[data-config-info] button[data-role=\"delete\"]').setAttribute('data-id', entry.id);\n            });\n            elements.push(element);\n        }\n        return elements;\n    }\n\n    private generateTimeText(startTime = 0) {\n        const ms = Date.now() - startTime;\n        // const days = Math.floor(ms / 86400000);\n        const hours = (Math.floor(ms / 3600000) % 24);\n        const mins = (Math.floor(ms / 60000) % 60).toFixed();\n        return `Last played: ${hours > 0 ? hours + 'h ' : ''}${mins}min`;\n        // return `Last Played ${days}d ${hours}h ${mins}min`;\n    }\n\n}\n", "type Callback<T> = (args: T) => void;\ninterface CallbackOptions {\n    once?: boolean;\n}\ntype Listener<T> = { callback: Callback<T>, opts?: CallbackOptions }\n\nexport default class EventEmitter<T>{\n    private readonly listeners = new Map<Callback<T>, Listener<T>>;\n    constructor() { }\n\n    listen(callback: Callback<T>, opts?: CallbackOptions) {\n        const instance = { callback, opts };\n        this.listeners.set(callback, instance);\n    }\n    removeListener(callback: Callback<T>) {\n        this.listeners.delete(callback);\n    }\n    removeAllListeners() {\n        this.listeners.clear();\n    }\n\n    invoke(args: T) {\n        this.listeners.forEach(x => {\n            x.callback(args);\n        });\n        for (const [key, value] of this.listeners.entries()) {\n            if(value.opts?.once){\n                this.listeners.delete(key);\n            }\n        }\n    }\n}", "import EventEmitter from \"./EventEmitter\";\n\ntype EventType = 'change' | 'set' | 'add' | 'subtract';\ntype Callback = (v: number) => void;\n\nexport default class Value{\n    private readonly defaultValue: number;\n    private value: number;\n    private readonly listeners = new Map<EventType, EventEmitter<number>>([\n        ['change', new EventEmitter<number>()],\n        ['set', new EventEmitter<number>()],\n        ['add', new EventEmitter<number>()],\n        ['subtract', new EventEmitter<number>()],\n    ]);\n    constructor(defaultValue: number) {\n        this.defaultValue = defaultValue;\n        this.value = defaultValue;\n    }\n\n    set(v: number) {\n        this.value = v;\n        this.listeners.get('set')?.invoke(this.value);\n        this.listeners.get('change')?.invoke(this.value);\n    }\n    get() {\n        return this.value;\n    }\n    add(v: number) {\n        this.value += v;\n        this.listeners.get('add')?.invoke(this.value);\n        this.listeners.get('change')?.invoke(this.value);\n    }\n    subtract(v: number) {\n        this.value -= v;\n        this.listeners.get('subtract')?.invoke(this.value);\n        this.listeners.get('change')?.invoke(this.value);\n    }\n\n    reset() {\n        this.value = this.defaultValue;\n        this.listeners.forEach(x => x.removeAllListeners());\n    }\n\n    addListener(type: EventType, callback: Callback) {\n        this.listeners.get(type)?.listen(callback);\n    }\n\n    removeListener(type: EventType, callback: Callback) {\n        this.listeners.get(type)?.removeListener(callback);\n    }\n}", "import type { Mod } from \"@src/types/gconfig\";\nimport EventEmitter from \"@utils/EventEmitter\";\n\n//#region Types\nexport type ModifierTag = 'Gold' | 'Physical' | 'Speed' | 'Mana' | 'Critical';\nexport type StatModifierValueType = 'Base' | 'Inc' | 'More';\n//#region Mod Description\nexport type ModDescription =\n    | '#% Increased Physical Damage'\n    | '#% More Physical Damage'\n    | '#% More Damage'\n    | 'Adds # To # Physical Damage'\n    | '+#% Hit Chance'\n    | '#% Increased Attack Speed'\n    | '#% More Attack Speed'\n    | '#% Increased Maximum Mana'\n    | '+# Maximum Mana'\n    | '+# Mana Regeneration'\n    | '+#% Critical Hit Chance'\n    | '+#% Critical Hit Multiplier'\n    | '+# Gold Per Second'\n    | '#% Increased Gold Per Second'\n    | '#% Increased Skill Duration'\n    ;\n\n//#endregion Mod Description\n\n//#region Stat Name\nexport type StatName =\n    | 'GoldPerSecond'\n    | DamageStatName\n    | 'AttackManaCost'\n    | 'AttackSpeed'\n    | 'HitChance'\n    | 'CritChance'\n    | 'CritMulti'\n    | 'ManaRegen'\n    | 'MaxMana'\n    | 'Gold'\n    | 'Duration';\n//#endregion Stat Name\n\n//#region Damage Stat Name\ntype DamageStatName =\n    'BaseDamageMultiplier' |\n    'Damage' |\n    'MinDamage' |\n    'MaxDamage' |\n    'ElementalConvertedToPhysical' |\n    'ChaosConvertedToPhysical' |\n    'ChaosConvertedToElemental' |\n    'ChaosConvertedToChaos' | ConversionStatName | GainAsStatName;\n\nexport type ConversionStatName = 'ElementalConvertedToPhysical' | 'ChaosConvertedToPhysical' | 'ChaosConvertedToElemental';\nexport type GainAsStatName = 'ElementalGainAsPhysical' | 'ChaosGainAsElemental' | 'ChaosGainAsPhysical';\n//#endregion Damage Stat Name\n\n//#endregion Types\n\ninterface ModTemplate {\n    readonly desc: ModDescription;\n    readonly tags: ModifierTag[],\n    readonly stats: {\n        readonly name: StatName;\n        readonly valueType: StatModifierValueType;\n        readonly flags?: number;\n    }[];\n}\n\ninterface StatModifierParams {\n    name: StatName;\n    valueType: StatModifierValueType;\n    value: number;\n    flags?: number;\n    min?: number;\n    max?: number;\n    source?: string;\n}\n\nexport const StatModifierFlags = {\n    None: 1 << 0,\n    Attack: 1 << 1,\n    Physical: 1 << 2,\n    Elemental: 1 << 3,\n    Chaos: 1 << 4,\n    Skill: 1 << 5\n} as const;\n\nexport const modTemplates: ModTemplate[] = [\n    {\n        desc: '#% Increased Physical Damage',\n        tags: ['Physical'],\n        stats: [{ name: 'Damage', valueType: 'Inc', flags: StatModifierFlags.Physical }]\n    },\n    {\n        desc: '#% More Physical Damage',\n        tags: ['Physical'],\n        stats: [{ name: 'Damage', valueType: 'More', flags: StatModifierFlags.Physical }]\n    },\n    {\n        desc: '#% More Damage',\n        tags: [],\n        stats: [{ name: 'Damage', valueType: 'More' }]\n    },\n    {\n        desc: 'Adds # To # Physical Damage',\n        tags: ['Physical'],\n        stats: [{ name: 'MinDamage', valueType: 'Base', flags: StatModifierFlags.Physical },\n        { name: 'MaxDamage', valueType: 'Base', flags: StatModifierFlags.Physical }]\n    },\n    {\n        desc: '+#% Hit Chance',\n        tags: [],\n        stats: [{ name: 'HitChance', valueType: 'Base' }]\n    },\n    {\n        desc: '#% Increased Attack Speed',\n        tags: ['Speed'],\n        stats: [{ name: 'AttackSpeed', valueType: 'Inc' }]\n    },\n    {\n        desc: '#% More Attack Speed',\n        tags: ['Speed'],\n        stats: [{ name: 'AttackSpeed', valueType: 'More' }]\n    },\n    {\n        desc: '#% Increased Maximum Mana',\n        tags: ['Mana'],\n        stats: [{ name: 'MaxMana', valueType: 'Inc' }]\n    },\n    {\n        desc: '+# Maximum Mana',\n        tags: ['Mana'],\n        stats: [{ name: 'MaxMana', valueType: 'Base' }]\n    },\n    {\n        desc: '+# Mana Regeneration',\n        tags: ['Mana'],\n        stats: [{ name: 'ManaRegen', valueType: 'Base' }]\n    },\n    {\n        desc: '+#% Critical Hit Chance',\n        tags: ['Critical'],\n        stats: [{ name: 'CritChance', valueType: 'Base' }]\n    },\n    {\n        desc: '+#% Critical Hit Multiplier',\n        tags: ['Critical'],\n        stats: [{ name: 'CritMulti', valueType: 'Base' }]\n    },\n    {\n        desc: '+# Gold Per Second',\n        tags: ['Gold'],\n        stats: [{ name: 'GoldPerSecond', valueType: 'Base' }],\n    },\n    {\n        desc: '#% Increased Gold Per Second',\n        tags: ['Gold'],\n        stats: [{ name: 'GoldPerSecond', valueType: 'Inc' }],\n    },\n    {\n        desc: '#% Increased Skill Duration',\n        tags: ['Gold'],\n        stats: [{ name: 'Duration', valueType: 'Inc', flags: StatModifierFlags.Skill }],\n    },\n];\n\nexport class Modifier {\n    readonly text: Mod;\n    readonly template: ModTemplate;\n    readonly tags: ModifierTag[] = [];\n    readonly stats: StatModifier[] = [];\n    constructor(text: Mod) {\n        this.text = text;\n        const match = [...text.matchAll(/{(?<v1>\\d+(\\.\\d+)?)(-(?<v2>\\d+(\\.\\d+)?))?\\}/g)];\n        const desc = text.replace(/{[^}]+}/g, '#') as ModDescription;\n        if(!modTemplates.some(x => x.desc === desc)){\n            throw Error('Failed to find mod template. Invalid mod description');\n        }\n        this.template = modTemplates.find(x => x.desc === desc)!;\n        this.tags = this.template.tags;\n\n        for (const statTemplate of this.template.stats) {\n            const groups = match[this.template.stats.indexOf(statTemplate)].groups;\n            if (!groups) {\n                throw Error();\n            }\n            const { v1, v2 } = groups;\n            const min = parseFloat(v1);\n            const max = parseFloat(v2) || min;\n            const value = min;\n            this.stats.push(new StatModifier({ name: statTemplate.name, valueType: statTemplate.valueType, value, min, max, flags: statTemplate.flags || 0 }));\n        }\n    }\n\n    get templateDesc() { return this.template.desc; }\n\n    get desc() {\n        let i = 0;\n        return this.templateDesc.replace(/#+/g, (x) => {\n            const stat = this.stats[i++];\n            const value = stat.value?.toFixed(x.length - 1) || '#';\n            return value;\n        });\n    }\n\n    static compare(a: Modifier, b: Modifier) {\n        return a.compare(b);\n    }\n    static sort(a: Modifier, b: Modifier) {\n        return a.sort(b);\n    }\n    sort(other: Modifier){\n        return modTemplates.findIndex(x => x.desc === this.templateDesc) - modTemplates.findIndex(x => x.desc === other.templateDesc);\n    }\n\n    compare(other: Modifier) {\n        return this.templateDesc === other.templateDesc;\n    }\n\n    copy() {\n        return new Modifier(this.text);\n    }\n\n    setStatValues(values: number[]){\n        if(this.stats.length !== values.length){\n            return;\n        }\n        this.stats.forEach((x,i) => x.value = values[i]);\n        return true;\n    }\n}\n\nexport class StatModifier {\n\n    readonly name: StatName;\n    readonly valueType: StatModifierValueType;\n    value: number;\n    readonly flags: number;\n    readonly min: number;\n    readonly max: number;\n    source?: string;\n    constructor(data: StatModifierParams) {\n        this.name = data.name;\n        this.valueType = data.valueType;\n        this.value = data.value;\n        this.flags = data.flags || 0;\n        this.min = data.min || this.value;\n        this.max = data.max || this.value || this.min;\n        this.source = data.source;\n    }\n\n    randomizeValue() {\n        this.value = Math.random() * (this.max - this.min) + this.min;\n    }\n}\n\nexport class ModDB {\n    private _modList: StatModifier[];\n    public readonly onChange: EventEmitter<StatModifier[]>;\n    constructor() {\n        this._modList = [];\n        this.onChange = new EventEmitter<StatModifier[]>();\n    }\n\n    get modList() { return this._modList; }\n\n    add(statMods: StatModifier[], source: string) {\n        statMods.forEach(x => x.source = source);\n        this.modList.push(...statMods);\n        this.onChange.invoke([...this.modList]);\n    }\n\n    removeBySource(source: string) {\n        this._modList = this.modList.filter(x => x.source !== source);\n        this.onChange.invoke([...this.modList]);\n    }\n\n    clear() {\n        this._modList = [];\n        this.onChange.invoke([...this.modList]);\n    }\n\n\n}", "import { StatModifier, StatModifierFlags, StatName } from \"@game/mods\";\nimport { calcModBase, calcModIncMore, calcModTotal, Configuration } from \"./calcMod\";\nimport { randomRange } from '@utils/helpers';\n\ntype ConversionValues = Partial<Record<keyof typeof DamageTypeFlags | 'multi', number>>;\nexport type ConversionTable = Partial<Record<keyof typeof DamageTypeFlags, ConversionValues>>;\n\ntype DamageType = 'Physical' | 'Elemental' | 'Chaos';\ntype DamageFlag = number;\nconst DamageTypeFlags: Record<DamageType, DamageFlag> = {\n    Physical: 1 << 0,\n    Elemental: 1 << 1,\n    Chaos: 1 << 2,\n} as const;\n\n\nexport interface AttackResult {\n    hit: boolean;\n    crit?: boolean;\n    totalDamage?: number;\n}\n\nconst damageNamesMetaTable = (() => {\n    type StatName = 'Damage' | `${DamageType}Damage`;\n    const names: StatName[][] = [];\n    const length = Object.values(DamageTypeFlags).reduce((a, v) => a + v);\n    for (let i = 0; i <= length; i++) {\n        const flagList: StatName[] = ['Damage'];\n        Object.entries(DamageTypeFlags).forEach(([key, value]) => {\n            if (value & i) {\n                const s = `${key}Damage` as StatName;\n                flagList.push(s);\n            }\n        });\n        names.push(flagList);\n    }\n    return names;\n})();\n\nexport function calcAttack(statModList: StatModifier[]) {\n\n    const config: Configuration = {\n        statModList,\n        flags: StatModifierFlags.Attack,\n        calcMinMax: randomRange\n    };\n\n    //Hit\n    const hitChance = calcModTotal('HitChance', config) / 100;\n    const hitFac = randomRange(0, 1);\n    const hit = hitChance >= hitFac;\n    if (!hit) {\n        return false;\n    }\n\n    config.flags = StatModifierFlags.Attack;\n    const baseDamage = calcBaseDamage(config);\n\n\n    const critChance = Math.min(calcModTotal('CritChance', config), 100) / 100;\n    const critFac = randomRange(0, 1);\n    const crit = critChance >= critFac;\n\n    //Crit\n    let critMultiplier = 1;\n    if (crit) {\n        critMultiplier = calcModTotal('CritMulti', config) / 100;\n    }\n\n    const baseDamageMultiplier = calcModBase('BaseDamageMultiplier', config);\n    //finalize\n    const finalMultiplier = (baseDamageMultiplier / 100) * critMultiplier;\n\n    const totalDamage = baseDamage.totalBaseDamage * finalMultiplier;\n    const totalPhysicalDamage = baseDamage.physicalDamage * finalMultiplier;\n    return {\n        hit,\n        crit,\n        totalDamage,\n        totalPhysicalDamage\n    }\n}\n\nexport function calcBaseDamage(config: Configuration) {\n\n    const conversionTable = generateConversionTable(config);\n    const output = {\n        totalBaseDamage: 0,\n        minPhysicalDamage: 0,\n        maxPhysicalDamage: 0,\n        physicalDamage: 0,\n        minElementalDamage: 0,\n        maxElementalDamage: 0,\n        elementalDamage: 0,\n        minChaosDamage: 0,\n        maxChaosDamage: 0,\n        chaosDamage: 0\n    };\n\n    let totalBaseDamage = 0;\n\n    {\n        config.flags |= StatModifierFlags.Physical;\n        const { min, max } = calcDamage('Physical', config, conversionTable);\n        output.minPhysicalDamage = min;\n        output.maxPhysicalDamage = max;\n        const baseDamage = config.calcMinMax(min, max);\n        output.physicalDamage = baseDamage;\n        totalBaseDamage += baseDamage;\n    }\n\n    output.totalBaseDamage = totalBaseDamage;\n    return output;\n}\n\n\nfunction calcDamage(damageType: DamageType, config: Configuration, conversionTable: ConversionTable, damageFlag = 0) {\n\n    damageFlag |= DamageTypeFlags[damageType];\n    let addMin = 0;\n    let addMax = 0;\n    const damageTypes = ['Physical', 'Elemental', 'Chaos'] as const;\n    for (const type of damageTypes) {\n        if (type === damageType) {\n            break;\n        }\n        const convMulti = (conversionTable[type] as ConversionValues)[damageType] as number;\n        if (convMulti > 0) {\n            const { min, max } = calcDamage(type, config, conversionTable, damageFlag);\n            addMin += Math.ceil(min * convMulti);\n            addMax += Math.ceil(max * convMulti);\n        }\n    }\n\n    const baseMin = calcModBase(`MinDamage` as StatName, config);\n    const baseMax = calcModBase(`MaxDamage` as StatName, config);\n\n    const modNames = damageNamesMetaTable[damageFlag];\n    const min = Math.round(calcModIncMore(modNames as StatName[], baseMin, config) + addMin);\n    const max = Math.round(calcModIncMore(modNames as StatName[], baseMax, config) + addMax);\n    return { min, max };\n}\n\n\nfunction generateConversionTable(config: Configuration) {\n\n    type Conversion = Partial<Record<keyof typeof DamageTypeFlags, number>>;\n    const conversionTable: ConversionTable = {}\n    const damageTypeFlagKeys = Object.keys(DamageTypeFlags) as (keyof typeof DamageTypeFlags)[];\n    for (let i = 0; i < damageTypeFlagKeys.length; i++) {\n        const damageType = damageTypeFlagKeys[i];\n        const globalConv: Conversion = {};\n        const skillConv: Conversion = {};\n        const add: Conversion = {};\n        let globalTotal = 0;\n        let skillTotal = 0;\n        for (let j = i + 1; j < damageTypeFlagKeys.length; j++) {\n            const otherDamageType = damageTypeFlagKeys[i];\n            const convertedToName = `${damageType}ConvertedTo${otherDamageType}` as StatName;\n            globalConv[otherDamageType] = calcModBase(convertedToName, config);\n            globalTotal += globalConv[otherDamageType] as number;\n            skillConv[otherDamageType] = calcModBase(convertedToName, config);\n            skillTotal += skillConv[otherDamageType] as number;\n            add[otherDamageType] = calcModBase(`${damageType}GainAs${otherDamageType}` as StatName, config);\n        }\n\n        const fac = skillTotal > 100 ? 100 / skillTotal : (100 - skillTotal) / globalTotal;\n        for (const key of Object.keys(skillConv)) {\n            skillConv[key as DamageType]! *= fac;\n        }\n\n        const conversionValues: ConversionValues = { multi: 1 };\n        for (const [key, value] of Object.entries(globalConv)) {\n            const skillConvValue = skillConv[key as DamageType] || 0;\n            const addValue = add[key as DamageType] || 0;\n            conversionValues[key as DamageType] = (value + skillConvValue + addValue) / 100;\n        }\n        conversionValues.multi = 1 - Math.min((globalTotal + skillTotal) / 100, 1)\n        conversionTable[damageType] = conversionValues;\n    }\n    conversionTable['Chaos'] = { multi: 1 };\n    return conversionTable;\n}", "import { avg, clamp } from \"@utils/helpers\";\nimport { StatModifier, StatModifierFlags, StatName, StatModifierValueType } from \"../mods\";\nimport { calcBaseDamage, ConversionTable } from \"./calcDamage\";\n\n\n\nexport interface Configuration {\n    statModList: StatModifier[];\n    flags: number;\n    calcMinMax: (min: number, max: number) => number;\n    conversionTable?: ConversionTable;\n}\n\n\nexport function calcPlayerStats(statModList: StatModifier[]) {\n\n    const config: Configuration = {\n        statModList,\n        flags: StatModifierFlags.Attack,\n        calcMinMax: avg\n    };\n\n    //Hit Chance\n    const hitChance = calcModTotal('HitChance', config) / 100;\n    const clampedHitChance = clamp(hitChance, 0, 1);\n\n    //Attack Speed\n    const attackSpeed = calcModTotal('AttackSpeed', config);\n    //Base Damage Multiplier\n    const baseDamageMultiplier = calcModBase('BaseDamageMultiplier', config) / 100;\n\n    //Mana\n    const maxMana = calcModTotal('MaxMana', config);\n    const manaRegen = calcModTotal('ManaRegen', config);\n    const attackManaCost = calcModTotal('AttackManaCost', config);\n    //Crit\n    const critChance = calcModTotal('CritChance', config) / 100;\n    const clampedCritChance = clamp(critChance, 0, 1);\n    const critMulti = Math.max(calcModTotal('CritMulti', config), 100) / 100;\n    // const critDamageMultiplier = 1 + (clampedCritChance * (critMulti - 1));\n    const critDamageMultiplier = 1 + (clampedCritChance * critMulti);\n\n    const baseDamageResult = calcBaseDamage(config);\n\n    const multiplier = baseDamageMultiplier * critDamageMultiplier;\n    const dps = baseDamageResult.totalBaseDamage * clampedHitChance * attackSpeed * multiplier;\n\n    return {\n        hitChance: hitChance * 100,\n        clampedHitChance: clampedHitChance * 100,\n        attackSpeed,\n        critChance: critChance * 100,\n        clampedCritChance: clampedCritChance * 100,\n        critMulti: critMulti * 100,\n        maxMana,\n        manaRegen,\n        attackManaCost,\n        dps,\n        minPhysicalDamage: baseDamageResult.minPhysicalDamage,\n        maxPhysicalDamage: baseDamageResult.maxPhysicalDamage,\n\n        goldPerSecond: calcModTotal('GoldPerSecond', config),\n        skillDurationMultiplier: calcModIncMore('Duration', 1, Object.assign({}, config, { flags: StatModifierFlags.Skill }))\n    }\n}\n\n\n//#region calcMod\nexport function calcModBase(modName: StatName | StatName[], config: Configuration) {\n    return calcModSum('Base', modName, config);\n}\nexport function calcModInc(modName: StatName | StatName[], config: Configuration) {\n    return Math.max(0, 1 + calcModSum(\"Inc\", modName, config) / 100);\n}\nexport function calcModMore(modName: StatName | StatName[], config: Configuration) {\n    return Math.max(0, calcModSum(\"More\", modName, config));\n}\nexport function calcModIncMore(modName: StatName | StatName[], base: number, config: Configuration) {\n    if (base <= 0) return 0;\n    const inc = calcModInc(modName, config);\n    const more = calcModMore(modName, config);\n    return base * inc * more;\n}\nexport function calcModTotal(modName: StatName | StatName[], config: Configuration) {\n    const base = calcModBase(modName, config);\n    if (base === 0) {\n        return 0;\n    }\n    const inc = calcModInc(modName, config);\n    const more = calcModMore(modName, config);\n    return base * inc * more;\n}\nexport function calcModSum(valueType: StatModifierValueType, name: StatName | StatName[], config: Configuration) {\n\n    name = Array.isArray(name) ? name : [name]; // force array\n    let result = valueType === 'More' ? 1 : 0;\n    const hasFlag = (a: number, b: number) => {\n        return (a & b) === b;\n    }\n\n    const filteredModList = config.statModList.filter(x => {\n        if (!name.includes(x.name)) {\n            return false;\n        }\n        if (x.valueType !== valueType)\n            return false;\n        if (!hasFlag(config.flags, x.flags || 0))\n            return false;\n        return true;\n    });\n    for (const mod of filteredModList) {\n        let value = mod.value;\n        if (valueType === 'More') {\n            result *= 1 + value / 100;\n        } else {\n            result += value;\n        }\n    }\n    return Math.max(0, result);\n}\n//#endregion calcMod", "import type GConfig from \"@src/types/gconfig\";\nimport EventEmitter from \"@src/utils/EventEmitter\";\nimport { clamp, queryHTML } from \"@src/utils/helpers\";\nimport type { Save } from \"./saveGame\";\n\nconst healthBar = queryHTML('.p-game .s-enemy [data-health-bar]');\n\nexport let enemies: Enemy[];\nlet activeEnemy: Enemy;\nlet index: number;\nexport const onDeath = new EventEmitter<Enemy>();\nonDeath.listen(() => {\n    activeEnemy = enemies[++index];\n    activeEnemy.init();\n});\n\nexport function init(data: GConfig['enemies']) {\n    enemies = [];\n    index = 0;\n\n    enemies.push(...data.enemyList.map(health => new Enemy(health)));\n    enemies.push(new Dummy());\n\n    activeEnemy = enemies[index];\n    activeEnemy.init();\n}\n\nexport function dealDamage(amount: number) {\n    activeEnemy.takeDamage(amount);\n}\n\nexport function spawnEnemyAt(level: number) {\n    index = clamp(level - 1, 0, enemies.length - 1);\n    activeEnemy = enemies[index];\n    activeEnemy.init();\n}\n\nexport function saveEnemy(saveObj: Save) {\n    saveObj.enemy = {\n        index,\n        health: activeEnemy.health,\n        dummyDamage: (activeEnemy as Dummy)?.damage\n    }\n}\n\nexport function loadEnemy(save: Save) {\n    const savedEnemy = save.enemy;\n    if(!savedEnemy){\n        return;\n    }\n    index = savedEnemy.index || 0;\n    activeEnemy = enemies[index];\n    activeEnemy.health = savedEnemy.health;\n    if (activeEnemy instanceof Dummy) {\n        activeEnemy.damage = savedEnemy.dummyDamage || 0;\n    }\n    activeEnemy.init();\n}\n\nclass Enemy {\n    health: number;\n    constructor(public readonly maxHealth: number) {\n        this.health = maxHealth;\n    }\n\n    init(){\n        this.updateHealthBar();\n    }\n\n    takeDamage(amount: number) {\n        this.health = clamp(this.health - amount, 0, this.health);\n        this.updateHealthBar();\n        if (this.health === 0) {\n            onDeath.invoke(this);\n        }\n    }\n\n    updateHealthBar() {\n        const pct = this.health / this.maxHealth * 100;\n        healthBar.style.width = `${pct}%`;\n    }\n}\n\nclass Dummy extends Enemy {\n    damage: number;\n    constructor() {\n        super(1);\n        this.damage = 0;\n    }\n\n    init(){\n        healthBar.style.width = '100%';\n        this.updateHealthBar();\n    }\n\n    takeDamage(amount: number) {\n        this.damage += amount;\n        this.updateHealthBar();\n    }\n\n    updateHealthBar() {\n        healthBar.setAttribute('data-damage', this.damage.toFixed());\n    }\n}\n\nexport default { init, spawnEnemyAt, dealDamage, onDeath }", "export const visibilityObserver = (element: HTMLElement, callback: (visible: boolean, observer: IntersectionObserver) => void) => {\n    const observer = new IntersectionObserver(observe);\n    observer.observe(element);\n    return observer;\n    function observe(entries: IntersectionObserverEntry[]) {\n        entries.forEach(entry => {\n            callback(entry.isIntersecting, observer);\n        });\n    }\n}", "import { visibilityObserver } from \"@utils/Observers\";\nimport Value from \"@utils/Value\";\nimport { gameLoop } from \"./game\";\nimport type { Save } from \"./saveGame\";\n\nclass Statistic extends Value {\n    readonly hidden: boolean;\n    constructor(defaultValue: number, hidden?: boolean) {\n        super(defaultValue);\n        this.hidden = hidden || false;\n    }\n}\n\nconst statistics = {\n    'Time Played': new Statistic(0),\n    'Gold Generated': new Statistic(0),\n    'Mana Generated': new Statistic(0),\n    'Hits': new Statistic(0),\n    'Critical Hits': new Statistic(0),\n    'Total Damage': new Statistic(0),\n    'Total Physical Damage': new Statistic(0),\n    'Prestige Count': new Statistic(0),\n} as const;\n\nexport default statistics;\n\nlet updateId = 0;\n\nvisibilityObserver(document.querySelector('.p-game .p-statistics')!, handleUpdateLoop);\n\nfunction handleUpdateLoop(visible: boolean) {\n    if (visible) {\n        Object.entries(statistics).forEach(([key, value]) => updateGameStatistics(key, value));\n        updateId = gameLoop.subscribe(() =>\n            Object.entries(statistics).forEach(([key, value]) =>\n                updateGameStatistics(key, value)),\n            { intervalMilliseconds: 1000 });\n    } else {\n        gameLoop.unsubscribe(updateId);\n    }\n}\n\nexport function createStatisticsElements() {\n    const elements: HTMLLIElement[] = [];\n\n    const createField = (key: string) => {\n        const element = document.createElement('li');\n        element.classList.add('g-field', 'hidden');\n        const label = document.createElement('div');\n        element.appendChild(label);\n        const value = document.createElement('var');\n        element.appendChild(value);\n        label.textContent = key;\n        value.setAttribute('data-stat', key);\n        value.setAttribute('data-format-type', getFormatType(key as keyof typeof statistics));\n        return element;\n    }\n    for (const key of Object.keys(statistics)) {\n        const element = createField(key as string);\n        elements.push(element);\n    }\n    document.querySelector('.p-statistics ul')!.replaceChildren(...elements);\n}\n\nfunction getFormatType(key: keyof typeof statistics) {\n    switch (key) {\n        case 'Time Played': return 'time';\n    }\n    return '';\n}\n\nfunction updateGameStatistics(key: string, value: Value) {\n    const element = document.querySelector(`.p-statistics [data-stat=\"${key}\"]`);\n    if (!element) {\n        return;\n    }\n    const valueZero = value.get() === 0;\n    element.parentElement?.classList.toggle('hidden', valueZero);\n    if (valueZero) {\n        return;\n    }\n    const type = element.getAttribute('data-format-type');\n    switch (type) {\n        case 'time':\n            const date = new Date(0);\n            date.setSeconds(value.get());\n            const str = date.toISOString().substring(11, 19);\n            element.textContent = str;\n            break;\n        default:\n            element.textContent = value.get().toFixed(0);\n    }\n}\n\nexport function saveStatistics(saveObj: Save) {\n    saveObj.statistics = Object.entries(statistics).map(([key, value]) => {\n        return {\n            name: key,\n            value: value.get()\n        }\n    });\n}\n\nexport function loadStatistics(saveObj: Save) {\n    saveObj.statistics?.forEach(x => {\n        statistics[x.name as keyof typeof statistics]?.set(x.value);\n    });\n}", "import type { Player } from \"@src/types/gconfig\";\nimport Value from '@utils/Value';\nimport { ModDB, Modifier } from \"./mods\";\nimport { calcPlayerStats } from './calc/calcMod';\nimport { calcAttack } from \"./calc/calcDamage\";\nimport { gameLoop } from \"./game\";\nimport enemy, { enemies } from \"./enemy\";\nimport statistics from \"./statistics\";\nimport type { Save } from \"./saveGame\";\nimport { queryHTML } from \"@src/utils/helpers\";\n\nconst playerStatsContainer = document.querySelector<HTMLElement>('.p-game > .s-stats')!;\nconst manaBar = document.querySelector<HTMLElement>('.p-combat [data-mana-bar]')!;\nlet statsUpdateId: number;\n\nexport const modDB = new ModDB();\nmodDB.onChange.listen(updateStats);\n\nenemy.onDeath.listen(() => {\n    if (playerStats.level.get() < enemies.length - 1) {\n        playerStats.level.add(1);\n    }\n});\n\nexport const playerStats = Object.freeze({\n    level: new Value(1),\n    gold: new Value(0),\n    goldPerSecond: new Value(0),\n    attackSpeed: new Value(0),\n    attackManaCost: new Value(0),\n    maxMana: new Value(0),\n    curMana: new Value(0),\n    manaRegen: new Value(0),\n    skillDurationMultiplier: new Value(1)\n});\n\nexport function init(playerData?: Player) {\n    modDB.clear();\n    Object.values(playerStats).forEach(x => x.reset());\n\n    playerStats.level.addListener('change', x => queryHTML('[data-stat=\"level\"]', playerStatsContainer).textContent = x.toFixed());\n    playerStats.gold.addListener('change', x => queryHTML('[data-stat=\"gold\"]', playerStatsContainer).textContent = x.toFixed());\n    playerStats.level.set(1); //trigger event to update the ui\n    playerStats.gold.set(0);\n\n\n    playerStats.curMana.addListener('change', curMana => {\n        const maxMana = playerStats.maxMana.get();\n        if (curMana > maxMana) {\n            playerStats.curMana.set(maxMana);\n        }\n        updatemanaBar();\n    });\n\n    if (playerData) {\n        playerData.modList.forEach(x => {\n            modDB.add(new Modifier(x).stats, 'Player');\n        });\n    }\n\n    gameLoop.subscribe(() => {\n        const amount = playerStats.goldPerSecond.get();\n        playerStats.gold.add(amount);\n        statistics[\"Gold Generated\"].add(amount);\n    }, { intervalMilliseconds: 1000 });\n\n    gameLoop.subscribe((dt) => {\n        const manaRegen = playerStats.manaRegen.get() * dt;\n        playerStats.curMana.add(manaRegen);\n        statistics[\"Mana Generated\"].add(manaRegen);\n    });\n\n    startAutoAttack();\n}\n\nexport async function setup() {\n\n    await updateStats();\n    playerStats.curMana.set(playerStats.maxMana.get());\n}\n\nasync function updateStats() {\n    return new Promise((resolve) => {\n        clearTimeout(statsUpdateId);\n        statsUpdateId = window.setTimeout(async () => {\n            const statsResult = calcPlayerStats(modDB.modList);\n            playerStats.attackSpeed.set(statsResult.attackSpeed);\n            playerStats.goldPerSecond.set(statsResult.goldPerSecond);\n            playerStats.maxMana.set(statsResult.maxMana);\n            playerStats.manaRegen.set(statsResult.manaRegen);\n            playerStats.attackManaCost.set(statsResult.attackManaCost);\n            playerStats.skillDurationMultiplier.set(statsResult.skillDurationMultiplier);\n            playerStatsContainer.querySelectorAll('[data-stat]').forEach(x => {\n                const attr = x.getAttribute('data-stat') as keyof typeof statsResult;\n                const stat = statsResult[attr] as number;\n                if (typeof stat === 'number') {\n                    const numDecimals = Number(x.getAttribute('data-digits') || 0);\n                    x.textContent = stat.toFixed(numDecimals);\n                }\n            });\n            resolve(null);\n        }, 1);\n\n    });\n}\n\nfunction updatemanaBar() {\n    const pct = playerStats.curMana.get() / playerStats.maxMana.get() * 100;\n    manaBar.style.width = pct + '%';\n}\n\nfunction startAutoAttack() {\n    let deltaTotal = 0;\n    gameLoop.subscribe(dt => {\n        const attackSpeed = 1 / playerStats.attackSpeed.get();\n        deltaTotal += dt;\n        if (deltaTotal >= attackSpeed) {\n            const curMana = playerStats.curMana.get();\n            const manaCost = playerStats.attackManaCost.get();\n            if (curMana > manaCost) {\n                playerStats.curMana.subtract(manaCost);\n                performAttack();\n                deltaTotal = 0;\n            }\n        }\n    });\n}\n\nfunction performAttack() {\n    const result = calcAttack(modDB.modList);\n    if (!result) {\n        return;\n    }\n\n    statistics.Hits.add(1);\n    statistics[\"Total Damage\"].add(result.totalDamage);\n    statistics[\"Total Physical Damage\"].add(result.totalPhysicalDamage);\n    if (result.crit) {\n        statistics[\"Critical Hits\"].add(1);\n    }\n\n    enemy.dealDamage(result.totalDamage);\n}\n\nexport function savePlayer(saveObj: Save) {\n    saveObj.player = {\n        level: playerStats.level.get(),\n        gold: playerStats.gold.get(),\n        curMana: playerStats.curMana.get()\n    };\n}\n\nexport async function loadPlayer(saveObj: Save) {\n    const playerSave = saveObj.player;\n    if (!playerSave) {\n        return;\n    }\n    playerStats.level.set(playerSave.level || 1);\n    playerStats.gold.set(playerSave.gold || 0);\n    playerStats.curMana.set(playerSave.curMana || 0);\n\n    await updateStats();\n}", "import { queryHTML } from \"@src/utils/helpers\";\nimport { AttackSkill, BuffSkill, Skill, } from \"./skills\";\nimport type { SkillSlot } from \"./skillSlots\";\n\n\ninterface ModalData {\n    skills: Skill[];\n    skillSlot: SkillSlot<Skill>;\n    canRemove: boolean;\n}\n\nexport class Modal {\n    private readonly modalElement = queryHTML('.p-game .p-combat [data-skill-modal]');\n    private readonly skillListContainer = queryHTML('[data-skill-list]', this.modalElement);\n    private readonly skillInfoContainer = queryHTML('[data-skill-info]', this.modalElement);\n    private readonly applyButton = queryHTML('[data-value=\"apply\"]', this.modalElement);\n    private readonly removeButton = queryHTML('[data-value=\"remove\"]', this.modalElement);\n    private readonly cancelButton = queryHTML('[data-value=\"cancel\"]', this.modalElement);\n    private skillSlot: SkillSlot<Skill> | undefined;\n    private selectedSkill: Skill | undefined;\n    constructor() {\n        this.applyButton.addEventListener('click', () => this.apply());\n        this.removeButton.addEventListener('click', () => this.remove());\n        this.cancelButton.addEventListener('click', () => this.cancel());\n    }\n\n    open(data: ModalData){\n        this.skillSlot = data.skillSlot;\n        this.removeButton.classList.toggle('hidden', !data.canRemove);\n        this.removeButton.toggleAttribute('disabled', this.skillSlot.skill === undefined);\n        this.populateSkillList(data.skills);\n        this.modalElement.classList.remove('hidden');\n    }\n\n    private populateSkillList(skills: Skill[]) {\n        const skillSlotNames = Array.from(this.skillSlot?.element.parentElement?.children || []).map(x => x.getAttribute('data-skill-name'));\n        const elements = [] as HTMLLIElement[];\n        for (const skill of skills) {\n            const element = document.createElement('li');\n            element.textContent = skill.name;\n            element.classList.add('g-list-item');\n            element.setAttribute('data-skill-name', skill.name);\n            const isUsed = skillSlotNames.some(x => x === skill.name);\n            element.toggleAttribute('disabled', isUsed);\n            element.addEventListener('click', () => {\n                this.showInfo(skill as AttackSkill | BuffSkill);\n                elements.forEach(x => x.classList.toggle('selected', x === element));\n                this.applyButton.toggleAttribute('disabled', skill === this.skillSlot?.skill);\n                let selectedSkill = skill;\n                this.selectedSkill = selectedSkill;\n            });\n            elements.push(element);\n        }\n        this.skillListContainer.replaceChildren(...elements);\n        if(this.skillSlot?.skill){\n            const element = this.skillListContainer.querySelector<HTMLElement>(`[data-skill-name=\"${this.skillSlot?.skill?.name}\"]`);\n            if(element)\n            element.click();\n        } else{\n            elements[0]?.click();\n        }\n    }\n    private showInfo(skill: AttackSkill | BuffSkill) {\n        queryHTML('[data-title]').textContent = skill.name;\n        queryHTML('[data-stat=\"manaCost\"]', this.skillInfoContainer).textContent = skill.manaCost.toFixed();\n        \n        const attackSpeedElement = queryHTML('[data-stat=\"attackSpeed\"]', this.skillInfoContainer);\n        const baseDamageMultiplierElement = queryHTML('[data-stat=\"baseDamageMultiplier\"]', this.skillInfoContainer);\n        const baseDurationElement = queryHTML('[data-stat=\"baseDuration\"]', this.skillInfoContainer);\n\n        [attackSpeedElement, \n            baseDamageMultiplierElement, \n            baseDurationElement].forEach(x => x.parentElement?.classList.add('hidden'));\n        \n        if ((skill instanceof AttackSkill)) {\n            attackSpeedElement.parentElement?.classList.remove('hidden');\n            attackSpeedElement.textContent = skill.attackSpeed.toFixed(2);\n            baseDamageMultiplierElement.parentElement?.classList.remove('hidden');\n            baseDamageMultiplierElement.textContent = skill.baseDamageMultiplier.toFixed(0) + '%';\n        } else if (skill instanceof BuffSkill) {\n            baseDurationElement.parentElement?.classList.remove('hidden');\n            baseDurationElement.textContent = `${skill.baseDuration.toFixed()}s`;\n        }\n\n        const modElements: HTMLElement[] = [];\n        for (const mod of skill.mods) {\n            const modElement = document.createElement('div');\n            modElement.classList.add('g-mod-desc');\n            modElement.textContent = mod.desc;\n            modElements.push(modElement);\n        }\n        queryHTML('[data-mod-list]', this.skillInfoContainer).replaceChildren(...modElements);\n    }\n    private apply() {\n        if(!this.selectedSkill || !this.skillSlot){\n            return;\n        }\n        this.skillSlot.set(this.selectedSkill);\n        this.close();\n    }\n    private remove() {\n        if(!this.skillSlot){\n            return;\n        }\n        this.skillSlot.set(undefined);\n        this.close();\n    }\n    private cancel() {\n        this.close();\n    }\n    private close(){\n        this.modalElement.classList.add('hidden');\n    }\n}\n", "import { queryHTML } from \"@src/utils/helpers\";\nimport { gameLoop } from \"../game\";\nimport { playerStats, modDB } from \"../player\";\nimport { Modal } from \"./skillModal\";\nimport type { AttackSkill, BuffSkill, Skill } from \"./skills\";\n\nconst modal = new Modal();\n\nexport abstract class SkillSlot<T extends Skill> {\n    public readonly element: HTMLElement;\n    protected _skill?: T;\n    constructor() {\n        this.element = this.createElement();\n    }\n    get skill() { return this._skill; }\n    set(skill: T | undefined) {\n        this._skill = skill;\n        const name = skill?.name || '[Empty]';\n        this.element.setAttribute('data-skill-name', name);\n        queryHTML('[data-label]', this.element).textContent = name;\n    }\n    protected abstract createElement(): HTMLElement;\n}\n\nexport class AttackSkillSlot extends SkillSlot<AttackSkill> {\n    private readonly skillSlotContainer = queryHTML('.p-game .s-player .s-skills [data-attack-skill]');\n    readonly skills: AttackSkill[];\n    constructor(attackSkills: AttackSkill[]) {\n        super();\n        this.skillSlotContainer.appendChild(this.element);\n        this.skills = attackSkills;\n    }\n\n    set(skill: AttackSkill) {\n        super.set(skill);\n        this._skill?.enable();\n    }\n\n    edit() {\n        modal.open({ canRemove: false, skills: this.skills, skillSlot: this })\n    }\n\n    protected createElement() {\n        const element = document.createElement('div');\n        element.classList.add('g-field');\n        element.setAttribute('data-skill-slot', 'attack-skill');\n        element.insertAdjacentHTML('beforeend', `<div data-label></div>`);\n        element.insertAdjacentHTML('beforeend', `<button class=\"g-button\" data-edit>Edit</button>`);\n        element.querySelector('button[data-edit]')!.addEventListener('click', () => this.edit());\n        return element;\n    }\n}\n\nexport class BuffSkillSlot extends SkillSlot<BuffSkill> {\n    private readonly buffSkillList = queryHTML<HTMLUListElement>('.p-game .s-player .s-skills ul[data-buff-skill-list]');\n    private readonly progressBar: HTMLElement;\n    readonly skills: BuffSkill[];\n    private running: boolean = false;\n\n    constructor(skills: BuffSkill[]) {\n        super();\n        this.buffSkillList.appendChild(this.element);\n        this.progressBar = queryHTML('[data-progress-bar]', this.element);\n        this.skills = skills;\n        this.set(undefined);\n    }\n\n    private trigger() {\n        if (!this._skill || this.running) {\n            return;\n        }\n        const sufficientMana = playerStats.curMana.get() >= this._skill.manaCost;\n        if (!sufficientMana) {\n            return;\n        }\n        playerStats.curMana.subtract(this._skill.manaCost);\n        this.start();\n    }\n\n    private start() {\n        if (!this._skill) {\n            return;\n        }\n        const calcDuration = () => this._skill?.baseDuration || 0 * playerStats.skillDurationMultiplier.get();\n        let time = calcDuration();\n        let pct = 100;\n        let duration = time;\n        let loopId = -1;\n        const updateTime = () => {\n            duration = calcDuration();\n            time = duration * (pct / 100);\n        };\n        playerStats.skillDurationMultiplier.addListener('change', updateTime);\n\n        modDB.add(this._skill.mods.flatMap(x => x.stats), this._skill.sourceName);\n\n        const startLoops = () => {\n            loopId = gameLoop.subscribe(dt => {\n                if (time <= 0) {\n                    gameLoop.unsubscribe(loopId);\n                    stop();\n                    return;\n                }\n                time -= dt;\n                pct = Math.max(0, time / duration * 100);\n                this.progressBar.style.width = `${pct}%`;\n            });\n        }\n\n        const stop = () => {\n            playerStats.skillDurationMultiplier.removeListener('change', updateTime)\n            if (this._skill) {\n                modDB.removeBySource(this._skill.sourceName);\n            }\n            this.running = false;\n            this.progressBar.style.width = `0%`;\n        }\n        startLoops();\n        this.running = true;\n    }\n\n    private edit() {\n        modal.open({ canRemove: true, skills: this.skills, skillSlot: this })\n    }\n\n    protected createElement() {\n        const element = document.createElement('li');\n        element.classList.add('g-field');\n        element.setAttribute('data-skill-slot', 'buff-skill');\n\n        element.insertAdjacentHTML('beforeend', `\n        <div class=\"wrapper\">\n            <div data-progress-bar></div>\n            <div class=\"g-button\" data-label></div>\n        </div>`);\n        element.insertAdjacentHTML('beforeend', `<button class=\"g-button\" data-edit>Edit</button>`);\n        queryHTML('[data-edit]', element).addEventListener('click', () => this.edit());\n        queryHTML('[data-label]', element).addEventListener('click', () => this.trigger());\n        return element;\n    }\n}\n", "import type { Skills } from \"@src/types/gconfig\";\nimport { Modifier, StatModifier } from \"../mods\";\nimport { modDB, playerStats } from \"../player\";\nimport type { Save } from \"../saveGame\";\nimport { AttackSkillSlot, BuffSkillSlot } from \"./skillSlots\";\n\nlet attackSkills: AttackSkill[];\nlet buffSkills: BuffSkill[];\nlet attackSkillSlot: AttackSkillSlot;\nlet buffSkillSlots: BuffSkillSlot[];\n\nconst attackSkillContainer = document.querySelector<HTMLElement>('.p-game .s-player .s-skills [data-attack-skill]')!;\nconst buffSkillList = document.querySelector<HTMLUListElement>('.p-game .s-player .s-skills ul[data-buff-skill-list]')!;\n\n\nexport function init(data: Skills) {\n\n    attackSkills = [];\n    buffSkills = [];\n    buffSkillSlots = [];\n    attackSkillContainer.replaceChildren();\n    buffSkillList.replaceChildren();\n\n    data.attackSkills.skillList.sort((a, b) => a.levelReq - b.levelReq);\n    if (data.attackSkills.skillList[0].levelReq > 1) {\n        throw Error('There must be an attack skill with a level requirement of 1');\n    }\n\n    attackSkills = data.attackSkills.skillList.map(x => new AttackSkill(x));\n    attackSkillSlot = new AttackSkillSlot(attackSkills);\n    attackSkillSlot.set(attackSkills[0]);\n\n\n    if (data.buffSkills) {\n        buffSkills = data.buffSkills.skillList.map(x => new BuffSkill(x));\n        for (const skillSlot of data.buffSkills.skillSlots) {\n            if (skillSlot.levelReq <= 1) {\n                buffSkillSlots.push(new BuffSkillSlot(buffSkills));\n                continue;\n            }\n            const listener = (level: number) => {\n                if (level < skillSlot.levelReq) {\n                    return;\n                }\n                buffSkillSlots.push(new BuffSkillSlot(buffSkills));\n                playerStats.level.removeListener('change', listener);\n            };\n            playerStats.level.addListener('change', listener);\n        }\n    }\n}\n\nexport function saveSkills(saveObj: Save) {\n    saveObj.skills = {\n        attackSkillName: attackSkillSlot.skill?.name || 'invalid name',\n        buffSkillNames: buffSkillSlots.map(x => x.skill?.name || '').filter(x => x?.length > 0)\n    }\n}\n\nexport function loadSkills(saveObj: Save) {\n    const attackSkill = attackSkills.find(x => x.name === saveObj.skills?.attackSkillName);\n    attackSkillSlot.set(attackSkill || attackSkills[0]);\n    buffSkillSlots.forEach((slot, index) => slot?.set(buffSkills.find(skill => skill.name === saveObj.skills?.buffSkillNames?.[index])));\n}\n\ninterface SkillParams {\n    readonly name: string;\n    readonly levelReq: number;\n    readonly manaCost: number;\n    readonly mods?: string[];\n}\ninterface AttackSkillParams extends SkillParams {\n    readonly attackSpeed: number;\n    readonly baseDamageMultiplier: number;\n}\ninterface BuffSkillParams extends SkillParams {\n    readonly baseDuration: number;\n}\n\nexport class Skill {\n    public readonly name: string;\n    public readonly levelReq: number;\n    public readonly manaCost: number;\n    public readonly mods: Modifier[];\n    constructor(args: SkillParams) {\n        this.name = args.name;\n        this.levelReq = args.levelReq;\n        this.manaCost = args.manaCost;\n        this.mods = args.mods?.map(x => new Modifier(x)) || [];\n    }\n    get sourceName() { return `Skill/${this.name}`; }\n}\n\nexport class AttackSkill extends Skill {\n    static active: AttackSkill;\n    public readonly attackSpeed: number;\n    public readonly baseDamageMultiplier: number;\n    constructor(args: AttackSkillParams) {\n        super(args);\n        this.attackSpeed = args.attackSpeed;\n        this.baseDamageMultiplier = args.baseDamageMultiplier;\n    }\n\n    enable() {\n        modDB.removeBySource(AttackSkill.active?.sourceName);\n        AttackSkill.active = this;\n\n        modDB.add([new StatModifier({ name: 'BaseDamageMultiplier', valueType: 'Base', value: this.baseDamageMultiplier })], this.sourceName);\n        modDB.add([new StatModifier({ name: 'AttackSpeed', valueType: 'Base', value: this.attackSpeed })], this.sourceName);\n        modDB.add([new StatModifier({ name: 'AttackManaCost', valueType: 'Base', value: this.manaCost })], this.sourceName);\n\n        this.mods.forEach(x => modDB.add(x.stats, this.sourceName));\n    }\n}\n\nexport class BuffSkill extends Skill {\n    public readonly baseDuration: number;\n    constructor(args: BuffSkillParams) {\n        super(args);\n        this.baseDuration = args.baseDuration;\n    }\n}\n", "\ntype Callback = (dt: number) => void;\n\ninterface Instance {\n    time: number;\n    id: number;\n    callback: Callback;\n    options?: Options;\n}\ninterface AnimInstance {\n    id: number;\n    callback: Callback;\n}\ninterface Options {\n    intervalMilliseconds: number;\n}\n\nconst TARGET_FRAME_TIME = 1000 / 25;\nconst DELTA_TIME_SECONDS = TARGET_FRAME_TIME / 1000;\n\nexport default class Loop {\n    public running: boolean = false;\n    \n    private instances = new Map<number, Instance>();\n    private animInstances = new Map<number, AnimInstance>();\n    private loopId = 0;\n    private animLoopId = 0;\n    private counter = 0;\n    private animCounter = 0;\n    constructor() {\n\n    }\n\n    subscribe(callback: Callback, options?: Options) {\n        const id = this.counter++;\n        const instance: Instance = { callback, time: 0, id, options };\n        this.instances.set(id, instance);\n        return id;\n    }\n\n    subscribeAnim(callback: Callback) {\n        const id = this.animCounter++;\n        const instance: AnimInstance = { callback, id };\n        this.animInstances.set(id, instance);\n        return id;\n    }\n\n    unsubscribe(id: number) {\n        this.instances.delete(id);\n    }\n\n    unsubscribeAnim(id: number){\n        this.animInstances.delete(id);\n    }\n\n    reset() {\n        this.instances.clear();\n        this.running = false;\n    }\n\n    start() {\n        if (this.running) {\n            return;\n        }\n        this.running = true;\n        this.beginLoop();\n        this.beginAnimationLoop();\n    }\n\n    stop() {\n        this.running = false;\n        clearTimeout(this.loopId);\n        cancelAnimationFrame(this.animLoopId || 0);\n    }\n\n    private beginLoop() {\n        let remainder = 0;\n        let now = performance.now();\n        const loop = () => {\n            clearTimeout(this.loopId);\n            this.loopId = window.setTimeout(() => {\n                let diff = performance.now() - now + remainder;\n                now = performance.now();\n                while (diff >= TARGET_FRAME_TIME) {\n                    diff -= TARGET_FRAME_TIME;\n\n                    this.instances.forEach(instance => {\n                        instance.time += TARGET_FRAME_TIME;\n                        let ms = instance.options?.intervalMilliseconds || 0;\n                        if (instance.time > ms) {\n                            instance.callback(DELTA_TIME_SECONDS);\n                            instance.time -= ms || instance.time;\n                        }\n                    });\n                }\n                remainder = diff;\n                loop();\n            }, TARGET_FRAME_TIME);\n        }\n        loop();\n    }\n\n    private beginAnimationLoop() {\n        let now = performance.now();\n        const loop = () => {\n            let diff = performance.now() - now;\n            now = performance.now();\n            const dt = diff / 1000;\n            for (const instance of this.animInstances.values()) {\n                instance.callback(dt);\n            }\n\n            this.animLoopId = requestAnimationFrame(loop);\n        }\n        this.animLoopId = requestAnimationFrame(loop);\n    }\n}", "import type GConfig from \"@src/types/gconfig\";\nimport { highlightHTMLElement, queryHTML } from \"@src/utils/helpers\";\nimport { Modifier } from \"../mods\";\nimport { modDB, playerStats } from \"../player\";\nimport type { Save } from \"../saveGame\";\n\nconst SOURCE_NAME: string = 'Passives';\n\nconst passivesMenuButton = queryHTML('.p-game > menu [data-tab-target=\"passives\"]');\nconst passivesPage = queryHTML('.p-game .p-passives');\nconst passivesList = queryHTML('[data-passives-list]', passivesPage);\nconst curPointsSpan = queryHTML('header [data-cur-points]', passivesPage);\nconst maxPointsSpan = queryHTML('header [data-max-points]', passivesPage);\nconst clearButton = queryHTML<HTMLButtonElement>('header [data-clear]', passivesPage);\n\nclearButton.addEventListener('click', () => clearPassives());\nconst getMaxPoints = () => pointsPerLevel * (playerStats.level.get() - 1);\nconst getCurPoints = () => passives.filter(x => x.assigned).reduce((a, c) => a += c.points, 0);\n\nlet passives: Passive[];\nlet pointsPerLevel: number;\nexport function init(data: GConfig['passives']) {\n    if(!data){\n        return;\n    }\n    passives = [];\n    pointsPerLevel = 1;\n\n    for (const passiveData of data.passiveList) {\n        const passive = new Passive(passiveData);\n        passives.push(passive);\n    }\n\n    passivesList.replaceChildren(...passives.map(x => x.element));\n    updateList();\n\n    if(data.levelReq > 1){\n        const listener = (level: number) => {\n            if(level >= data.levelReq){\n                passivesMenuButton.classList.remove('hidden');\n                playerStats.level.removeListener('change', listener);\n            }\n        };\n        playerStats.level.addListener('change', listener);\n    }\n\n    playerStats.level.addListener('change', level => {\n        passives.forEach(x => x.tryUnlock());\n        const pointsGained = Math.floor(getMaxPoints() - (pointsPerLevel * level - 2)) > 0;\n        if (pointsGained) {\n            highlightHTMLElement(passivesMenuButton, 'click');\n        }\n        updateList();\n    });\n\n}\n\nfunction clearPassives() {\n    passives.filter(x => x.assigned).forEach(x => x.unassign());\n    updateList();\n}\n\nfunction updateList() {\n    const maxPoints = getMaxPoints();\n    const curPoints = getCurPoints();\n    const diff = maxPoints - curPoints;\n\n    maxPointsSpan.textContent = maxPoints.toFixed();\n    curPointsSpan.textContent = curPoints.toFixed();\n\n    for (const passive of passives) {\n        if (!passive.assigned) {\n            passive.element.toggleAttribute('disabled', passive.points > diff);\n        }\n        passive.element.classList.toggle('selected', passive.assigned);\n    }\n}\n\nexport function savePassives(save: Save) {\n    save.passives = {\n        list: passives.filter(x => x.assigned).map(x => {\n            return {\n                index: passives.indexOf(x),\n                desc: x.mod.desc\n            }\n        })\n    };\n}\n\nexport function loadPassives(save: Save) {\n    const savedPassives = save.passives;\n    if(!savedPassives){\n        passives.forEach(x => x.unassign());\n        return;\n    }\n    const valid = savedPassives.list.every(x => {\n        const passive = passives[x.index];\n        return passive.mod.desc === x.desc;\n    });\n    if (valid) {\n        savedPassives.list.forEach(x => {\n            const passive = passives[x.index];\n            passive.assign();\n        })\n        updateList();\n    }\n}\n\n\nclass Passive {\n    readonly levelReq: number;\n    readonly points: number;\n    readonly mod: Modifier;\n    readonly element: HTMLLIElement;\n    private _assigned: boolean;\n    private locked: boolean;\n    constructor(passiveData: NonNullable<GConfig['passives']>['passiveList'][number]) {\n        this.levelReq = passiveData.levelReq;\n        this.points = passiveData.points;\n        this.mod = new Modifier(passiveData.mod);\n        this.element = this.createElement();\n        this.locked = this.levelReq > 1;\n        this.element.classList.toggle('hidden', this.locked);\n        this._assigned = false;\n    }\n\n    get assigned() { return this._assigned; }\n\n    tryUnlock() {\n        if (!this.locked || playerStats.level.get() < this.levelReq) {\n            return;\n        }\n        this.locked = false;\n        this.element.classList.remove('hidden');\n        highlightHTMLElement(passivesMenuButton, 'click');\n        highlightHTMLElement(this.element, 'mouseover');\n    }\n\n    assign() {\n        this._assigned = true;\n        modDB.add(this.mod.copy().stats, SOURCE_NAME.concat('/', passives.indexOf(this).toFixed()));\n    }\n\n    unassign() {\n        this._assigned = false;\n        modDB.removeBySource(SOURCE_NAME.concat('/', passives.indexOf(this).toFixed()));\n    }\n\n    private toggle() {\n        if (this._assigned) {\n            this.unassign();\n        } else {\n            this.assign();\n        }\n    }\n    private createElement() {\n        const li = document.createElement('li');\n        li.classList.add('g-list-item', 'g-field');\n        li.insertAdjacentHTML('beforeend', `<div>${this.mod.desc}</div>`);\n        li.insertAdjacentHTML('beforeend', `<var>${this.points}</var>`);\n        li.addEventListener('click', () => {\n            this.toggle();\n            updateList();\n        });\n        return li;\n    }\n}", "import type { ModifierTag } from \"../../mods\";\nimport type { ItemModifier, ModTables } from \"./items\";\n\nexport type CraftId = keyof typeof craftTemplates;\nexport interface CraftData {\n    itemModList: ItemModifier[];\n    modTables: ModTables\n}\n\nconst MAX_ITEM_MODS = 6;\nconst REFORGE_HIGHER_CHANCE_SAME_MODS = 20;\nconst REFORGE_LOWER_CHANCE_SAME_MODS = 0.02;\n\nexport const craftTemplates = {\n    reforge: {\n        desc: 'Reforge the item with new random modifiers',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modTables.general),\n        getItemMods: (data: CraftData) => new Crafter().addMultiple(data.modTables.general, generateReforgeModCount(0)).modList\n    },\n    reforgeIncludePhysical: {\n        desc: 'Reforge the item with new random modifiers, including a [physical] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modTables.general).modsContainsTag(data.modTables.general, 'Physical'),\n        getItemMods: (data: CraftData) => new Crafter().addOneByTag(data.modTables.general, 'Physical').addMultiple(data.modTables.general, generateReforgeModCount(1)).modList\n    },\n    reforgeIncludeMana: {\n        desc: 'Reforge the item with new random modifiers, including a [mana] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modTables.general).modsContainsTag(data.modTables.general, 'Mana'),\n        getItemMods: (data: CraftData) => new Crafter().addOneByTag(data.modTables.general, 'Mana').addMultiple(data.modTables.general, generateReforgeModCount(1)).modList\n    },\n    reforgeIncludeCritical: {\n        desc: 'Reforge the item with new random modifiers, including a [critical] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modTables.general).modsContainsTag(data.modTables.general, 'Critical'),\n        getItemMods: (data: CraftData) => new Crafter().addOneByTag(data.modTables.general, 'Critical').addMultiple(data.modTables.general, generateReforgeModCount(1)).modList\n    },\n    reforgeHigherChanceSameMods:{\n        desc: 'Reforge the item with a higher chance of receiving the same modifiers',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsIsNotEmpty(data.modTables.general),\n        getItemMods: (data: CraftData) => {\n            const mods = [...data.modTables.general].map(x => x.copy()).reduce((a, c) => {\n                if (data.itemModList.some(x => x === c)) {\n                    c.weight *= REFORGE_HIGHER_CHANCE_SAME_MODS;\n                }\n                a.push(c);\n                return a;\n            }, [] as ItemModifier[]);\n            return new Crafter().addMultiple(mods, generateReforgeModCount(0)).modList;\n        }\n    },\n    reforgeLowerChanceSameMods: {\n        desc: 'Reforge the item with a lower chance of receiving the same modifiers',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsIsNotEmpty(data.modTables.general),\n        getItemMods: (data: CraftData) => {\n            const mods = [...data.modTables.general].map(x => x.copy()).reduce((a, c) => {\n                if (data.itemModList.some(x => x === c)) {\n                    c.weight *= REFORGE_LOWER_CHANCE_SAME_MODS;\n                }\n                a.push(c);\n                return a;\n            }, [] as ItemModifier[]);\n            return new Crafter().addMultiple(mods, generateReforgeModCount(0)).modList;\n        }\n    },\n    addRandom: {\n        desc: 'Add a random modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasSpaceForMods(data.itemModList).modsIsNotEmpty(data.modTables.general),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).addOne(data.modTables.general).modList\n    },\n    addPhysical: {\n        desc: 'Add a [physical] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modTables.general).itemHasSpaceForMods(data.itemModList).itemCanCraftModWithTag(data.itemModList, data.modTables.general, 'Physical'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).addOneByTag(data.modTables.general, 'Physical').modList\n    },\n    addMana: {\n        desc: 'Add a [mana] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modTables.general).itemHasSpaceForMods(data.itemModList).itemCanCraftModWithTag(data.itemModList, data.modTables.general, 'Mana'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).addOneByTag(data.modTables.general, 'Mana').modList\n    },\n    addCritical: {\n        desc: 'Add a [critical] modifier',\n        validate: (data: CraftData) => new CraftValidator().modsIsNotEmpty(data.modTables.general).itemHasSpaceForMods(data.itemModList).itemCanCraftModWithTag(data.itemModList, data.modTables.general, 'Critical'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).addOneByTag(data.modTables.general, 'Critical').modList\n    },\n    removeRandom: {\n        desc: 'Remove a random modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().modList\n    },\n    removeRandomAddRandom: {\n        desc: 'Remove a random modifier and add a new random modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsIsNotEmpty(data.modTables.general),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().addOne(data.modTables.general).modList\n    },\n    removeRandomAddPhysical: {\n        desc: 'Remove a random modifier and add a new [physical] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.modTables.general, 'Physical').itemCanCraftModWithTag(data.itemModList, data.modTables.general, 'Physical'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().addOneByTag(data.modTables.general, 'Physical').modList\n    },\n    removeRandomAddMana: {\n        desc: 'Remove a random modifier and add a new [mana] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.modTables.general, 'Mana').itemCanCraftModWithTag(data.itemModList, data.modTables.general, 'Mana'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().addOneByTag(data.modTables.general, 'Mana').modList\n    },\n    removeRandomAddCritical: {\n        desc: 'Remove a random modifier and add a new [critical] modifier',\n        validate: (data: CraftData) => new CraftValidator().itemHasModifiers(data.itemModList).modsContainsTag(data.modTables.general, 'Critical').itemCanCraftModWithTag(data.itemModList, data.modTables.general, 'Critical'),\n        getItemMods: (data: CraftData) => new Crafter(data.itemModList).removeRandom().addOneByTag(data.modTables.general, 'Critical').modList\n    }\n}\n\n\nclass CraftValidator {\n    errors: string[] = [];\n    constructor() {\n        this.errors = [];\n    }\n\n    itemHasSpaceForMods(itemModList: ItemModifier[]) {\n        if (itemModList.length >= MAX_ITEM_MODS) {\n            this.errors.push('Item cannot have any more modifiers');\n        }\n        return this;\n    }\n\n    itemHasModifiers(itemModList: ItemModifier[]) {\n        if (itemModList.length === 0) {\n            this.errors.push('Item has no modifiers');\n        }\n        return this;\n    }\n\n    itemCanCraftModWithTag(itemModList: ItemModifier[], itemMods: ItemModifier[], tag: ModifierTag) {\n        const filteredMods = itemMods.filter(x => x.tags?.includes(tag) && !itemModList.some(y => y.compare(x)));\n        if (filteredMods.length === 0) {\n            this.errors.push(`There are no ${tag} modifiers available`);\n        }\n        return this;\n    }\n\n    modsIsNotEmpty(itemModList: ItemModifier[]) {\n        if (itemModList.length === 0) {\n            this.errors.push('No modifiers available');\n        }\n        return this;\n    }\n\n    modsContainsTag(itemModList: ItemModifier[], tag: ModifierTag) {\n        if (!itemModList.some(x => x.tags?.includes(tag))) {\n            this.errors.push(`No modifier was available with the tag: ${tag}`);\n        }\n        return this;\n    }\n}\n\nclass Crafter {\n    modList: ItemModifier[];\n    constructor(itemMods: ItemModifier[] = []) {\n        this.modList = [...itemMods];\n    }\n\n    addOne(itemModList: ItemModifier[]) {\n        this.modList.push(...this.generateMods(itemModList, this.modList, 1))\n        return this;\n    }\n    addOneByTag(itemModList: ItemModifier[], tag: ModifierTag) {\n        itemModList = itemModList.filter(x => x.tags?.includes(tag));\n        this.modList.push(...this.generateMods(itemModList, this.modList, 1));\n        return this;\n    }\n\n    addMultiple(itemModList: ItemModifier[], count: number) {\n        this.modList.push(...this.generateMods(itemModList, this.modList, count));\n        return this;\n    }\n\n    removeRandom() {\n        const randomIndex = this.randomRangeInt(0, this.modList.length);\n        this.modList.splice(randomIndex, 1);\n        return this;\n    }\n\n    private generateMods(itemModList: ItemModifier[], filterMods: ItemModifier[] = [], count: number) {\n        const newItemMods: ItemModifier[] = [];\n        for (let i = 0; i < count; i++) {\n            const tempArr = [...newItemMods, ...filterMods];\n            itemModList = itemModList.filter(x => !tempArr.some(y => x.templateDesc === y.templateDesc));\n            let weightSum = itemModList.reduce((a, c) => a += c.weight, 0);\n            const random = Math.random() * weightSum;\n            for (const mod of itemModList) {\n                weightSum -= mod.weight;\n                if (weightSum <= random) {\n                    const copy = mod.copy();\n                    copy.stats.forEach(x => x.randomizeValue());\n                    newItemMods.push(copy);\n                    break;\n                }\n            }\n        }\n        return newItemMods;\n    }\n\n    private randomRangeInt(min: number, max: number) {\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n}\n\nconst generateReforgeModCount = (offset = 0) => {\n    const REFORGE_WEIGHTS = [0, 0, 40, 50, 30, 20].slice(offset, 6);\n    let sum = REFORGE_WEIGHTS.reduce((a, c) => a + c);\n    const random = Math.random() * sum;\n    for (let i = 0; i < REFORGE_WEIGHTS.length; i++) {\n        sum -= REFORGE_WEIGHTS[i];\n        if (sum <= random) {\n            return i + 1;\n        }\n    }\n    throw Error();\n}", "import type { GConfig, ItemMod, Items } from '@src/types/gconfig';\nimport { Modifier } from '@game/mods';\nimport { craftTemplates, CraftId, CraftData } from './crafting';\nimport { playerStats, modDB } from '@game/player';\nimport { visibilityObserver } from '@utils/Observers';\nimport type { Save } from '@src/game/saveGame';\nimport { highlightHTMLElement, queryHTML } from '@src/utils/helpers';\n\ntype ItemList = Items['itemList'];\ntype CraftList = Items['craftList'];\n\nexport type ModTables = { [K in keyof Items['modTables']]: ItemModifier[] }\n\n//Elements\nconst itemsPage = queryHTML('.p-game .p-items');\nconst itemListContainer = queryHTML('menu[data-item-list]', itemsPage);\nconst modListContainer = queryHTML('ul[data-mod-list]', itemsPage);\n//Presets\nconst presetsContainer = queryHTML('.s-preset-container', itemsPage);\nconst presetNewElement = queryHTML('[data-new]', presetsContainer);\nconst presetEditElement = queryHTML('[data-edit]', presetsContainer);\nconst presetListContainer = queryHTML('[data-preset-list]', presetsContainer);\nconst presetModal = queryHTML('[data-craft-preset-modal]', itemsPage);\nconst presetsModalCraftList = queryHTML('[data-craft-list]', presetModal);\n// const presetModalRemoveButton = presetModal2.querySelector('button[data-value=\"remove\"]');\n//Crafting\nconst craftContainer = queryHTML('.s-craft-container', itemsPage);\nconst craftButton = queryHTML('button[data-craft-button]', craftContainer);\n\n//events\nconst itemsMenuButton = queryHTML('.p-game > menu [data-tab-target=\"items\"]');\npresetNewElement.addEventListener('click', () => { const preset = createNewPreset('New Preset', []); preset.edit(); });\npresetEditElement.addEventListener('click', () => Preset.active?.edit());\n\nqueryHTML('footer [data-value=\"apply\"]', presetModal).addEventListener('click', () => Preset.active?.apply());\nqueryHTML('footer [data-value=\"delete\"]', presetModal).addEventListener('click', () => Preset.active?.delete());\n\nqueryHTML('footer [data-value=\"apply\"]', presetModal).addEventListener('click', () => { presetModal.classList.add('hidden'); });\nqueryHTML('footer [data-value=\"delete\"]', presetModal).addEventListener('click', () => { presetModal.classList.add('hidden'); });\nqueryHTML('footer [data-value=\"cancel\"]', presetModal).addEventListener('click', () => { presetModal.classList.add('hidden'); });\n\ncraftButton.addEventListener('click', () => performCraft());\n\nvisibilityObserver(itemsPage, () => { updateCraftList() });\n\nconst getFilteredCraftIds = () => crafts.filter(x => x.levelReq <= playerStats.level.get()).map(x => x.id);\n\nlet generalMods: ItemModifier[];\nlet items: Item[];\nlet crafts: Craft[];\nlet presets: Preset[];\n\n\nexport function init(data: GConfig['items']) {\n\n    generalMods = [];\n    items = [];\n    crafts = [];\n\n    presets?.forEach(x => x.delete());\n    presets = [];\n\n    if (!data) {\n        return;\n    }\n\n    for (const modGroup of data.modTables.general) {\n        for (let i = 0; i < modGroup.length; i++) {\n            const itemMod = modGroup[i];\n            generalMods.push(new ItemModifier(itemMod, modGroup));\n        }\n    }\n\n    createItemList(data.itemList);\n    createCrafts(data.craftList);\n\n    createNewPreset('All', Object.keys(craftTemplates) as CraftId[], true);\n\n    createPresetModalCrafts();\n\n    items[0].element.click();\n\n    playerStats.level.addListener('add', (level: number) => crafts.forEach(craft => craft.tryUnlock(level)));\n    playerStats.gold.addListener('change', () => {\n        updateCraftList();\n        updateCraftButton();\n    });\n\n    if (data.levelReq > 1) {\n        const listener = (level: number) => {\n            if (data.levelReq <= level) {\n                playerStats.level.removeListener('change', listener);\n                itemsMenuButton.classList.remove('hidden');\n                highlightHTMLElement(itemsMenuButton, 'mouseover');\n            }\n        }\n        playerStats.level.addListener('change', listener);\n    } else {\n        itemsMenuButton.classList.remove('hidden');\n    }\n}\n\nfunction createItemList(itemList: ItemList) {\n    for (const itemData of itemList) {\n        const item = new Item(itemData);\n        items.push(item);\n\n        if (item.levelReq <= 1) {\n            item.element.classList.remove('hidden');\n            continue;\n        }\n        const listener = (level: number) => {\n            if (itemData.levelReq <= level) {\n                item.element.classList.remove('hidden');\n                highlightHTMLElement(itemsMenuButton, 'click');\n                highlightHTMLElement(item.element, 'mouseover');\n                playerStats.level.removeListener('change', listener);\n            }\n        }\n        playerStats.level.addListener('change', listener);\n    }\n    itemListContainer.replaceChildren(...items.map(x => x.element));\n}\n\nfunction createCrafts(craftList: CraftList) {\n    for (const craftData of craftList) {\n        const craft = new Craft(craftData);\n        crafts.push(craft);\n        craft.element.addEventListener('click', () => {\n            crafts.map(x => x.element).forEach(element => {\n                element.classList.toggle('selected', element === craft.element);\n            });\n            craft.select();\n            updateCraftButton();\n        });\n    }\n    queryHTML('[data-craft-list]', craftContainer).replaceChildren(...crafts.map(x => x.element));\n    crafts.find(x => !x.locked)?.select();\n}\n\nfunction createNewPreset(name: string, ids: CraftId[], isDefault = false) {\n    const preset = new Preset(name, ids, isDefault);\n    presetListContainer.appendChild(preset.element);\n    preset.select();\n    return preset;\n}\n\nfunction createPresetModalCrafts() {\n    const elements = crafts.map(x => x.element.cloneNode(true) as HTMLElement);\n    elements.forEach(element => {\n        element.addEventListener('click', () => {\n            element.classList.toggle('selected', !element.classList.contains('selected'));\n        });\n    });\n    presetsModalCraftList.replaceChildren(...elements);\n}\n\nfunction updateItemModList() {\n    if (Item.active?.mods) {\n        const elements: HTMLLIElement[] = [];\n        for (const itemMod of Item.active.mods.sort(Modifier.sort)) {\n            const desc = itemMod.desc;\n\n            const element = document.createElement('li');\n            element.classList.add('g-mod-desc');\n            element.textContent = desc;\n            elements.push(element);\n        }\n        modListContainer.replaceChildren(...elements);\n    }\n\n}\n\nfunction updateCraftList() {\n    if (!Preset.active)\n        return;\n\n    const filteredIds = getFilteredCraftIds();\n    const ids = Preset.active.ids.filter(x => filteredIds.includes(x));\n    crafts.forEach(craft => {\n        const canAfford = craft.cost <= playerStats.gold.get();\n        const costElement = queryHTML('[data-cost]', craft.element);\n        costElement?.toggleAttribute('data-insufficient-cost', !canAfford);\n        craft.element.classList.toggle('hidden', craft.locked || !ids.includes(craft.id));\n    });\n    const selectedVisibleElement = craftContainer.querySelector('[data-craft-id].selected:not(.hidden)');\n    if (!selectedVisibleElement) {\n        craftContainer.querySelector<HTMLElement>('[data-craft-id]:not(.hidden)')?.click();\n    }\n}\n\nfunction createCraftData(): CraftData {\n    return {\n        itemModList: Item.active!.mods,\n        modTables: {\n            general: generalMods.filter(x => x.levelReq <= playerStats.level.get())\n        }\n    }\n}\n\nfunction updateCraftButton() {\n    if (!Item.active) {\n        return;\n    }\n\n    let msg = '';\n\n    const template = craftTemplates[Craft.active.id];\n    if (!template) {\n        console.error('invalid craft id');\n        return;\n    }\n    if (playerStats.gold.get() < Craft.active.cost) {\n        msg = 'You cannot afford this craft';\n    }\n    const craftData = createCraftData();\n    const validator = template.validate(craftData);\n    if (validator.errors.length > 0) {\n        msg = validator.errors[0];\n    }\n    queryHTML('[data-craft-message]', craftContainer).textContent = msg;\n    queryHTML('[data-craft-button]', craftContainer).toggleAttribute('disabled', msg.length > 0);\n}\n\nfunction performCraft() {\n    if (!Item.active || !craftTemplates[Craft.active.id]) {\n        return;\n    }\n\n    const template = craftTemplates[Craft.active.id];\n    const craftData = createCraftData();\n    Item.active.mods = template.getItemMods(craftData);\n    playerStats.gold.subtract(Craft.active.cost);\n\n    updateItemModList();\n    updateCraftList();\n}\n\n\nclass Item {\n    static active?: Item;\n    public readonly name: string;\n    public readonly levelReq: number;\n    public readonly element: HTMLElement;\n    private sourceName: string;\n    private _mods: ItemModifier[];\n    constructor({ name, levelReq }: { name: string, levelReq: number }) {\n        this.name = name;\n        this.levelReq = levelReq;\n        this._mods = [] as ItemModifier[];\n        this.element = this.createElement();\n        this.sourceName = `Skills/${name}`;\n    }\n\n    get mods() { return this._mods; }\n    set mods(v: ItemModifier[]) {\n        modDB.removeBySource(this.sourceName);\n        this._mods = v;\n        modDB.add(this.mods.flatMap(x => x.stats), this.sourceName);\n    }\n\n    private createElement() {\n        const element = document.createElement('li');\n        element.classList.add('g-list-item', 'hidden');\n        element.textContent = this.name;\n        element.addEventListener('click', () => {\n            Item.active = this;\n            itemListContainer.querySelectorAll('li').forEach(x => {\n                x.classList.toggle('selected', x === element);\n            });\n            updateItemModList();\n            updateCraftButton();\n        });\n        return element;\n    }\n}\n\nexport class ItemModifier extends Modifier {\n    private readonly itemModData: ItemMod;\n    public readonly levelReq: number;\n    public weight: number;\n    private readonly groupIndex: number;\n    private readonly modGroup: ItemMod[];\n    constructor(itemModData: ItemMod, modGroup: ItemMod[]) {\n        super(itemModData.mod);\n        this.itemModData = itemModData;\n        this.levelReq = itemModData.levelReq;\n        this.weight = itemModData.weight;\n        this.groupIndex = modGroup.findIndex(x => x === itemModData);\n        this.modGroup = modGroup;\n    }\n    get tier() {\n        const count = this.modGroup.filter(x => x.levelReq <= playerStats.level.get()).length - 1;\n        return Math.max(1, count - this.groupIndex);\n    }\n\n    copy(): ItemModifier {\n        return new ItemModifier(this.itemModData, this.modGroup);\n    }\n}\n\nclass Craft {\n    static active: Craft;\n    readonly id: CraftId;\n    readonly levelReq: number;\n    readonly cost: number;\n    readonly element: HTMLElement;\n    private _locked = true;\n    constructor(data: NonNullable<GConfig['items']>['craftList'][number]) {\n        this.id = data.id;\n        this.levelReq = data.levelReq;\n        this.cost = data.cost;\n        this.element = this.createElement();\n        this._locked = this.levelReq > 1;\n    }\n\n    get locked() { return this._locked; }\n\n    tryUnlock(level: number) {\n        if (this.locked && level >= this.levelReq) {\n            highlightHTMLElement(itemsMenuButton, 'click');\n            highlightHTMLElement(Preset.default.element, 'click');\n            highlightHTMLElement(this.element, 'mouseover');\n            updateCraftList();\n            this._locked = false;\n        }\n    }\n\n    select() {\n        Craft.active = this;\n        this.element.click();\n    }\n\n    private createElement() {\n        const element = document.createElement('li');\n        element.classList.add('g-field', 'g-list-item', 'hidden');\n        const desc = craftTemplates[this.id].desc.replace(/\\[\\w+\\]/g, (x) => {\n            return `<span>${x.substring(1, x.length - 1)}</span>`;\n        });\n        element.insertAdjacentHTML('beforeend', `<div>${desc}</div>`);\n        element.insertAdjacentHTML('beforeend', `<i data-cost=\"${this.cost}\">${this.cost}</i>`);\n        element.setAttribute('data-craft-id', this.id);\n        return element;\n    }\n}\n\nclass Preset {\n    static active: Preset | null;\n    static default: Preset;\n    public name: string;\n    public ids: CraftId[];\n    public readonly element: HTMLElement; //preset button\n    constructor(name: string, ids: CraftId[] = [], isDefault = false) {\n        this.name = name;\n        this.ids = [...ids];\n        if (isDefault) {\n            Preset.default = this;\n        }\n        this.element = this.createElement();\n        this.setName(this.name);\n        presets.push(this);\n    }\n\n    get isDefault() { return Preset.default === this; }\n\n    static create() {\n        return new Preset('New Preset', []);\n    }\n\n    select() {\n        this.element.click();\n    }\n\n    setName(name: string) {\n        this.name = name.replace(/[^A-Za-z 0-9]/g, '');\n        this.element.textContent = this.name;\n    }\n\n    edit() {\n        this.openModal();\n    }\n\n    delete() {\n        Preset.active = null;\n        if (this.element.previousElementSibling) {\n            (this.element.previousElementSibling as HTMLElement)?.click();\n        } else {\n            (this.element.nextElementSibling as HTMLElement)?.click();\n        }\n        this.element.remove();\n        presets = presets.filter(x => x !== this);\n        updateCraftList();\n    }\n\n    apply() {\n        const name = queryHTML<HTMLInputElement>('input[data-name]', presetModal).value;\n        this.setName(name);\n        const selectedElements = presetModal.querySelectorAll('[data-craft-list] [data-craft-id].selected');\n        this.ids = Array.from(selectedElements).map(x => x.getAttribute('data-craft-id')) as CraftId[];\n        updateCraftList();\n    }\n\n    private createElement() {\n        const element = document.createElement('li');\n        element.classList.add('g-list-item', 'preset');\n        element.addEventListener('click', () => {\n            Preset.active = this;\n            presetListContainer.querySelectorAll('li').forEach(x => {\n                x.classList.toggle('selected', x === element);\n            });\n            presetEditElement.toggleAttribute('disabled', this.isDefault);\n            updateCraftList();\n        });\n        presetListContainer.appendChild(element);\n        return element;\n    }\n\n    private openModal() {\n        (presetModal.querySelector('input[data-name]') as HTMLInputElement).value = this.name;\n        const filteredIds = getFilteredCraftIds();\n        presetModal.querySelectorAll('[data-craft-list] [data-craft-id]').forEach(element => {\n            const id = element.getAttribute('data-craft-id') as CraftId;\n            const hidden = !filteredIds.includes(id);\n            element.classList.toggle('hidden', hidden);\n            const selected = !hidden && this.ids.includes(id);\n            element.classList.toggle('selected', selected);\n        });\n        presetModal.classList.remove('hidden');\n    }\n}\n\nexport function saveItems(saveObj: Save) {\n    saveObj.items = {\n        items: items.map(item => <NonNullable<Save['items']>['items'][number]>({\n            name: item.name,\n            modList: item.mods.map(mod => ({\n                desc: mod.templateDesc,\n                values: mod.stats.map(stat => stat.value)\n            })),\n        })),\n        craftPresets: presets.filter(x => !x.isDefault).map(x => ({ name: x.name, ids: x.ids }))\n    }\n}\n\nexport function loadItems(saveObj: Save) {\n\n    if (!saveObj.items) {\n        return;\n    }\n    presets.filter(x => !x.isDefault).forEach(x => x.delete());\n\n    for (const itemData of saveObj.items.items) {\n        const item = items.find(x => x.name === itemData.name);\n        if (!item) {\n            console.warn('Could not load Item with name: ', itemData.name);\n            continue;\n        }\n        const mods = [] as ItemModifier[];\n        for (const itemMod of itemData.modList) {\n            const itemModifier = generalMods.find(x => itemMod.desc === x.templateDesc)?.copy();\n            if (!itemModifier) {\n                continue;\n            }\n            const success = itemModifier.setStatValues(itemMod.values);\n            if (!success) {\n                continue;\n            }\n            mods.push(itemModifier);\n        }\n        item.mods = mods;\n    }\n\n    for (const preset of saveObj.items.craftPresets) {\n        new Preset(preset.name, preset.ids);\n    }\n\n    presets[0]?.select();\n    items[0]?.element.click();\n}", "import statistics from \"../statistics\";\nimport { modDB, playerStats } from \"../player\";\nimport type { Mod, GConfig } from \"@src/types/gconfig\";\nimport { gameLoop } from \"../game\";\nimport { Modifier } from \"@game/mods\";\nimport { visibilityObserver } from '@utils/Observers';\nimport { highlightHTMLElement } from \"@utils/helpers\";\n\ntype Validator = [RegExp, () => string, ((cur: number, target: number) => boolean)?];\n\nconst validators: Validator[] = [\n    [/^Reach Level {(\\d+)}$/, () => playerStats.level.get().toFixed()],\n    [/^Prestige {\\d+}?$/, () => statistics[\"Prestige Count\"].get().toFixed()],\n    [/^Deal Damage {(\\d+)}$/, () => statistics[\"Total Damage\"].get().toFixed()],\n    [/^Deal Physical Damage {(\\d+)}$/, () => statistics[\"Total Physical Damage\"].get().toFixed()],\n    [/^Perform Hits {(\\d+)}$/, () => statistics.Hits.get().toFixed()],\n    [/^Perform Critical Hits {(\\d+)}$/, () => statistics[\"Critical Hits\"].get().toFixed()],\n    [/^Generate Gold {(\\d+)}$/, () => statistics[\"Gold Generated\"].get().toFixed()],\n    [/^Regenerate Mana {(\\d+)}$/, () => statistics[\"Mana Generated\"].get().toFixed()],\n];\nconst achievementsMenuButton = document.querySelector<HTMLElement>('.p-game > menu [data-tab-target=\"achievements\"]')!;\n\nconst achievements: Achievement[] = [];\nlet updateId: number = -1;\n\nvisibilityObserver(document.querySelector('.p-game .p-achievements')!, handleUpdateLoop);\n\nexport function init(data: GConfig['achievements']) {\n    achievements.splice(0);\n    for (const item of data.list) {\n        achievements.push(new Achievement(item));\n    }\n    document.querySelector('.p-achievements ul')!.replaceChildren(...achievements.map(x => x.element));\n\n    //validate loop\n    gameLoop.subscribe(() => {\n        validateAchievements();\n    }, { intervalMilliseconds: 1000 });\n\n    if(data.levelReq > 1){\n        const listener = (level: number) => {\n            if (level >= data.levelReq) {\n                playerStats.level.removeListener('change', listener);\n                achievementsMenuButton.classList.remove('hidden');\n                highlightHTMLElement(achievementsMenuButton, 'click');\n            }\n        }\n        playerStats.level.addListener('change', listener);\n    }\n}\n\nfunction validateAchievements(){\n    achievements.forEach(achievement => {\n        const isComplete = achievement.validate();\n        if (isComplete) {\n            achievement.complete();\n        }\n    });\n}\n\nfunction handleUpdateLoop(visible: boolean) {\n    if (visible) {\n        achievements.forEach(x => x.updateDescription());\n        updateId = gameLoop.subscribe(() => achievements.forEach(x => x.updateDescription()),\n            { intervalMilliseconds: 1000 });\n    } else {\n        gameLoop.unsubscribe(updateId);\n    }\n}\n\nclass Achievement {\n    completed: boolean = false;\n    private readonly validator: Validator;\n    private readonly matchIndex: number;\n    private readonly targetValue: number;\n    private readonly description: string;\n    private readonly modList: Mod[];\n    readonly element: HTMLElement;\n    constructor(args: GConfig['achievements']['list'][number]) {\n        this.description = args.description.replace(/[{}]/g, '');\n        this.modList = [...args?.modList || []];\n\n        const validator = validators.find(x => x[0].exec(args.description));\n        if (!validator) {\n            throw Error('no achievement validator found');\n        }\n        this.validator = validator;\n        const match = validator[0].exec(args.description) as RegExpMatchArray;\n        this.targetValue = Number(match[1]);\n        this.matchIndex = args.description.match(/{\\d+}/)?.index as number;\n        this.element = this.createElement();\n    }\n\n    updateDescription() {\n        if (this.completed) {\n            return;\n        }\n        this.element.querySelector('[data-cur-value]')!.textContent = this.validator[1]();\n    }\n\n    validate() {\n        if (this.completed) {\n            return;\n        }\n        const curValue = Number(this.validator[1]());\n        let valid = false;\n        if (this.validator[2]) {\n            valid = this.validator[2](curValue, this.targetValue);\n        } else {\n            valid = curValue >= this.targetValue;\n        }\n        return valid;\n    }\n\n    complete() {\n        this.completed = true;\n        this.applyModifiers();\n        this.removeCurValueFromDesc();\n        this.element.querySelector('var')!.toggleAttribute(`data-valid`, this.completed);\n        highlightHTMLElement(achievementsMenuButton, 'click');\n        highlightHTMLElement(this.element, 'mouseover');\n    }\n\n    private applyModifiers() {\n        const modifiers = this.modList.map(x => new Modifier(x));\n        modDB.add(modifiers.flatMap(x => x.stats), 'Achievement/' + this.description);\n    }\n\n    private removeCurValueFromDesc() {\n        const varElement = this.element.querySelector('var')!;\n        const innerHTML = varElement.innerHTML;\n        const endIndex = innerHTML.indexOf('</span>');\n        varElement.innerHTML = innerHTML.substring(endIndex + 8);\n    }\n\n    private createElement() {\n        const accordion = document.createElement('li');\n        accordion.classList.add('g-accordion');\n        const header = document.createElement('div');\n        accordion.appendChild(header);\n        header.classList.add('header');\n        header.insertAdjacentHTML('beforeend', `<div>${this.description.substring(0, this.matchIndex)}<var><span data-cur-value>${this.validator[1]()}</span>/${this.targetValue.toString()}</var>${this.description.substring(this.matchIndex + this.targetValue.toString().length)}</div>`)\n\n        if (this.modList.length > 0) {\n            const content = document.createElement('div');\n            accordion.appendChild(content);\n            content.classList.add('content');\n            for (const mod of this.modList) {\n                content.insertAdjacentHTML('beforeend', `<div class=\"g-mod-desc\">${mod.replace(/[{}]/g, '')}</div>`);\n            }\n            header.insertAdjacentHTML('beforeend', `<i></i>`);\n            header.addEventListener('click', () => {\n                header.toggleAttribute('data-open');\n            });\n        }\n        return accordion;\n    }\n}", "import { init as initPassives, loadPassives, savePassives } from './passives';\nimport { init as initItems, loadItems, saveItems } from './items/items';\nimport { init as initAchievements } from './achievements';\nimport type GConfig from '@src/types/gconfig';\nimport type { Save } from '../saveGame';\n\n// export type ComponentNames = keyof Pick<GConfig, 'passives' | 'items' | 'achievements'>;\nconst componentNames = ['passives', 'items', 'achievements'] as const;\ntype ComponentName = typeof componentNames[number];\n\nexport function initComponents(config: GConfig) {\n    const components = Object.fromEntries(Object.entries(config).filter(([key]) => config[key as ComponentName] && componentNames.includes(key as ComponentName))) as Pick<GConfig, ComponentName>;\n    for (const key of Object.keys(components) as ComponentName[]) {\n        if (!components[key]) {\n            continue;\n        }\n        switch (key) {\n            case 'passives': initPassives(components.passives); break;\n            case 'items': initItems(components.items); break;\n            case 'achievements': initAchievements(components.achievements); break;\n        }\n    }\n}\n\nexport function saveComponents(saveObj: Save){\n    savePassives(saveObj);\n    saveItems(saveObj);\n}\n\nexport function loadComponents(saveObj: Save){\n    loadPassives(saveObj);\n    loadItems(saveObj);\n}", "import saveManager from '@src/utils/saveManager';\nimport type { CraftId, GConfig } from \"@src/types/gconfig\"\nimport type { ModDescription } from \"./mods\";\nimport { loadPlayer, savePlayer, setup as setupPlayer } from \"./player\";\nimport { loadEnemy, saveEnemy } from './enemy';\nimport { saveComponents, loadComponents } from './components/loader';\nimport { loadSkills, saveSkills } from \"./skills/skills\";\nimport { loadStatistics, saveStatistics } from './statistics';\n\ntype SaveObject = { [K: string]: Save };\n\nexport interface Save {\n    meta: {\n        name: string;\n        description?:string;\n        rawUrl: string;\n        id: string;\n        createdAt: number;\n        lastSavedAt: number;\n    };\n    player?: {\n        level: number;\n        gold: number;\n        curMana: number;\n    },\n    enemy?: {\n        index: number;\n        health: number;\n        dummyDamage: number;\n    },\n    skills?: {\n        attackSkillName: string;\n        buffSkillNames?: string[];\n    },\n    passives?: {\n        list: { index: number; desc: string }[]\n    }\n    items?: {\n        items: {\n            name: string;\n            modList: {\n                values: number[];\n                desc: ModDescription\n            }[];\n        }[],\n        craftPresets: { name: string, ids: CraftId[] }[]\n    };\n    statistics?: { name: string, value: number }[];\n}\n\nasync function loadAsMap() {\n    const blob = (await saveManager.load<SaveObject>('Game'));\n    if (!blob) {\n        return new Map<string, Save>();\n    }\n    return new Map(Object.entries(blob));\n}\n\nexport async function saveGame(meta: Pick<GConfig['meta'], keyof Save['meta']>) {\n    let map = await loadAsMap();\n\n    const saveObj = map.get(meta.id) || {\n        meta: { ...meta }\n    } as Save;\n\n    saveObj.meta.lastSavedAt = Date.now();\n    \n    console.log(meta);\n    [savePlayer, saveEnemy, saveSkills, saveStatistics,\n        saveComponents].forEach(x => x(saveObj));\n\n    map.set(meta.id, saveObj);\n\n    saveManager.save('Game', Object.fromEntries(map));\n\n    return true;\n}\n\nexport async function loadGame(config: GConfig) {\n    const id = config.meta.id;\n    let map = await loadAsMap();\n    const saveObj = map.get(id);\n    if (!saveObj) {\n        console.log('could not load', id);\n        return false;\n    }\n\n    config.meta = { ...config.meta, ...saveObj.meta };\n\n    [loadPlayer, loadEnemy, loadSkills, loadStatistics, loadComponents].forEach(x => x(saveObj));\n\n    setupPlayer();\n    return true;\n}\n\nexport async function loadMostRecentSave() {\n    try {\n        const map = await loadAsMap();\n        return [...map].map(x => x[1]).sort((a,b) => b.meta.lastSavedAt - a.meta.lastSavedAt)[0];\n    } catch (e) {\n        console.error(e);\n    }\n}", "import { registerTabs, tabCallback, queryHTML, isLocalHost } from \"@utils/helpers\";\nimport { init as initPlayer, setup as setupPlayer, playerStats } from './player';\nimport { init as initEnemy } from './enemy';\nimport { init as initSkills } from './skills/skills';\nimport type GConfig from \"@src/types/gconfig\";\nimport Loop from \"@utils/Loop\";\nimport statistics, { createStatisticsElements } from \"./statistics\";\nimport { initComponents } from './components/loader';\nimport { saveGame, loadGame } from \"./saveGame\";\n\n\nconst gamePage = queryHTML('.p-game');\nregisterTabs(queryHTML(':scope > menu', gamePage), queryHTML('.s-middle', gamePage), tabCallback);\n\n\nexport const gameLoop: Loop = new Loop();\n\nlet cachedConfig = undefined as GConfig | undefined;\n\nexport async function init(config: GConfig) {\n    cachedConfig = config;\n\n    gameLoop.reset();\n\n    initEnemy(config.enemies);\n    initPlayer(config.player);\n    initSkills(config.skills);\n\n    initComponents(config);\n\n    gameLoop.subscribe(() => {\n        statistics[\"Time Played\"].add(1);\n    }, { intervalMilliseconds: 1000 });\n\n    gameLoop.subscribe(() => {\n        saveGame(config.meta);\n    }, { intervalMilliseconds: 1000 * 60})\n\n    await setupPlayer();\n\n    createStatisticsElements();\n\n\n    if (!isLocalHost) {\n        gameLoop.start();\n    } else {\n        setupDevHelpers();\n    }\n    await loadGame(config);\n}\n\n\nfunction setupDevHelpers() {\n    if('TS' in window){\n        return;\n    }\n    Object.defineProperty(window, 'TS', {\n        value: {\n            setLevel: (v: number) => playerStats.level.set(v),\n            setGold: (v: number) => playerStats.gold.set(v),\n            save: () => { if (cachedConfig) { saveGame(cachedConfig.meta); } },\n            load: () => { if (cachedConfig) { loadGame(cachedConfig); } },\n        }\n    });\n\n    console.log('Press Space to toggle GameLoop');\n    document.addEventListener('keydown', x => {\n        if (x.code === 'Space') {\n            if (gameLoop.running) {\n                document.title = `Tinkerers Subject (Stopped)`;\n                gameLoop.stop();\n            } else {\n                gameLoop.start();\n                document.title = 'Tinkerers Subject (Running)';\n            }\n        }\n    });\n}", "import Ajv from 'ajv';\nimport schema from '@public/gconfig/configSchema.json';\n\n\nexport const validateConfig = new Ajv().compile(schema);", "import { queryHTML } from \"../utils/helpers\";\nimport { ConfigEntry, ConfigEntryHandler, EntryType } from \"./configEntryHandlers\";\nimport { init as initGame } from '../game/game';\nimport type GConfig from \"@src/types/gconfig\";\nimport { validateConfig } from \"@src/utils/validateConfig\";\nimport { loadMostRecentSave, Save } from '../game/saveGame';\nimport saveManager from \"@src/utils/saveManager\";\n\nconst newButton = queryHTML('menu [data-type=\"new\"]');\nconst loadButton = queryHTML('menu [data-type=\"save\"]');\n\nconst deleteSaveButton = queryHTML('.p-home [data-config-info] [data-role=\"delete\"]');\ndeleteSaveButton.addEventListener('click', async () => {\n    const id = deleteSaveButton.getAttribute('data-id');\n    if(!id){\n        return;\n    }\n    const save = await saveManager.load('Game') as { [K: string]: Save };\n    delete save[id];\n    await saveManager.save('Game', save);\n    loadButton.click();\n})\n\nconst entryListContainer = queryHTML('[data-config-list]');\nconst configInfoContainer = queryHTML('[data-config-info]');\nconst startConfigButton = queryHTML('[data-start]', configInfoContainer);\n\nconst configEntryHandler = new ConfigEntryHandler();\n\nlet startConfigListener: ((ev: MouseEvent) => void);\n\n[newButton, loadButton].forEach((x, i, arr) => {\n    x.addEventListener('click', async () => {\n        arr.forEach(y => y.classList.toggle('selected', y === x));\n        const type = x.getAttribute('data-type') as EntryType;\n        populateEntryList(type);\n    });\n    if (i === 0) {\n        x.click();\n    }\n});\n\nexport async function init() {\n    await tryAutoLoad();\n}\n\nasync function tryAutoLoad() {\n    const lastSave = await loadMostRecentSave();\n    if (!lastSave) {\n        return false;\n    }\n    await startConfig({ ...lastSave.meta, type: 'save' });\n    return true;\n}\n\nasync function startConfig(entry: ConfigEntry) {\n\n    const config = await loadConfigAtUrl(entry.rawUrl);\n    if (!config) {\n        console.error('invalid url');\n        return;\n    }\n    if (!validateConfig(config)) {\n        console.error('invalid configuration');\n        return;\n    }\n\n    config.meta = {\n        name: entry.name,\n        description: entry.description,\n        rawUrl: entry.rawUrl,\n        id: entry.id,\n        createdAt: entry.createdAt || Date.now(),\n    };\n\n    await initGame(config);\n    const btn = queryHTML('header [data-tab-target=\"game\"]');\n    btn.classList.remove('hidden');\n    btn.click();\n    return true;\n}\n\nasync function showConfig(entry: ConfigEntry) {\n\n    queryHTML('[data-title]', configInfoContainer).textContent = entry.name;\n    queryHTML('[data-desc]', configInfoContainer).textContent = entry.description || '';\n\n    startConfigButton.removeEventListener('click', startConfigListener);\n    startConfigListener = async () => {\n        const success = await startConfig(entry);\n        if (!success) {\n            //error msg, failed to load configuration, try again later\n        }\n    };\n    startConfigButton.addEventListener('click', startConfigListener);\n}\n\nasync function populateEntryList(type: EntryType) {\n    const elements = await configEntryHandler.getEntryListElements(type);\n    configInfoContainer.classList.toggle('hidden', elements.length === 0);\n\n    if (elements.length === 0) {\n        let msg = '';\n        switch (type) {\n            case 'new': msg = 'Failed to load any configurations'; break;\n            case 'save': msg = 'You do not have any saved games yet'; break;\n        }\n        entryListContainer.textContent = msg;\n        return;\n    }\n\n    deleteSaveButton.classList.toggle('hidden', type !== 'save');\n\n    for (const element of elements) {\n        element.addEventListener('click', () => {\n            elements.forEach(x => x.classList.toggle('selected', x === element));\n            const entry = configEntryHandler.getActiveEntry();\n            entry.type = type;\n            showConfig(entry);\n        });\n    }\n    entryListContainer.replaceChildren(...elements);\n\n    elements[0].click();\n}\n\nasync function loadConfigAtUrl(url: string): Promise<GConfig | undefined> {\n    try {\n        const json = await (await fetch(url)).json();\n        return json as GConfig;\n    } catch (e) {\n        console.error(e);\n    }\n}", "import { init as initHome } from './home/home';\nimport { queryHTML, registerTabs, tabCallback } from './utils/helpers';\n\nconst mainPageNavButton = queryHTML('body > header button');\n\nregisterTabs(mainPageNavButton.parentElement!, document.body, (btn: HTMLElement, content: HTMLElement) => {\n    tabCallback(btn, content);\n    const attr = btn.getAttribute('data-tab-target');\n    switch (attr) {\n        case 'home':\n            btn.textContent = 'Back';\n            btn.setAttribute('data-tab-target', 'game');\n            break;\n            case 'game': \n            btn.textContent = 'Home'; \n            btn.setAttribute('data-tab-target', 'home');\n            break;\n    }\n});\n\ninit();\n\nasync function init() {\n\n    await initHome();\n    document.body.classList.remove('hidden');\n}\n"],
  "mappings": "ssCAAA,IAAAA,GAAAC,EAAA,CAAAC,GAAAC,KAAA,EAMC,SAASC,EAAE,CAAC,GAAG,OAAOF,IAAU,UAAU,OAAOC,GAAS,IAAaA,GAAO,QAAQC,EAAE,UAAU,OAAO,QAAS,YAAY,OAAO,IAAK,OAAO,CAAC,EAAEA,CAAC,MAAM,CAAC,IAAIC,EAAK,OAAO,OAAS,IAAaA,EAAE,OAAe,OAAO,OAAS,IAAaA,EAAE,OAAe,OAAO,KAAO,IAAaA,EAAE,KAAUA,EAAE,KAAKA,EAAE,YAAcD,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC,IAAIE,EAAOH,EAAOD,EAAQ,OAAQ,SAASK,EAAEC,EAAEC,EAAEC,EAAE,CAAC,SAASC,EAAEC,EAAEC,EAAE,CAAC,GAAG,CAACJ,EAAEG,GAAG,CAAC,GAAG,CAACJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,OAAOC,IAAS,YAAYA,GAAQ,GAAG,CAACF,GAAGC,EAAE,OAAOA,EAAEF,EAAE,EAAE,EAAE,GAAGI,EAAE,OAAOA,EAAEJ,EAAE,EAAE,EAAE,IAAIR,EAAE,IAAI,MAAM,uBAAuBQ,EAAE,GAAG,EAAE,MAAOR,EAAE,KAAK,mBAAoBA,CAAE,CAAC,IAAIa,EAAER,EAAEG,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAEJ,EAAEI,GAAG,GAAG,KAAKK,EAAE,QAAQ,SAASV,EAAE,CAAC,IAAIE,EAAED,EAAEI,GAAG,GAAGL,GAAG,OAAOI,EAAEF,GAAIF,CAAC,CAAC,EAAEU,EAAEA,EAAE,QAAQV,EAAEC,EAAEC,EAAEC,CAAC,CAAC,CAAC,OAAOD,EAAEG,GAAG,OAAO,CAA2C,QAAtCI,EAAE,OAAOD,IAAS,YAAYA,GAAgBH,EAAE,EAAEA,EAAEF,EAAE,OAAOE,IAAID,EAAED,EAAEE,EAAE,EAAE,OAAOD,CAAC,EAAG,CAAC,EAAE,CAAC,SAASO,EAAQf,EAAOD,EAAQ,EACp1B,SAAUiB,EAAO,CAClB,aACA,IAAIC,EAAWD,EAAO,kBAAoBA,EAAO,uBAE7CE,EAGF,GAAID,EAAU,CACZ,IAAIE,EAAS,EACTC,EAAW,IAAIH,EAASI,CAAQ,EAChCC,EAAUN,EAAO,SAAS,eAAe,EAAE,EAC/CI,EAAS,QAAQE,EAAS,CACxB,cAAe,EACjB,CAAC,EACDJ,EAAgB,UAAY,CAC1BI,EAAQ,KAAQH,EAAS,EAAEA,EAAS,CACtC,CACF,SAAW,CAACH,EAAO,cAAgB,OAAOA,EAAO,eAAmB,IAAa,CAC/E,IAAIO,EAAU,IAAIP,EAAO,eACzBO,EAAQ,MAAM,UAAYF,EAC1BH,EAAgB,UAAY,CAC1BK,EAAQ,MAAM,YAAY,CAAC,CAC7B,CACF,KAAW,aAAcP,GAAU,uBAAwBA,EAAO,SAAS,cAAc,QAAQ,EAC/FE,EAAgB,UAAY,CAI1B,IAAIM,EAAWR,EAAO,SAAS,cAAc,QAAQ,EACrDQ,EAAS,mBAAqB,UAAY,CACxCH,EAAS,EAETG,EAAS,mBAAqB,KAC9BA,EAAS,WAAW,YAAYA,CAAQ,EACxCA,EAAW,IACb,EACAR,EAAO,SAAS,gBAAgB,YAAYQ,CAAQ,CACtD,EAEAN,EAAgB,UAAY,CAC1B,WAAWG,EAAU,CAAC,CACxB,EAIJ,IAAII,EACAC,EAAQ,CAAC,EAEb,SAASL,GAAW,CAClBI,EAAW,GAGX,QAFIZ,EAAGc,EACHC,EAAMF,EAAM,OACTE,GAAK,CAIV,IAHAD,EAAWD,EACXA,EAAQ,CAAC,EACTb,EAAI,GACG,EAAEA,EAAIe,GACXD,EAASd,GAAG,EAEde,EAAMF,EAAM,MACd,CACAD,EAAW,EACb,CAEAzB,EAAO,QAAU6B,EACjB,SAASA,EAAUC,EAAM,CACnBJ,EAAM,KAAKI,CAAI,IAAM,GAAK,CAACL,GAC7BP,EAAc,CAElB,CAEA,GAAG,KAAK,KAAK,OAAO,OAAW,IAAc,OAAS,OAAO,KAAS,IAAc,KAAO,OAAO,OAAW,IAAc,OAAS,CAAC,CAAC,CACtI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,SAASH,EAAQf,EAAOD,EAAQ,CACzC,aACA,IAAI8B,EAAYd,EAAQ,CAAC,EAGzB,SAASgB,GAAW,CAAC,CAErB,IAAIC,EAAW,CAAC,EAEZC,EAAW,CAAC,UAAU,EACtBC,EAAY,CAAC,WAAW,EACxBC,EAAU,CAAC,SAAS,EAExBnC,EAAO,QAAUoC,EAEjB,SAASA,EAAQC,EAAU,CACzB,GAAI,OAAOA,GAAa,WACtB,MAAM,IAAI,UAAU,6BAA6B,EAEnD,KAAK,MAAQF,EACb,KAAK,MAAQ,CAAC,EACd,KAAK,QAAU,OACXE,IAAaN,GACfO,EAAsB,KAAMD,CAAQ,CAExC,CAEAD,EAAQ,UAAU,MAAW,SAAUG,EAAY,CACjD,OAAO,KAAK,KAAK,KAAMA,CAAU,CACnC,EACAH,EAAQ,UAAU,KAAO,SAAUI,EAAaD,EAAY,CAC1D,GAAI,OAAOC,GAAgB,YAAc,KAAK,QAAUN,GACtD,OAAOK,GAAe,YAAc,KAAK,QAAUN,EACnD,OAAO,KAET,IAAIQ,EAAU,IAAI,KAAK,YAAYV,CAAQ,EAC3C,GAAI,KAAK,QAAUI,EAAS,CAC1B,IAAIE,GAAW,KAAK,QAAUH,EAAYM,EAAcD,EACxDG,EAAOD,EAASJ,GAAU,KAAK,OAAO,CACxC,MACE,KAAK,MAAM,KAAK,IAAIM,EAAUF,EAASD,EAAaD,CAAU,CAAC,EAGjE,OAAOE,CACT,EACA,SAASE,EAAUF,EAASD,EAAaD,EAAY,CACnD,KAAK,QAAUE,EACX,OAAOD,GAAgB,aACzB,KAAK,YAAcA,EACnB,KAAK,cAAgB,KAAK,oBAExB,OAAOD,GAAe,aACxB,KAAK,WAAaA,EAClB,KAAK,aAAe,KAAK,kBAE7B,CACAI,EAAU,UAAU,cAAgB,SAAUC,EAAO,CACnDZ,EAAS,QAAQ,KAAK,QAASY,CAAK,CACtC,EACAD,EAAU,UAAU,mBAAqB,SAAUC,EAAO,CACxDF,EAAO,KAAK,QAAS,KAAK,YAAaE,CAAK,CAC9C,EACAD,EAAU,UAAU,aAAe,SAAUC,EAAO,CAClDZ,EAAS,OAAO,KAAK,QAASY,CAAK,CACrC,EACAD,EAAU,UAAU,kBAAoB,SAAUC,EAAO,CACvDF,EAAO,KAAK,QAAS,KAAK,WAAYE,CAAK,CAC7C,EAEA,SAASF,EAAOD,EAASI,EAAMD,EAAO,CACpCf,EAAU,UAAY,CACpB,IAAIiB,GACJ,GAAI,CACFA,GAAcD,EAAKD,CAAK,CAC1B,OAASxC,GAAP,CACA,OAAO4B,EAAS,OAAOS,EAASrC,EAAC,CACnC,CACI0C,KAAgBL,EAClBT,EAAS,OAAOS,EAAS,IAAI,UAAU,oCAAoC,CAAC,EAE5ET,EAAS,QAAQS,EAASK,EAAW,CAEzC,CAAC,CACH,CAEAd,EAAS,QAAU,SAAUe,EAAMH,EAAO,CACxC,IAAII,EAASC,EAASC,EAASN,CAAK,EACpC,GAAII,EAAO,SAAW,QACpB,OAAOhB,EAAS,OAAOe,EAAMC,EAAO,KAAK,EAE3C,IAAIG,GAAWH,EAAO,MAEtB,GAAIG,GACFb,EAAsBS,EAAMI,EAAQ,MAC/B,CACLJ,EAAK,MAAQb,EACba,EAAK,QAAUH,EAGf,QAFI/B,GAAI,GACJe,GAAMmB,EAAK,MAAM,OACd,EAAElC,GAAIe,IACXmB,EAAK,MAAMlC,IAAG,cAAc+B,CAAK,CAErC,CACA,OAAOG,CACT,EACAf,EAAS,OAAS,SAAUe,EAAMK,EAAO,CACvCL,EAAK,MAAQd,EACbc,EAAK,QAAUK,EAGf,QAFIvC,EAAI,GACJe,GAAMmB,EAAK,MAAM,OACd,EAAElC,EAAIe,IACXmB,EAAK,MAAMlC,GAAG,aAAauC,CAAK,EAElC,OAAOL,CACT,EAEA,SAASG,EAAQG,EAAK,CAEpB,IAAIC,EAAOD,GAAOA,EAAI,KACtB,GAAIA,IAAQ,OAAOA,GAAQ,UAAY,OAAOA,GAAQ,aAAe,OAAOC,GAAS,WACnF,OAAO,UAAoB,CACzBA,EAAK,MAAMD,EAAK,SAAS,CAC3B,CAEJ,CAEA,SAASf,EAAsBS,EAAMI,EAAU,CAE7C,IAAIhC,EAAS,GACb,SAASoC,GAAQX,GAAO,CAClBzB,IAGJA,EAAS,GACTa,EAAS,OAAOe,EAAMH,EAAK,EAC7B,CAEA,SAASY,GAAUZ,GAAO,CACpBzB,IAGJA,EAAS,GACTa,EAAS,QAAQe,EAAMH,EAAK,EAC9B,CAEA,SAASa,IAAc,CACrBN,EAASK,GAAWD,EAAO,CAC7B,CAEA,IAAIP,GAASC,EAASQ,EAAW,EAC7BT,GAAO,SAAW,SACpBO,GAAQP,GAAO,KAAK,CAExB,CAEA,SAASC,EAASJ,EAAMD,EAAO,CAC7B,IAAIc,EAAM,CAAC,EACX,GAAI,CACFA,EAAI,MAAQb,EAAKD,CAAK,EACtBc,EAAI,OAAS,SACf,OAAStD,GAAP,CACAsD,EAAI,OAAS,QACbA,EAAI,MAAQtD,EACd,CACA,OAAOsD,CACT,CAEAtB,EAAQ,QAAUuB,EAClB,SAASA,EAAQf,EAAO,CACtB,OAAIA,aAAiB,KACZA,EAEFZ,EAAS,QAAQ,IAAI,KAAKD,CAAQ,EAAGa,CAAK,CACnD,CAEAR,EAAQ,OAASwB,EACjB,SAASA,EAAOC,EAAQ,CACtB,IAAIpB,EAAU,IAAI,KAAKV,CAAQ,EAC/B,OAAOC,EAAS,OAAOS,EAASoB,CAAM,CACxC,CAEAzB,EAAQ,IAAM0B,GACd,SAASA,GAAIC,EAAU,CACrB,IAAIhB,EAAO,KACX,GAAI,OAAO,UAAU,SAAS,KAAKgB,CAAQ,IAAM,iBAC/C,OAAO,KAAK,OAAO,IAAI,UAAU,kBAAkB,CAAC,EAGtD,IAAInC,EAAMmC,EAAS,OACf5C,GAAS,GACb,GAAI,CAACS,EACH,OAAO,KAAK,QAAQ,CAAC,CAAC,EAQxB,QALIoC,GAAS,IAAI,MAAMpC,CAAG,EACtBqC,GAAW,EACXpD,GAAI,GACJ4B,GAAU,IAAI,KAAKV,CAAQ,EAExB,EAAElB,GAAIe,GACXsC,GAAYH,EAASlD,IAAIA,EAAC,EAE5B,OAAO4B,GACP,SAASyB,GAAYtB,GAAO/B,GAAG,CAC7BkC,EAAK,QAAQH,EAAK,EAAE,KAAKuB,GAAgB,SAAUf,GAAO,CACnDjC,KACHA,GAAS,GACTa,EAAS,OAAOS,GAASW,EAAK,EAElC,CAAC,EACD,SAASe,GAAeC,GAAU,CAChCJ,GAAOnD,IAAKuD,GACR,EAAEH,KAAarC,GAAO,CAACT,KACzBA,GAAS,GACTa,EAAS,QAAQS,GAASuB,EAAM,EAEpC,CACF,CACF,CAEA5B,EAAQ,KAAOiC,EACf,SAASA,EAAKN,EAAU,CACtB,IAAIhB,EAAO,KACX,GAAI,OAAO,UAAU,SAAS,KAAKgB,CAAQ,IAAM,iBAC/C,OAAO,KAAK,OAAO,IAAI,UAAU,kBAAkB,CAAC,EAGtD,IAAInC,EAAMmC,EAAS,OACf5C,GAAS,GACb,GAAI,CAACS,EACH,OAAO,KAAK,QAAQ,CAAC,CAAC,EAMxB,QAHIf,GAAI,GACJ4B,GAAU,IAAI,KAAKV,CAAQ,EAExB,EAAElB,GAAIe,GACXS,GAAS0B,EAASlD,GAAE,EAEtB,OAAO4B,GACP,SAASJ,GAASO,GAAO,CACvBG,EAAK,QAAQH,EAAK,EAAE,KAAK,SAAU0B,GAAU,CACtCnD,KACHA,GAAS,GACTa,EAAS,QAAQS,GAAS6B,EAAQ,EAEtC,EAAG,SAAUlB,GAAO,CACbjC,KACHA,GAAS,GACTa,EAAS,OAAOS,GAASW,EAAK,EAElC,CAAC,CACH,CACF,CAEA,EAAE,CAAC,EAAI,CAAC,CAAC,EAAE,EAAE,CAAC,SAASrC,EAAQf,EAAOD,EAAQ,EAC7C,SAAUiB,EAAO,CAClB,aACI,OAAOA,EAAO,SAAY,aAC5BA,EAAO,QAAUD,EAAQ,CAAC,EAG5B,GAAG,KAAK,KAAK,OAAO,OAAW,IAAc,OAAS,OAAO,KAAS,IAAc,KAAO,OAAO,OAAW,IAAc,OAAS,CAAC,CAAC,CACtI,EAAE,CAAC,EAAI,CAAC,CAAC,EAAE,EAAE,CAAC,SAASA,EAAQf,EAAOD,EAAQ,CAC9C,aAEA,IAAIwE,EAAU,OAAO,QAAW,YAAc,OAAO,OAAO,UAAa,SAAW,SAAUlB,EAAK,CAAE,OAAO,OAAOA,CAAK,EAAI,SAAUA,EAAK,CAAE,OAAOA,GAAO,OAAO,QAAW,YAAcA,EAAI,cAAgB,QAAUA,IAAQ,OAAO,UAAY,SAAW,OAAOA,CAAK,EAE3Q,SAASmB,EAAgBC,EAAUC,EAAa,CAAE,GAAI,EAAED,aAAoBC,GAAgB,MAAM,IAAI,UAAU,mCAAmC,CAAK,CAExJ,SAASC,GAAS,CAEd,GAAI,CACA,GAAI,OAAO,UAAc,IACrB,OAAO,UAEX,GAAI,OAAO,gBAAoB,IAC3B,OAAO,gBAEX,GAAI,OAAO,aAAiB,IACxB,OAAO,aAEX,GAAI,OAAO,WAAe,IACtB,OAAO,WAEX,GAAI,OAAO,YAAgB,IACvB,OAAO,WAEf,OAASvE,EAAP,CACE,MACJ,CACJ,CAEA,IAAIwE,EAAMD,EAAO,EAEjB,SAASE,GAAmB,CACxB,GAAI,CAGA,GAAI,CAACD,GAAO,CAACA,EAAI,KACb,MAAO,GAMX,IAAIE,EAAW,OAAO,aAAiB,KAAe,4BAA4B,KAAK,UAAU,SAAS,GAAK,CAAC,SAAS,KAAK,UAAU,SAAS,GAAK,CAAC,aAAa,KAAK,UAAU,QAAQ,EAEvLC,EAAW,OAAO,OAAU,YAAc,MAAM,SAAS,EAAE,QAAQ,cAAc,IAAM,GAQ3F,OAAQ,CAACD,GAAYC,IAAa,OAAO,UAAc,KAKvD,OAAO,YAAgB,GAC3B,OAAS3E,EAAP,CACE,MAAO,EACX,CACJ,CAQA,SAAS4E,EAAWC,EAAOC,EAAY,CAEnCD,EAAQA,GAAS,CAAC,EAClBC,EAAaA,GAAc,CAAC,EAC5B,GAAI,CACA,OAAO,IAAI,KAAKD,EAAOC,CAAU,CACrC,OAAS9E,EAAP,CACE,GAAIA,EAAE,OAAS,YACX,MAAMA,EAIV,QAFI+E,EAAU,OAAO,YAAgB,IAAc,YAAc,OAAO,cAAkB,IAAc,cAAgB,OAAO,eAAmB,IAAc,eAAiB,kBAC7KC,EAAU,IAAID,EACTtE,EAAI,EAAGA,EAAIoE,EAAM,OAAQpE,GAAK,EACnCuE,EAAQ,OAAOH,EAAMpE,EAAE,EAE3B,OAAOuE,EAAQ,QAAQF,EAAW,IAAI,CAC1C,CACJ,CAII,OAAO,QAAY,KAGnBnE,EAAQ,CAAC,EAEb,IAAIsE,EAAY,QAEhB,SAASC,EAAgB7C,EAAS8C,EAAU,CACpCA,GACA9C,EAAQ,KAAK,SAAUO,EAAQ,CAC3BuC,EAAS,KAAMvC,CAAM,CACzB,EAAG,SAAUI,EAAO,CAChBmC,EAASnC,CAAK,CAClB,CAAC,CAET,CAEA,SAASoC,EAAoB/C,EAAS8C,EAAUE,EAAe,CACvD,OAAOF,GAAa,YACpB9C,EAAQ,KAAK8C,CAAQ,EAGrB,OAAOE,GAAkB,YACzBhD,EAAQ,MAASgD,CAAa,CAEtC,CAEA,SAASC,EAAaC,EAAK,CAEvB,OAAI,OAAOA,GAAQ,WACf,QAAQ,KAAKA,EAAM,yCAAyC,EAC5DA,EAAM,OAAOA,CAAG,GAGbA,CACX,CAEA,SAASC,GAAc,CACnB,GAAI,UAAU,QAAU,OAAO,UAAU,UAAU,OAAS,IAAO,WAC/D,OAAO,UAAU,UAAU,OAAS,EAE5C,CAKA,IAAIC,EAA4B,mCAC5BC,EAAgB,OAChBC,EAAa,CAAC,EACdC,GAAW,OAAO,UAAU,SAG5BC,EAAY,WACZC,EAAa,YAOjB,SAASC,EAAwBC,EAAK,CAIlC,QAHIC,EAASD,EAAI,OACbE,EAAM,IAAI,YAAYD,CAAM,EAC5BE,EAAM,IAAI,WAAWD,CAAG,EACnBzF,EAAI,EAAGA,EAAIwF,EAAQxF,IACxB0F,EAAI1F,GAAKuF,EAAI,WAAWvF,CAAC,EAE7B,OAAOyF,CACX,CAiBA,SAASE,EAAgC5B,EAAK,CAC1C,OAAO,IAAIS,EAAU,SAAU1B,EAAS,CACpC,IAAI8C,EAAM7B,EAAI,YAAYiB,EAA2BK,CAAU,EAC3DQ,EAAO1B,EAAW,CAAC,EAAE,CAAC,EAC1ByB,EAAI,YAAYZ,CAAyB,EAAE,IAAIa,EAAM,KAAK,EAE1DD,EAAI,QAAU,SAAUrG,EAAG,CAGvBA,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClBuD,EAAQ,EAAK,CACjB,EAEA8C,EAAI,WAAa,UAAY,CACzB,IAAIE,EAAgB,UAAU,UAAU,MAAM,eAAe,EACzDC,EAAc,UAAU,UAAU,MAAM,QAAQ,EAGpDjD,EAAQiD,GAAe,CAACD,GAAiB,SAASA,EAAc,GAAI,EAAE,GAAK,EAAE,CACjF,CACJ,CAAC,EAAE,MAAS,UAAY,CACpB,MAAO,EACX,CAAC,CACL,CAEA,SAASE,GAAkBjC,EAAK,CAC5B,OAAI,OAAOkB,GAAkB,UAClBT,EAAU,QAAQS,CAAa,EAEnCU,EAAgC5B,CAAG,EAAE,KAAK,SAAUhC,EAAO,CAC9D,OAAAkD,EAAgBlD,EACTkD,CACX,CAAC,CACL,CAEA,SAASgB,GAAgBC,EAAQ,CAC7B,IAAIC,EAAYjB,EAAWgB,EAAO,MAG9BE,EAAoB,CAAC,EAEzBA,EAAkB,QAAU,IAAI5B,EAAU,SAAU1B,EAASC,EAAQ,CACjEqD,EAAkB,QAAUtD,EAC5BsD,EAAkB,OAASrD,CAC/B,CAAC,EAGDoD,EAAU,mBAAmB,KAAKC,CAAiB,EAG9CD,EAAU,QAGXA,EAAU,QAAUA,EAAU,QAAQ,KAAK,UAAY,CACnD,OAAOC,EAAkB,OAC7B,CAAC,EAJDD,EAAU,QAAUC,EAAkB,OAM9C,CAEA,SAASC,GAAkBH,EAAQ,CAC/B,IAAIC,EAAYjB,EAAWgB,EAAO,MAG9BE,EAAoBD,EAAU,mBAAmB,IAAI,EAIzD,GAAIC,EACA,OAAAA,EAAkB,QAAQ,EACnBA,EAAkB,OAEjC,CAEA,SAASE,GAAiBJ,EAAQK,EAAK,CACnC,IAAIJ,EAAYjB,EAAWgB,EAAO,MAG9BE,EAAoBD,EAAU,mBAAmB,IAAI,EAIzD,GAAIC,EACA,OAAAA,EAAkB,OAAOG,CAAG,EACrBH,EAAkB,OAEjC,CAEA,SAASI,GAAeN,EAAQO,EAAe,CAC3C,OAAO,IAAIjC,EAAU,SAAU1B,EAASC,EAAQ,CAG5C,GAFAmC,EAAWgB,EAAO,MAAQhB,EAAWgB,EAAO,OAASQ,GAAgB,EAEjER,EAAO,GACP,GAAIO,EACAR,GAAgBC,CAAM,EACtBA,EAAO,GAAG,MAAM,MAEhB,QAAOpD,EAAQoD,EAAO,EAAE,EAIhC,IAAIS,EAAS,CAACT,EAAO,IAAI,EAErBO,GACAE,EAAO,KAAKT,EAAO,OAAO,EAG9B,IAAIU,EAAU7C,EAAI,KAAK,MAAMA,EAAK4C,CAAM,EAEpCF,IACAG,EAAQ,gBAAkB,SAAUrH,EAAG,CACnC,IAAIsH,EAAKD,EAAQ,OACjB,GAAI,CACAC,EAAG,kBAAkBX,EAAO,SAAS,EACjC3G,EAAE,YAAc,GAEhBsH,EAAG,kBAAkB7B,CAAyB,CAEtD,OAAS8B,EAAP,CACE,GAAIA,EAAG,OAAS,kBACZ,QAAQ,KAAK,iBAAmBZ,EAAO,KAAO,oCAA2C3G,EAAE,WAAa,eAAiBA,EAAE,WAAa,sBAAwB2G,EAAO,UAAY,mBAAmB,MAEtM,OAAMY,CAEd,CACJ,GAGJF,EAAQ,QAAU,SAAUrH,EAAG,CAC3BA,EAAE,eAAe,EACjBwD,EAAO6D,EAAQ,KAAK,CACxB,EAEAA,EAAQ,UAAY,UAAY,CAC5B,IAAIC,EAAKD,EAAQ,OACjBC,EAAG,gBAAkB,SAAUtH,EAAG,CAM9BA,EAAE,OAAO,MAAM,CACnB,EACAuD,EAAQ+D,CAAE,EACVR,GAAkBH,CAAM,CAC5B,CACJ,CAAC,CACL,CAEA,SAASa,GAAuBb,EAAQ,CACpC,OAAOM,GAAeN,EAAQ,EAAK,CACvC,CAEA,SAASc,GAAuBd,EAAQ,CACpC,OAAOM,GAAeN,EAAQ,EAAI,CACtC,CAEA,SAASe,GAAiBf,EAAQgB,EAAgB,CAC9C,GAAI,CAAChB,EAAO,GACR,MAAO,GAGX,IAAIiB,EAAa,CAACjB,EAAO,GAAG,iBAAiB,SAASA,EAAO,SAAS,EAClEkB,EAAclB,EAAO,QAAUA,EAAO,GAAG,QACzCmB,EAAYnB,EAAO,QAAUA,EAAO,GAAG,QAY3C,GAVIkB,IAGIlB,EAAO,UAAYgB,GACnB,QAAQ,KAAK,iBAAmBhB,EAAO,KAAO,sCAA6CA,EAAO,GAAG,QAAU,eAAiBA,EAAO,QAAU,GAAG,EAGxJA,EAAO,QAAUA,EAAO,GAAG,SAG3BmB,GAAaF,EAAY,CAIzB,GAAIA,EAAY,CACZ,IAAIG,EAAapB,EAAO,GAAG,QAAU,EACjCoB,EAAapB,EAAO,UACpBA,EAAO,QAAUoB,EAEzB,CAEA,MAAO,EACX,CAEA,MAAO,EACX,CAGA,SAASC,GAAY1B,EAAM,CACvB,OAAO,IAAIrB,EAAU,SAAU1B,EAASC,EAAQ,CAC5C,IAAIyE,EAAS,IAAI,WACjBA,EAAO,QAAUzE,EACjByE,EAAO,UAAY,SAAUjI,EAAG,CAC5B,IAAIkI,EAAS,KAAKlI,EAAE,OAAO,QAAU,EAAE,EACvCuD,EAAQ,CACJ,4BAA6B,GAC7B,KAAM2E,EACN,KAAM5B,EAAK,IACf,CAAC,CACL,EACA2B,EAAO,mBAAmB3B,CAAI,CAClC,CAAC,CACL,CAGA,SAAS6B,GAAYC,EAAa,CAC9B,IAAIC,EAAYtC,EAAwB,KAAKqC,EAAY,IAAI,CAAC,EAC9D,OAAOxD,EAAW,CAACyD,CAAS,EAAG,CAAE,KAAMD,EAAY,IAAK,CAAC,CAC7D,CAGA,SAASE,GAAe9F,EAAO,CAC3B,OAAOA,GAASA,EAAM,2BAC1B,CAMA,SAAS+F,GAAYpD,EAAU,CAC3B,IAAIxC,EAAO,KAEPN,EAAUM,EAAK,WAAW,EAAE,KAAK,UAAY,CAC7C,IAAIiE,EAAYjB,EAAWhD,EAAK,QAAQ,MAExC,GAAIiE,GAAaA,EAAU,QACvB,OAAOA,EAAU,OAEzB,CAAC,EAED,OAAAxB,EAAoB/C,EAAS8C,EAAUA,CAAQ,EACxC9C,CACX,CAKA,SAASmG,GAAc7B,EAAQ,CAC3BD,GAAgBC,CAAM,EAKtB,QAHIC,EAAYjB,EAAWgB,EAAO,MAC9B8B,EAAU7B,EAAU,QAEfnG,EAAI,EAAGA,EAAIgI,EAAQ,OAAQhI,IAAK,CACrC,IAAIiI,EAASD,EAAQhI,GACjBiI,EAAO,QAAQ,KACfA,EAAO,QAAQ,GAAG,MAAM,EACxBA,EAAO,QAAQ,GAAK,KAE5B,CACA,OAAA/B,EAAO,GAAK,KAELa,GAAuBb,CAAM,EAAE,KAAK,SAAUW,EAAI,CAErD,OADAX,EAAO,GAAKW,EACRI,GAAiBf,CAAM,EAEhBc,GAAuBd,CAAM,EAEjCW,CACX,CAAC,EAAE,KAAK,SAAUA,EAAI,CAGlBX,EAAO,GAAKC,EAAU,GAAKU,EAC3B,QAAS7G,EAAI,EAAGA,EAAIgI,EAAQ,OAAQhI,IAChCgI,EAAQhI,GAAG,QAAQ,GAAK6G,CAEhC,CAAC,EAAE,MAAS,SAAUN,EAAK,CACvB,MAAAD,GAAiBJ,EAAQK,CAAG,EACtBA,CACV,CAAC,CACL,CAIA,SAAS2B,GAAkBhC,EAAQiC,EAAMzD,EAAU0D,EAAS,CACpDA,IAAY,SACZA,EAAU,GAGd,GAAI,CACA,IAAIC,EAAKnC,EAAO,GAAG,YAAYA,EAAO,UAAWiC,CAAI,EACrDzD,EAAS,KAAM2D,CAAE,CACrB,OAAS9B,EAAP,CACE,GAAI6B,EAAU,IAAM,CAAClC,EAAO,IAAMK,EAAI,OAAS,qBAAuBA,EAAI,OAAS,iBAC/E,OAAO/B,EAAU,QAAQ,EAAE,KAAK,UAAY,CACxC,GAAI,CAAC0B,EAAO,IAAMK,EAAI,OAAS,iBAAmB,CAACL,EAAO,GAAG,iBAAiB,SAASA,EAAO,SAAS,GAAKA,EAAO,SAAWA,EAAO,GAAG,QAEpI,OAAIA,EAAO,KACPA,EAAO,QAAUA,EAAO,GAAG,QAAU,GAGlCc,GAAuBd,CAAM,CAE5C,CAAC,EAAE,KAAK,UAAY,CAChB,OAAO6B,GAAc7B,CAAM,EAAE,KAAK,UAAY,CAC1CgC,GAAkBhC,EAAQiC,EAAMzD,EAAU0D,EAAU,CAAC,CACzD,CAAC,CACL,CAAC,EAAE,MAAS1D,CAAQ,EAGxBA,EAAS6B,CAAG,CAChB,CACJ,CAEA,SAASG,IAAkB,CACvB,MAAO,CAEH,QAAS,CAAC,EAEV,GAAI,KAEJ,QAAS,KAET,mBAAoB,CAAC,CACzB,CACJ,CAIA,SAAS4B,GAAaC,EAAS,CAC3B,IAAIrG,EAAO,KACPgE,EAAS,CACT,GAAI,IACR,EAEA,GAAIqC,EACA,QAASvI,KAAKuI,EACVrC,EAAOlG,GAAKuI,EAAQvI,GAK5B,IAAImG,EAAYjB,EAAWgB,EAAO,MAG7BC,IACDA,EAAYO,GAAgB,EAE5BxB,EAAWgB,EAAO,MAAQC,GAI9BA,EAAU,QAAQ,KAAKjE,CAAI,EAGtBA,EAAK,aACNA,EAAK,WAAaA,EAAK,MACvBA,EAAK,MAAQ4F,IAIjB,IAAIU,EAAe,CAAC,EAEpB,SAASC,GAAe,CAGpB,OAAOjE,EAAU,QAAQ,CAC7B,CAEA,QAASkE,EAAI,EAAGA,EAAIvC,EAAU,QAAQ,OAAQuC,IAAK,CAC/C,IAAIT,EAAS9B,EAAU,QAAQuC,GAC3BT,IAAW/F,GAEXsG,EAAa,KAAKP,EAAO,WAAW,EAAE,MAASQ,CAAY,CAAC,CAEpE,CAGA,IAAIT,EAAU7B,EAAU,QAAQ,MAAM,CAAC,EAIvC,OAAO3B,EAAU,IAAIgE,CAAY,EAAE,KAAK,UAAY,CAChD,OAAAtC,EAAO,GAAKC,EAAU,GAEfY,GAAuBb,CAAM,CACxC,CAAC,EAAE,KAAK,SAAUW,EAAI,CAElB,OADAX,EAAO,GAAKW,EACRI,GAAiBf,EAAQhE,EAAK,eAAe,OAAO,EAE7C8E,GAAuBd,CAAM,EAEjCW,CACX,CAAC,EAAE,KAAK,SAAUA,EAAI,CAClBX,EAAO,GAAKC,EAAU,GAAKU,EAC3B3E,EAAK,QAAUgE,EAEf,QAASyC,EAAI,EAAGA,EAAIX,EAAQ,OAAQW,IAAK,CACrC,IAAIV,EAASD,EAAQW,GACjBV,IAAW/F,IAEX+F,EAAO,QAAQ,GAAK/B,EAAO,GAC3B+B,EAAO,QAAQ,QAAU/B,EAAO,QAExC,CACJ,CAAC,CACL,CAEA,SAAS0C,GAAQ9D,EAAKJ,EAAU,CAC5B,IAAIxC,EAAO,KAEX4C,EAAMD,EAAaC,CAAG,EAEtB,IAAIlD,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1BgG,GAAkBhG,EAAK,QAASkD,EAAW,SAAUmB,EAAKsC,EAAa,CACnE,GAAItC,EACA,OAAOxD,EAAOwD,CAAG,EAGrB,GAAI,CACA,IAAIuC,EAAQD,EAAY,YAAY3G,EAAK,QAAQ,SAAS,EACtD6G,EAAMD,EAAM,IAAIhE,CAAG,EAEvBiE,EAAI,UAAY,UAAY,CACxB,IAAIhH,EAAQgH,EAAI,OACZhH,IAAU,SACVA,EAAQ,MAER8F,GAAe9F,CAAK,IACpBA,EAAQ2F,GAAY3F,CAAK,GAE7Be,EAAQf,CAAK,CACjB,EAEAgH,EAAI,QAAU,UAAY,CACtBhG,EAAOgG,EAAI,KAAK,CACpB,CACJ,OAASxJ,EAAP,CACEwD,EAAOxD,CAAC,CACZ,CACJ,CAAC,CACL,CAAC,EAAE,MAASwD,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAGA,SAASoH,GAAQC,EAAUvE,EAAU,CACjC,IAAIxC,EAAO,KAEPN,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1BgG,GAAkBhG,EAAK,QAASkD,EAAW,SAAUmB,EAAKsC,EAAa,CACnE,GAAItC,EACA,OAAOxD,EAAOwD,CAAG,EAGrB,GAAI,CACA,IAAIuC,EAAQD,EAAY,YAAY3G,EAAK,QAAQ,SAAS,EACtD6G,EAAMD,EAAM,WAAW,EACvBI,EAAkB,EAEtBH,EAAI,UAAY,UAAY,CACxB,IAAII,EAASJ,EAAI,OAEjB,GAAII,EAAQ,CACR,IAAIpH,EAAQoH,EAAO,MACftB,GAAe9F,CAAK,IACpBA,EAAQ2F,GAAY3F,CAAK,GAE7B,IAAII,GAAS8G,EAASlH,EAAOoH,EAAO,IAAKD,GAAiB,EAKtD/G,KAAW,OACXW,EAAQX,EAAM,EAEdgH,EAAO,SAAY,CAE3B,MACIrG,EAAQ,CAEhB,EAEAiG,EAAI,QAAU,UAAY,CACtBhG,EAAOgG,EAAI,KAAK,CACpB,CACJ,OAASxJ,EAAP,CACEwD,EAAOxD,CAAC,CACZ,CACJ,CAAC,CACL,CAAC,EAAE,MAASwD,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAE1B9C,CACX,CAEA,SAASwH,GAAQtE,EAAK/C,EAAO2C,EAAU,CACnC,IAAIxC,EAAO,KAEX4C,EAAMD,EAAaC,CAAG,EAEtB,IAAIlD,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnD,IAAImD,EACJhE,EAAK,MAAM,EAAE,KAAK,UAAY,CAE1B,OADAgE,EAAShE,EAAK,QACViD,GAAS,KAAKpD,CAAK,IAAM,gBAClBiE,GAAkBE,EAAO,EAAE,EAAE,KAAK,SAAUmD,EAAa,CAC5D,OAAIA,EACOtH,EAEJwF,GAAYxF,CAAK,CAC5B,CAAC,EAEEA,CACX,CAAC,EAAE,KAAK,SAAUA,EAAO,CACrBmG,GAAkBhG,EAAK,QAASmD,EAAY,SAAUkB,EAAKsC,EAAa,CACpE,GAAItC,EACA,OAAOxD,EAAOwD,CAAG,EAGrB,GAAI,CACA,IAAIuC,EAAQD,EAAY,YAAY3G,EAAK,QAAQ,SAAS,EAMtDH,IAAU,OACVA,EAAQ,QAGZ,IAAIgH,EAAMD,EAAM,IAAI/G,EAAO+C,CAAG,EAE9B+D,EAAY,WAAa,UAAY,CAO7B9G,IAAU,SACVA,EAAQ,MAGZe,EAAQf,CAAK,CACjB,EACA8G,EAAY,QAAUA,EAAY,QAAU,UAAY,CACpD,IAAItC,GAAMwC,EAAI,MAAQA,EAAI,MAAQA,EAAI,YAAY,MAClDhG,EAAOwD,EAAG,CACd,CACJ,OAAShH,GAAP,CACEwD,EAAOxD,EAAC,CACZ,CACJ,CAAC,CACL,CAAC,EAAE,MAASwD,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,SAAS0H,GAAWxE,EAAKJ,EAAU,CAC/B,IAAIxC,EAAO,KAEX4C,EAAMD,EAAaC,CAAG,EAEtB,IAAIlD,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1BgG,GAAkBhG,EAAK,QAASmD,EAAY,SAAUkB,EAAKsC,EAAa,CACpE,GAAItC,EACA,OAAOxD,EAAOwD,CAAG,EAGrB,GAAI,CACA,IAAIuC,EAAQD,EAAY,YAAY3G,EAAK,QAAQ,SAAS,EAMtD6G,EAAMD,EAAM,OAAUhE,CAAG,EAC7B+D,EAAY,WAAa,UAAY,CACjC/F,EAAQ,CACZ,EAEA+F,EAAY,QAAU,UAAY,CAC9B9F,EAAOgG,EAAI,KAAK,CACpB,EAIAF,EAAY,QAAU,UAAY,CAC9B,IAAItC,EAAMwC,EAAI,MAAQA,EAAI,MAAQA,EAAI,YAAY,MAClDhG,EAAOwD,CAAG,CACd,CACJ,OAAShH,EAAP,CACEwD,EAAOxD,CAAC,CACZ,CACJ,CAAC,CACL,CAAC,EAAE,MAASwD,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,SAAS2H,GAAM7E,EAAU,CACrB,IAAIxC,EAAO,KAEPN,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1BgG,GAAkBhG,EAAK,QAASmD,EAAY,SAAUkB,EAAKsC,EAAa,CACpE,GAAItC,EACA,OAAOxD,EAAOwD,CAAG,EAGrB,GAAI,CACA,IAAIuC,EAAQD,EAAY,YAAY3G,EAAK,QAAQ,SAAS,EACtD6G,EAAMD,EAAM,MAAM,EAEtBD,EAAY,WAAa,UAAY,CACjC/F,EAAQ,CACZ,EAEA+F,EAAY,QAAUA,EAAY,QAAU,UAAY,CACpD,IAAItC,EAAMwC,EAAI,MAAQA,EAAI,MAAQA,EAAI,YAAY,MAClDhG,EAAOwD,CAAG,CACd,CACJ,OAAShH,EAAP,CACEwD,EAAOxD,CAAC,CACZ,CACJ,CAAC,CACL,CAAC,EAAE,MAASwD,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,SAAS4D,GAAOd,EAAU,CACtB,IAAIxC,EAAO,KAEPN,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1BgG,GAAkBhG,EAAK,QAASkD,EAAW,SAAUmB,EAAKsC,EAAa,CACnE,GAAItC,EACA,OAAOxD,EAAOwD,CAAG,EAGrB,GAAI,CACA,IAAIuC,EAAQD,EAAY,YAAY3G,EAAK,QAAQ,SAAS,EACtD6G,EAAMD,EAAM,MAAM,EAEtBC,EAAI,UAAY,UAAY,CACxBjG,EAAQiG,EAAI,MAAM,CACtB,EAEAA,EAAI,QAAU,UAAY,CACtBhG,EAAOgG,EAAI,KAAK,CACpB,CACJ,OAASxJ,EAAP,CACEwD,EAAOxD,CAAC,CACZ,CACJ,CAAC,CACL,CAAC,EAAE,MAASwD,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,SAASkD,GAAIrF,EAAGiF,EAAU,CACtB,IAAIxC,EAAO,KAEPN,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnD,GAAItD,EAAI,EAAG,CACPqD,EAAQ,IAAI,EAEZ,MACJ,CAEAZ,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1BgG,GAAkBhG,EAAK,QAASkD,EAAW,SAAUmB,EAAKsC,EAAa,CACnE,GAAItC,EACA,OAAOxD,EAAOwD,CAAG,EAGrB,GAAI,CACA,IAAIuC,EAAQD,EAAY,YAAY3G,EAAK,QAAQ,SAAS,EACtDsH,EAAW,GACXT,EAAMD,EAAM,cAAc,EAE9BC,EAAI,UAAY,UAAY,CACxB,IAAII,EAASJ,EAAI,OACjB,GAAI,CAACI,EAAQ,CAETrG,EAAQ,IAAI,EAEZ,MACJ,CAEIrD,IAAM,GAKD+J,EAFL1G,EAAQqG,EAAO,GAAG,GAKdK,EAAW,GACXL,EAAO,QAAQ1J,CAAC,EAM5B,EAEAsJ,EAAI,QAAU,UAAY,CACtBhG,EAAOgG,EAAI,KAAK,CACpB,CACJ,OAASxJ,EAAP,CACEwD,EAAOxD,CAAC,CACZ,CACJ,CAAC,CACL,CAAC,EAAE,MAASwD,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,SAAS6H,GAAK/E,EAAU,CACpB,IAAIxC,EAAO,KAEPN,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1BgG,GAAkBhG,EAAK,QAASkD,EAAW,SAAUmB,EAAKsC,EAAa,CACnE,GAAItC,EACA,OAAOxD,EAAOwD,CAAG,EAGrB,GAAI,CACA,IAAIuC,EAAQD,EAAY,YAAY3G,EAAK,QAAQ,SAAS,EACtD6G,EAAMD,EAAM,cAAc,EAC1BW,EAAO,CAAC,EAEZV,EAAI,UAAY,UAAY,CACxB,IAAII,EAASJ,EAAI,OAEjB,GAAI,CAACI,EAAQ,CACTrG,EAAQ2G,CAAI,EACZ,MACJ,CAEAA,EAAK,KAAKN,EAAO,GAAG,EACpBA,EAAO,SAAY,CACvB,EAEAJ,EAAI,QAAU,UAAY,CACtBhG,EAAOgG,EAAI,KAAK,CACpB,CACJ,OAASxJ,EAAP,CACEwD,EAAOxD,CAAC,CACZ,CACJ,CAAC,CACL,CAAC,EAAE,MAASwD,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,SAAS8H,GAAanB,EAAS7D,EAAU,CACrCA,EAAWK,EAAY,MAAM,KAAM,SAAS,EAE5C,IAAI4E,EAAgB,KAAK,OAAO,EAChCpB,EAAU,OAAOA,GAAY,YAAcA,GAAW,CAAC,EAClDA,EAAQ,OACTA,EAAQ,KAAOA,EAAQ,MAAQoB,EAAc,KAC7CpB,EAAQ,UAAYA,EAAQ,WAAaoB,EAAc,WAG3D,IAAIzH,EAAO,KACPN,EACJ,GAAI,CAAC2G,EAAQ,KACT3G,EAAU4C,EAAU,OAAO,mBAAmB,MAC3C,CACH,IAAIoF,EAAcrB,EAAQ,OAASoB,EAAc,MAAQzH,EAAK,QAAQ,GAElE2H,EAAYD,EAAcpF,EAAU,QAAQtC,EAAK,QAAQ,EAAE,EAAI6E,GAAuBwB,CAAO,EAAE,KAAK,SAAU1B,EAAI,CAClH,IAAIV,EAAYjB,EAAWqD,EAAQ,MAC/BP,EAAU7B,EAAU,QACxBA,EAAU,GAAKU,EACf,QAAS7G,EAAI,EAAGA,EAAIgI,EAAQ,OAAQhI,IAChCgI,EAAQhI,GAAG,QAAQ,GAAK6G,EAE5B,OAAOA,CACX,CAAC,EAEI0B,EAAQ,UAmDT3G,EAAUiI,EAAU,KAAK,SAAUhD,EAAI,CACnC,GAAI,EAACA,EAAG,iBAAiB,SAAS0B,EAAQ,SAAS,EAInD,KAAIuB,EAAajD,EAAG,QAAU,EAE9BZ,GAAgBsC,CAAO,EAEvB,IAAIpC,EAAYjB,EAAWqD,EAAQ,MAC/BP,EAAU7B,EAAU,QAExBU,EAAG,MAAM,EACT,QAAS7G,EAAI,EAAGA,EAAIgI,EAAQ,OAAQhI,IAAK,CACrC,IAAIiI,EAASD,EAAQhI,GACrBiI,EAAO,QAAQ,GAAK,KACpBA,EAAO,QAAQ,QAAU6B,CAC7B,CAEA,IAAIC,GAAoB,IAAIvF,EAAU,SAAU1B,GAASC,GAAQ,CAC7D,IAAIgG,GAAMhF,EAAI,KAAKwE,EAAQ,KAAMuB,CAAU,EAE3Cf,GAAI,QAAU,SAAUxC,GAAK,CACzB,IAAIM,GAAKkC,GAAI,OACblC,GAAG,MAAM,EACT9D,GAAOwD,EAAG,CACd,EAEAwC,GAAI,gBAAkB,UAAY,CAC9B,IAAIlC,GAAKkC,GAAI,OACblC,GAAG,kBAAkB0B,EAAQ,SAAS,CAC1C,EAEAQ,GAAI,UAAY,UAAY,CACxB,IAAIlC,GAAKkC,GAAI,OACblC,GAAG,MAAM,EACT/D,GAAQ+D,EAAE,CACd,CACJ,CAAC,EAED,OAAOkD,GAAkB,KAAK,SAAUlD,GAAI,CACxCV,EAAU,GAAKU,GACf,QAAS6B,GAAI,EAAGA,GAAIV,EAAQ,OAAQU,KAAK,CACrC,IAAIsB,GAAWhC,EAAQU,IACvBsB,GAAS,QAAQ,GAAKnD,GACtBR,GAAkB2D,GAAS,OAAO,CACtC,CACJ,CAAC,EAAE,MAAS,SAAUzD,GAAK,CACvB,MAACD,GAAiBiC,EAAShC,EAAG,GAAK/B,EAAU,QAAQ,GAAG,MAAS,UAAY,CAAC,CAAC,EACzE+B,EACV,CAAC,EACL,CAAC,EArGD3E,EAAUiI,EAAU,KAAK,SAAUhD,EAAI,CACnCZ,GAAgBsC,CAAO,EAEvB,IAAIpC,EAAYjB,EAAWqD,EAAQ,MAC/BP,EAAU7B,EAAU,QAExBU,EAAG,MAAM,EACT,QAAS7G,EAAI,EAAGA,EAAIgI,EAAQ,OAAQhI,IAAK,CACrC,IAAIiI,EAASD,EAAQhI,GACrBiI,EAAO,QAAQ,GAAK,IACxB,CAEA,IAAIgC,EAAgB,IAAIzF,EAAU,SAAU1B,GAASC,GAAQ,CACzD,IAAIgG,GAAMhF,EAAI,eAAewE,EAAQ,IAAI,EAEzCQ,GAAI,QAAU,UAAY,CACtB,IAAIlC,GAAKkC,GAAI,OACTlC,IACAA,GAAG,MAAM,EAEb9D,GAAOgG,GAAI,KAAK,CACpB,EAEAA,GAAI,UAAY,UAAY,CAGxB,QAAQ,KAAK,sCAAwCR,EAAQ,KAAO,yCAAyC,CACjH,EAEAQ,GAAI,UAAY,UAAY,CACxB,IAAIlC,GAAKkC,GAAI,OACTlC,IACAA,GAAG,MAAM,EAEb/D,GAAQ+D,EAAE,CACd,CACJ,CAAC,EAED,OAAOoD,EAAc,KAAK,SAAUpD,GAAI,CACpCV,EAAU,GAAKU,GACf,QAAS7G,GAAI,EAAGA,GAAIgI,EAAQ,OAAQhI,KAAK,CACrC,IAAIkK,GAAUlC,EAAQhI,IACtBqG,GAAkB6D,GAAQ,OAAO,CACrC,CACJ,CAAC,EAAE,MAAS,SAAU3D,GAAK,CACvB,MAACD,GAAiBiC,EAAShC,EAAG,GAAK/B,EAAU,QAAQ,GAAG,MAAS,UAAY,CAAC,CAAC,EACzE+B,EACV,CAAC,CACL,CAAC,CAuDT,CAEA,OAAA9B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,IAAIuI,GAAe,CACf,QAAS,eACT,aAAc7B,GACd,SAAUtE,EAAiB,EAC3B,QAASgF,GACT,QAASJ,GACT,QAASQ,GACT,WAAYE,GACZ,MAAOC,GACP,OAAQ/D,GACR,IAAKV,GACL,KAAM2E,GACN,aAAcC,EAClB,EAEA,SAASU,IAAgB,CACrB,OAAO,OAAO,cAAiB,UACnC,CAKA,IAAIC,GAAa,mEAEbC,GAAmB,uBACnBC,GAAyB,gCAEzBC,GAAoB,YACpBC,GAA2BD,GAAkB,OAG7CE,GAAmB,OACnBC,GAAY,OACZC,GAAiB,OACjBC,GAAkB,OAClBC,GAAyB,OACzBC,GAAkB,OAClBC,GAAkB,OAClBC,GAAmB,OACnBC,GAAmB,OACnBC,GAAoB,OACpBC,GAAoB,OACpBC,GAAgCZ,GAA2BC,GAAiB,OAE5EY,GAAa,OAAO,UAAU,SAElC,SAASC,GAAeC,EAAkB,CAEtC,IAAIC,EAAeD,EAAiB,OAAS,IACzCzK,EAAMyK,EAAiB,OACvBxL,EACA0L,EAAI,EACJC,EAAUC,EAAUC,EAAUC,EAE9BN,EAAiBA,EAAiB,OAAS,KAAO,MAClDC,IACID,EAAiBA,EAAiB,OAAS,KAAO,KAClDC,KAIR,IAAIM,EAAS,IAAI,YAAYN,CAAY,EACrCO,EAAQ,IAAI,WAAWD,CAAM,EAEjC,IAAK/L,EAAI,EAAGA,EAAIe,EAAKf,GAAK,EACtB2L,EAAWtB,GAAW,QAAQmB,EAAiBxL,EAAE,EACjD4L,EAAWvB,GAAW,QAAQmB,EAAiBxL,EAAI,EAAE,EACrD6L,EAAWxB,GAAW,QAAQmB,EAAiBxL,EAAI,EAAE,EACrD8L,EAAWzB,GAAW,QAAQmB,EAAiBxL,EAAI,EAAE,EAGrDgM,EAAMN,KAAOC,GAAY,EAAIC,GAAY,EACzCI,EAAMN,MAAQE,EAAW,KAAO,EAAIC,GAAY,EAChDG,EAAMN,MAAQG,EAAW,IAAM,EAAIC,EAAW,GAElD,OAAOC,CACX,CAIA,SAASE,GAAeF,EAAQ,CAE5B,IAAIC,EAAQ,IAAI,WAAWD,CAAM,EAC7BG,EAAe,GACflM,EAEJ,IAAKA,EAAI,EAAGA,EAAIgM,EAAM,OAAQhM,GAAK,EAE/BkM,GAAgB7B,GAAW2B,EAAMhM,IAAM,GACvCkM,GAAgB7B,IAAY2B,EAAMhM,GAAK,IAAM,EAAIgM,EAAMhM,EAAI,IAAM,GACjEkM,GAAgB7B,IAAY2B,EAAMhM,EAAI,GAAK,KAAO,EAAIgM,EAAMhM,EAAI,IAAM,GACtEkM,GAAgB7B,GAAW2B,EAAMhM,EAAI,GAAK,IAG9C,OAAIgM,EAAM,OAAS,IAAM,EACrBE,EAAeA,EAAa,UAAU,EAAGA,EAAa,OAAS,CAAC,EAAI,IAC7DF,EAAM,OAAS,IAAM,IAC5BE,EAAeA,EAAa,UAAU,EAAGA,EAAa,OAAS,CAAC,EAAI,MAGjEA,CACX,CAKA,SAASC,GAAUpK,EAAO2C,EAAU,CAChC,IAAI0H,EAAY,GAShB,GARIrK,IACAqK,EAAYd,GAAW,KAAKvJ,CAAK,GAOjCA,IAAUqK,IAAc,wBAA0BrK,EAAM,QAAUuJ,GAAW,KAAKvJ,EAAM,MAAM,IAAM,wBAAyB,CAG7H,IAAIgK,EACAM,EAAS7B,GAETzI,aAAiB,aACjBgK,EAAShK,EACTsK,GAAU3B,KAEVqB,EAAShK,EAAM,OAEXqK,IAAc,qBACdC,GAAUzB,GACHwB,IAAc,sBACrBC,GAAUxB,GACHuB,IAAc,6BACrBC,GAAUvB,GACHsB,IAAc,sBACrBC,GAAUtB,GACHqB,IAAc,uBACrBC,GAAUpB,GACHmB,IAAc,sBACrBC,GAAUrB,GACHoB,IAAc,uBACrBC,GAAUnB,GACHkB,IAAc,wBACrBC,GAAUlB,GACHiB,IAAc,wBACrBC,GAAUjB,GAEV1G,EAAS,IAAI,MAAM,oCAAoC,CAAC,GAIhEA,EAAS2H,EAASJ,GAAeF,CAAM,CAAC,CAC5C,SAAWK,IAAc,gBAAiB,CAEtC,IAAIE,EAAa,IAAI,WAErBA,EAAW,OAAS,UAAY,CAE5B,IAAIC,EAAMjC,GAAmBvI,EAAM,KAAO,IAAMkK,GAAe,KAAK,MAAM,EAE1EvH,EAAS8F,GAAoBG,GAAY4B,CAAG,CAChD,EAEAD,EAAW,kBAAkBvK,CAAK,CACtC,KACI,IAAI,CACA2C,EAAS,KAAK,UAAU3C,CAAK,CAAC,CAClC,OAASxC,EAAP,CACE,QAAQ,MAAM,8CAA+CwC,CAAK,EAElE2C,EAAS,KAAMnF,CAAC,CACpB,CAER,CAUA,SAASiN,GAAYzK,EAAO,CAIxB,GAAIA,EAAM,UAAU,EAAG0I,EAAwB,IAAMD,GACjD,OAAO,KAAK,MAAMzI,CAAK,EAM3B,IAAIyJ,EAAmBzJ,EAAM,UAAUsJ,EAA6B,EAChEoB,EAAO1K,EAAM,UAAU0I,GAA0BY,EAA6B,EAE9EqB,EAGJ,GAAID,IAAS9B,IAAaJ,GAAuB,KAAKiB,CAAgB,EAAG,CACrE,IAAImB,EAAUnB,EAAiB,MAAMjB,EAAsB,EAC3DmC,EAAWC,EAAQ,GACnBnB,EAAmBA,EAAiB,UAAUmB,EAAQ,GAAG,MAAM,CACnE,CACA,IAAIZ,EAASR,GAAeC,CAAgB,EAI5C,OAAQiB,EAAM,CACV,KAAK/B,GACD,OAAOqB,EACX,KAAKpB,GACD,OAAOxG,EAAW,CAAC4H,CAAM,EAAG,CAAE,KAAMW,CAAS,CAAC,EAClD,KAAK9B,GACD,OAAO,IAAI,UAAUmB,CAAM,EAC/B,KAAKlB,GACD,OAAO,IAAI,WAAWkB,CAAM,EAChC,KAAKjB,GACD,OAAO,IAAI,kBAAkBiB,CAAM,EACvC,KAAKhB,GACD,OAAO,IAAI,WAAWgB,CAAM,EAChC,KAAKd,GACD,OAAO,IAAI,YAAYc,CAAM,EACjC,KAAKf,GACD,OAAO,IAAI,WAAWe,CAAM,EAChC,KAAKb,GACD,OAAO,IAAI,YAAYa,CAAM,EACjC,KAAKZ,GACD,OAAO,IAAI,aAAaY,CAAM,EAClC,KAAKX,GACD,OAAO,IAAI,aAAaW,CAAM,EAClC,QACI,MAAM,IAAI,MAAM,gBAAkBU,CAAI,CAC9C,CACJ,CAEA,IAAIG,GAAwB,CACxB,UAAWT,GACX,YAAaK,GACb,eAAgBjB,GAChB,eAAgBU,EACpB,EAYA,SAASY,GAAcrN,EAAG0G,EAAQxB,EAAUE,EAAe,CACvDpF,EAAE,WAAW,8BAAgC0G,EAAO,UAAY,+CAAqD,CAAC,EAAGxB,EAAUE,CAAa,CACpJ,CAIA,SAASkI,GAAevE,EAAS,CAC7B,IAAIrG,EAAO,KACPgE,EAAS,CACT,GAAI,IACR,EAEA,GAAIqC,EACA,QAASvI,KAAKuI,EACVrC,EAAOlG,GAAK,OAAOuI,EAAQvI,IAAO,SAAWuI,EAAQvI,GAAG,SAAS,EAAIuI,EAAQvI,GAIrF,IAAI+M,EAAgB,IAAIvI,EAAU,SAAU1B,EAASC,EAAQ,CAGzD,GAAI,CACAmD,EAAO,GAAK,aAAaA,EAAO,KAAM,OAAOA,EAAO,OAAO,EAAGA,EAAO,YAAaA,EAAO,IAAI,CACjG,OAAS3G,EAAP,CACE,OAAOwD,EAAOxD,CAAC,CACnB,CAGA2G,EAAO,GAAG,YAAY,SAAU1G,EAAG,CAC/BqN,GAAcrN,EAAG0G,EAAQ,UAAY,CACjChE,EAAK,QAAUgE,EACfpD,EAAQ,CACZ,EAAG,SAAUtD,EAAG+C,EAAO,CACnBQ,EAAOR,CAAK,CAChB,CAAC,CACL,EAAGQ,CAAM,CACb,CAAC,EAED,OAAAmD,EAAO,WAAa0G,GACbG,CACX,CAEA,SAASC,GAAcxN,EAAG0G,EAAQ+G,EAAcC,EAAMxI,EAAUE,EAAe,CAC3EpF,EAAE,WAAWyN,EAAcC,EAAMxI,EAAU,SAAUlF,EAAG+C,EAAO,CACvDA,EAAM,OAASA,EAAM,WACrB/C,EAAE,WAAW,iEAAuE,CAAC0G,EAAO,SAAS,EAAG,SAAU1G,EAAG2N,EAAS,CACrHA,EAAQ,KAAK,OAOdvI,EAAcpF,EAAG+C,CAAK,EAJtBsK,GAAcrN,EAAG0G,EAAQ,UAAY,CACjC1G,EAAE,WAAWyN,EAAcC,EAAMxI,EAAUE,CAAa,CAC5D,EAAGA,CAAa,CAIxB,EAAGA,CAAa,EAEhBA,EAAcpF,EAAG+C,CAAK,CAE9B,EAAGqC,CAAa,CACpB,CAEA,SAASwI,GAAUtI,EAAKJ,EAAU,CAC9B,IAAIxC,EAAO,KAEX4C,EAAMD,EAAaC,CAAG,EAEtB,IAAIlD,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1B,IAAIgE,EAAShE,EAAK,QAClBgE,EAAO,GAAG,YAAY,SAAU1G,EAAG,CAC/BwN,GAAcxN,EAAG0G,EAAQ,iBAAmBA,EAAO,UAAY,yBAA0B,CAACpB,CAAG,EAAG,SAAUtF,EAAG2N,EAAS,CAClH,IAAIhL,EAASgL,EAAQ,KAAK,OAASA,EAAQ,KAAK,KAAK,CAAC,EAAE,MAAQ,KAI5DhL,IACAA,EAAS+D,EAAO,WAAW,YAAY/D,CAAM,GAGjDW,EAAQX,CAAM,CAClB,EAAG,SAAU3C,EAAG+C,EAAO,CACnBQ,EAAOR,CAAK,CAChB,CAAC,CACL,CAAC,CACL,CAAC,EAAE,MAASQ,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,SAASyL,GAAUpE,EAAUvE,EAAU,CACnC,IAAIxC,EAAO,KAEPN,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1B,IAAIgE,EAAShE,EAAK,QAElBgE,EAAO,GAAG,YAAY,SAAU1G,EAAG,CAC/BwN,GAAcxN,EAAG0G,EAAQ,iBAAmBA,EAAO,UAAW,CAAC,EAAG,SAAU1G,EAAG2N,EAAS,CAIpF,QAHIG,EAAOH,EAAQ,KACf3H,EAAS8H,EAAK,OAETtN,EAAI,EAAGA,EAAIwF,EAAQxF,IAAK,CAC7B,IAAIuN,GAAOD,EAAK,KAAKtN,CAAC,EAClBmC,GAASoL,GAAK,MAYlB,GARIpL,KACAA,GAAS+D,EAAO,WAAW,YAAY/D,EAAM,GAGjDA,GAAS8G,EAAS9G,GAAQoL,GAAK,IAAKvN,EAAI,CAAC,EAIrCmC,KAAW,OAAQ,CACnBW,EAAQX,EAAM,EACd,MACJ,CACJ,CAEAW,EAAQ,CACZ,EAAG,SAAUtD,EAAG+C,EAAO,CACnBQ,EAAOR,CAAK,CAChB,CAAC,CACL,CAAC,CACL,CAAC,EAAE,MAASQ,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,SAAS4L,GAAS1I,EAAK/C,EAAO2C,EAAU+I,EAAa,CACjD,IAAIvL,EAAO,KAEX4C,EAAMD,EAAaC,CAAG,EAEtB,IAAIlD,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAItBH,IAAU,SACVA,EAAQ,MAIZ,IAAI2L,EAAgB3L,EAEhBmE,EAAShE,EAAK,QAClBgE,EAAO,WAAW,UAAUnE,EAAO,SAAUA,EAAOQ,EAAO,CACnDA,EACAQ,EAAOR,CAAK,EAEZ2D,EAAO,GAAG,YAAY,SAAU1G,EAAG,CAC/BwN,GAAcxN,EAAG0G,EAAQ,0BAA4BA,EAAO,UAAY,8BAAoC,CAACpB,EAAK/C,CAAK,EAAG,UAAY,CAClIe,EAAQ4K,CAAa,CACzB,EAAG,SAAUlO,GAAG+C,GAAO,CACnBQ,EAAOR,EAAK,CAChB,CAAC,CACL,EAAG,SAAUoL,EAAU,CAGnB,GAAIA,EAAS,OAASA,EAAS,UAAW,CAQtC,GAAIF,EAAc,EAAG,CACjB3K,EAAQ0K,GAAS,MAAMtL,EAAM,CAAC4C,EAAK4I,EAAehJ,EAAU+I,EAAc,CAAC,CAAC,CAAC,EAC7E,MACJ,CACA1K,EAAO4K,CAAQ,CACnB,CACJ,CAAC,CAET,CAAC,CACL,CAAC,EAAE,MAAS5K,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,SAASgM,GAAU9I,EAAK/C,EAAO2C,EAAU,CACrC,OAAO8I,GAAS,MAAM,KAAM,CAAC1I,EAAK/C,EAAO2C,EAAU,CAAC,CAAC,CACzD,CAEA,SAASmJ,GAAa/I,EAAKJ,EAAU,CACjC,IAAIxC,EAAO,KAEX4C,EAAMD,EAAaC,CAAG,EAEtB,IAAIlD,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1B,IAAIgE,EAAShE,EAAK,QAClBgE,EAAO,GAAG,YAAY,SAAU1G,EAAG,CAC/BwN,GAAcxN,EAAG0G,EAAQ,eAAiBA,EAAO,UAAY,iBAAkB,CAACpB,CAAG,EAAG,UAAY,CAC9FhC,EAAQ,CACZ,EAAG,SAAUtD,EAAG+C,EAAO,CACnBQ,EAAOR,CAAK,CAChB,CAAC,CACL,CAAC,CACL,CAAC,EAAE,MAASQ,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAIA,SAASkM,GAAQpJ,EAAU,CACvB,IAAIxC,EAAO,KAEPN,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1B,IAAIgE,EAAShE,EAAK,QAClBgE,EAAO,GAAG,YAAY,SAAU1G,EAAG,CAC/BwN,GAAcxN,EAAG0G,EAAQ,eAAiBA,EAAO,UAAW,CAAC,EAAG,UAAY,CACxEpD,EAAQ,CACZ,EAAG,SAAUtD,EAAG+C,EAAO,CACnBQ,EAAOR,CAAK,CAChB,CAAC,CACL,CAAC,CACL,CAAC,EAAE,MAASQ,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAIA,SAASmM,GAASrJ,EAAU,CACxB,IAAIxC,EAAO,KAEPN,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1B,IAAIgE,EAAShE,EAAK,QAClBgE,EAAO,GAAG,YAAY,SAAU1G,EAAG,CAE/BwN,GAAcxN,EAAG0G,EAAQ,+BAAiCA,EAAO,UAAW,CAAC,EAAG,SAAU1G,EAAG2N,EAAS,CAClG,IAAIhL,EAASgL,EAAQ,KAAK,KAAK,CAAC,EAAE,EAClCrK,EAAQX,CAAM,CAClB,EAAG,SAAU3C,EAAG+C,EAAO,CACnBQ,EAAOR,CAAK,CAChB,CAAC,CACL,CAAC,CACL,CAAC,EAAE,MAASQ,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CASA,SAASoM,GAAMvO,EAAGiF,EAAU,CACxB,IAAIxC,EAAO,KAEPN,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1B,IAAIgE,EAAShE,EAAK,QAClBgE,EAAO,GAAG,YAAY,SAAU1G,EAAG,CAC/BwN,GAAcxN,EAAG0G,EAAQ,mBAAqBA,EAAO,UAAY,wBAAyB,CAACzG,EAAI,CAAC,EAAG,SAAUD,EAAG2N,EAAS,CACrH,IAAIhL,EAASgL,EAAQ,KAAK,OAASA,EAAQ,KAAK,KAAK,CAAC,EAAE,IAAM,KAC9DrK,EAAQX,CAAM,CAClB,EAAG,SAAU3C,EAAG+C,EAAO,CACnBQ,EAAOR,CAAK,CAChB,CAAC,CACL,CAAC,CACL,CAAC,EAAE,MAASQ,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,SAASqM,GAAOvJ,EAAU,CACtB,IAAIxC,EAAO,KAEPN,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnDb,EAAK,MAAM,EAAE,KAAK,UAAY,CAC1B,IAAIgE,EAAShE,EAAK,QAClBgE,EAAO,GAAG,YAAY,SAAU1G,EAAG,CAC/BwN,GAAcxN,EAAG0G,EAAQ,mBAAqBA,EAAO,UAAW,CAAC,EAAG,SAAU1G,EAAG2N,EAAS,CAGtF,QAFI1D,EAAO,CAAC,EAEHzJ,EAAI,EAAGA,EAAImN,EAAQ,KAAK,OAAQnN,IACrCyJ,EAAK,KAAK0D,EAAQ,KAAK,KAAKnN,CAAC,EAAE,GAAG,EAGtC8C,EAAQ2G,CAAI,CAChB,EAAG,SAAUjK,EAAG+C,EAAO,CACnBQ,EAAOR,CAAK,CAChB,CAAC,CACL,CAAC,CACL,CAAC,EAAE,MAASQ,CAAM,CACtB,CAAC,EAED,OAAA0B,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAIA,SAASsM,GAAiBrH,EAAI,CAC1B,OAAO,IAAIrC,EAAU,SAAU1B,EAASC,EAAQ,CAC5C8D,EAAG,YAAY,SAAUrH,EAAG,CACxBA,EAAE,WAAW,8FAAoG,CAAC,EAAG,SAAUA,EAAG2N,EAAS,CAGvI,QAFIgB,EAAa,CAAC,EAETnO,EAAI,EAAGA,EAAImN,EAAQ,KAAK,OAAQnN,IACrCmO,EAAW,KAAKhB,EAAQ,KAAK,KAAKnN,CAAC,EAAE,IAAI,EAG7C8C,EAAQ,CACJ,GAAI+D,EACJ,WAAYsH,CAChB,CAAC,CACL,EAAG,SAAU3O,EAAG+C,EAAO,CACnBQ,EAAOR,CAAK,CAChB,CAAC,CACL,EAAG,SAAUoL,EAAU,CACnB5K,EAAO4K,CAAQ,CACnB,CAAC,CACL,CAAC,CACL,CAEA,SAASS,GAAe7F,EAAS7D,EAAU,CACvCA,EAAWK,EAAY,MAAM,KAAM,SAAS,EAE5C,IAAI4E,EAAgB,KAAK,OAAO,EAChCpB,EAAU,OAAOA,GAAY,YAAcA,GAAW,CAAC,EAClDA,EAAQ,OACTA,EAAQ,KAAOA,EAAQ,MAAQoB,EAAc,KAC7CpB,EAAQ,UAAYA,EAAQ,WAAaoB,EAAc,WAG3D,IAAIzH,EAAO,KACPN,EACJ,OAAK2G,EAAQ,KAGT3G,EAAU,IAAI4C,EAAU,SAAU1B,EAAS,CACvC,IAAI+D,EACA0B,EAAQ,OAASoB,EAAc,KAE/B9C,EAAK3E,EAAK,QAAQ,GAElB2E,EAAK,aAAa0B,EAAQ,KAAM,GAAI,GAAI,CAAC,EAGxCA,EAAQ,UAITzF,EAAQ,CACJ,GAAI+D,EACJ,WAAY,CAAC0B,EAAQ,SAAS,CAClC,CAAC,EALDzF,EAAQoL,GAAiBrH,CAAE,CAAC,CAOpC,CAAC,EAAE,KAAK,SAAUwH,EAAe,CAC7B,OAAO,IAAI7J,EAAU,SAAU1B,EAASC,EAAQ,CAC5CsL,EAAc,GAAG,YAAY,SAAU7O,EAAG,CACtC,SAAS8O,EAAUC,GAAW,CAC1B,OAAO,IAAI/J,EAAU,SAAU1B,GAASC,GAAQ,CAC5CvD,EAAE,WAAW,wBAA0B+O,GAAW,CAAC,EAAG,UAAY,CAC9DzL,GAAQ,CACZ,EAAG,SAAUtD,GAAG+C,GAAO,CACnBQ,GAAOR,EAAK,CAChB,CAAC,CACL,CAAC,CACL,CAGA,QADIiM,EAAa,CAAC,EACTxO,EAAI,EAAGe,EAAMsN,EAAc,WAAW,OAAQrO,EAAIe,EAAKf,IAC5DwO,EAAW,KAAKF,EAAUD,EAAc,WAAWrO,EAAE,CAAC,EAG1DwE,EAAU,IAAIgK,CAAU,EAAE,KAAK,UAAY,CACvC1L,EAAQ,CACZ,CAAC,EAAE,MAAS,SAAUvD,GAAG,CACrBwD,EAAOxD,EAAC,CACZ,CAAC,CACL,EAAG,SAAUoO,EAAU,CACnB5K,EAAO4K,CAAQ,CACnB,CAAC,CACL,CAAC,CACL,CAAC,EA/CD/L,EAAU4C,EAAU,OAAO,mBAAmB,EAkDlDC,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,IAAI6M,EAAgB,CAChB,QAAS,gBACT,aAAc3B,GACd,SAAU1C,GAAc,EACxB,QAASiD,GACT,QAASD,GACT,QAASQ,GACT,WAAYC,GACZ,MAAOC,GACP,OAAQC,GACR,IAAKC,GACL,KAAMC,GACN,aAAcG,EAClB,EAEA,SAASM,GAAsB,CAC3B,GAAI,CACA,OAAO,OAAO,aAAiB,KAAe,YAAa,cAE3D,CAAC,CAAC,aAAa,OACnB,OAASnP,EAAP,CACE,MAAO,EACX,CACJ,CAEA,SAASoP,EAAcpG,EAASqG,EAAe,CAC3C,IAAIC,EAAYtG,EAAQ,KAAO,IAE/B,OAAIA,EAAQ,YAAcqG,EAAc,YACpCC,GAAatG,EAAQ,UAAY,KAE9BsG,CACX,CAGA,SAASC,GAA4B,CACjC,IAAIC,EAAsB,4BAE1B,GAAI,CACA,oBAAa,QAAQA,EAAqB,EAAI,EAC9C,aAAa,WAAWA,CAAmB,EAEpC,EACX,OAASxP,EAAP,CACE,MAAO,EACX,CACJ,CAMA,SAASyP,GAAwB,CAC7B,MAAO,CAACF,EAA0B,GAAK,aAAa,OAAS,CACjE,CAGA,SAASG,EAAe1G,EAAS,CAC7B,IAAIrG,EAAO,KACPgE,EAAS,CAAC,EACd,GAAIqC,EACA,QAASvI,KAAKuI,EACVrC,EAAOlG,GAAKuI,EAAQvI,GAM5B,OAFAkG,EAAO,UAAYyI,EAAcpG,EAASrG,EAAK,cAAc,EAExD8M,EAAsB,GAI3B9M,EAAK,QAAUgE,EACfA,EAAO,WAAa0G,GAEbpI,EAAU,QAAQ,GANdA,EAAU,OAAO,CAOhC,CAIA,SAAS0K,EAAQxK,EAAU,CACvB,IAAIxC,EAAO,KACPN,EAAUM,EAAK,MAAM,EAAE,KAAK,UAAY,CAGxC,QAFI2M,EAAY3M,EAAK,QAAQ,UAEpBlC,EAAI,aAAa,OAAS,EAAGA,GAAK,EAAGA,IAAK,CAC/C,IAAI8E,EAAM,aAAa,IAAI9E,CAAC,EAExB8E,EAAI,QAAQ+J,CAAS,IAAM,GAC3B,aAAa,WAAW/J,CAAG,CAEnC,CACJ,CAAC,EAED,OAAAL,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAKA,SAASuN,GAAUrK,EAAKJ,EAAU,CAC9B,IAAIxC,EAAO,KAEX4C,EAAMD,EAAaC,CAAG,EAEtB,IAAIlD,EAAUM,EAAK,MAAM,EAAE,KAAK,UAAY,CACxC,IAAIgE,EAAShE,EAAK,QACdC,EAAS,aAAa,QAAQ+D,EAAO,UAAYpB,CAAG,EAMxD,OAAI3C,IACAA,EAAS+D,EAAO,WAAW,YAAY/D,CAAM,GAG1CA,CACX,CAAC,EAED,OAAAsC,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAGA,SAASwN,GAAUnG,EAAUvE,EAAU,CACnC,IAAIxC,EAAO,KAEPN,EAAUM,EAAK,MAAM,EAAE,KAAK,UAAY,CAcxC,QAbIgE,EAAShE,EAAK,QACd2M,EAAY3I,EAAO,UACnBmJ,EAAkBR,EAAU,OAC5BrJ,EAAS,aAAa,OAQtB0D,EAAkB,EAEblJ,EAAI,EAAGA,EAAIwF,EAAQxF,IAAK,CAC7B,IAAI8E,EAAM,aAAa,IAAI9E,CAAC,EAC5B,GAAI8E,EAAI,QAAQ+J,CAAS,IAAM,EAG/B,KAAI9M,EAAQ,aAAa,QAAQ+C,CAAG,EAYpC,GANI/C,IACAA,EAAQmE,EAAO,WAAW,YAAYnE,CAAK,GAG/CA,EAAQkH,EAASlH,EAAO+C,EAAI,UAAUuK,CAAe,EAAGnG,GAAiB,EAErEnH,IAAU,OACV,OAAOA,EAEf,CACJ,CAAC,EAED,OAAA0C,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAGA,SAAS0N,GAAM7P,EAAGiF,EAAU,CACxB,IAAIxC,EAAO,KACPN,EAAUM,EAAK,MAAM,EAAE,KAAK,UAAY,CACxC,IAAIgE,EAAShE,EAAK,QACdC,EACJ,GAAI,CACAA,EAAS,aAAa,IAAI1C,CAAC,CAC/B,OAAS8C,EAAP,CACEJ,EAAS,IACb,CAGA,OAAIA,IACAA,EAASA,EAAO,UAAU+D,EAAO,UAAU,MAAM,GAG9C/D,CACX,CAAC,EAED,OAAAsC,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,SAAS2N,GAAO7K,EAAU,CACtB,IAAIxC,EAAO,KACPN,EAAUM,EAAK,MAAM,EAAE,KAAK,UAAY,CAKxC,QAJIgE,EAAShE,EAAK,QACdsD,EAAS,aAAa,OACtBiE,EAAO,CAAC,EAEHzJ,EAAI,EAAGA,EAAIwF,EAAQxF,IAAK,CAC7B,IAAIwP,EAAU,aAAa,IAAIxP,CAAC,EAC5BwP,EAAQ,QAAQtJ,EAAO,SAAS,IAAM,GACtCuD,EAAK,KAAK+F,EAAQ,UAAUtJ,EAAO,UAAU,MAAM,CAAC,CAE5D,CAEA,OAAOuD,CACX,CAAC,EAED,OAAAhF,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAGA,SAAS6N,GAAS/K,EAAU,CACxB,IAAIxC,EAAO,KACPN,EAAUM,EAAK,KAAK,EAAE,KAAK,SAAUuH,EAAM,CAC3C,OAAOA,EAAK,MAChB,CAAC,EAED,OAAAhF,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAGA,SAAS8N,GAAa5K,EAAKJ,EAAU,CACjC,IAAIxC,EAAO,KAEX4C,EAAMD,EAAaC,CAAG,EAEtB,IAAIlD,EAAUM,EAAK,MAAM,EAAE,KAAK,UAAY,CACxC,IAAIgE,EAAShE,EAAK,QAClB,aAAa,WAAWgE,EAAO,UAAYpB,CAAG,CAClD,CAAC,EAED,OAAAL,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAMA,SAAS+N,GAAU7K,EAAK/C,EAAO2C,EAAU,CACrC,IAAIxC,EAAO,KAEX4C,EAAMD,EAAaC,CAAG,EAEtB,IAAIlD,EAAUM,EAAK,MAAM,EAAE,KAAK,UAAY,CAGpCH,IAAU,SACVA,EAAQ,MAIZ,IAAI2L,EAAgB3L,EAEpB,OAAO,IAAIyC,EAAU,SAAU1B,EAASC,EAAQ,CAC5C,IAAImD,EAAShE,EAAK,QAClBgE,EAAO,WAAW,UAAUnE,EAAO,SAAUA,EAAOQ,EAAO,CACvD,GAAIA,EACAQ,EAAOR,CAAK,MAEZ,IAAI,CACA,aAAa,QAAQ2D,EAAO,UAAYpB,EAAK/C,CAAK,EAClDe,EAAQ4K,CAAa,CACzB,OAASnO,EAAP,EAGMA,EAAE,OAAS,sBAAwBA,EAAE,OAAS,+BAC9CwD,EAAOxD,CAAC,EAEZwD,EAAOxD,CAAC,CACZ,CAER,CAAC,CACL,CAAC,CACL,CAAC,EAED,OAAAkF,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,SAASgO,GAAerH,EAAS7D,EAAU,CAIvC,GAHAA,EAAWK,EAAY,MAAM,KAAM,SAAS,EAE5CwD,EAAU,OAAOA,GAAY,YAAcA,GAAW,CAAC,EACnD,CAACA,EAAQ,KAAM,CACf,IAAIoB,EAAgB,KAAK,OAAO,EAChCpB,EAAQ,KAAOA,EAAQ,MAAQoB,EAAc,KAC7CpB,EAAQ,UAAYA,EAAQ,WAAaoB,EAAc,SAC3D,CAEA,IAAIzH,EAAO,KACPN,EACJ,OAAK2G,EAAQ,KAGT3G,EAAU,IAAI4C,EAAU,SAAU1B,EAAS,CAClCyF,EAAQ,UAGTzF,EAAQ6L,EAAcpG,EAASrG,EAAK,cAAc,CAAC,EAFnDY,EAAQyF,EAAQ,KAAO,GAAG,CAIlC,CAAC,EAAE,KAAK,SAAUsG,EAAW,CACzB,QAAS7O,EAAI,aAAa,OAAS,EAAGA,GAAK,EAAGA,IAAK,CAC/C,IAAI8E,EAAM,aAAa,IAAI9E,CAAC,EAExB8E,EAAI,QAAQ+J,CAAS,IAAM,GAC3B,aAAa,WAAW/J,CAAG,CAEnC,CACJ,CAAC,EAhBDlD,EAAU4C,EAAU,OAAO,mBAAmB,EAmBlDC,EAAgB7C,EAAS8C,CAAQ,EAC1B9C,CACX,CAEA,IAAIiO,GAAsB,CACtB,QAAS,sBACT,aAAcZ,EACd,SAAUP,EAAoB,EAC9B,QAASU,GACT,QAASD,GACT,QAASQ,GACT,WAAYD,GACZ,MAAOR,EACP,OAAQO,GACR,IAAKH,GACL,KAAMC,GACN,aAAcK,EAClB,EAEIE,GAAY,SAAmBC,EAAGC,EAAG,CACrC,OAAOD,IAAMC,GAAK,OAAOD,GAAM,UAAY,OAAOC,GAAM,UAAY,MAAMD,CAAC,GAAK,MAAMC,CAAC,CAC3F,EAEIC,GAAW,SAAkBC,EAAOC,EAAe,CAGnD,QAFIpP,EAAMmP,EAAM,OACZlQ,EAAI,EACDA,EAAIe,GAAK,CACZ,GAAI+O,GAAUI,EAAMlQ,GAAImQ,CAAa,EACjC,MAAO,GAEXnQ,GACJ,CAEA,MAAO,EACX,EAEIoQ,GAAU,MAAM,SAAW,SAAUC,EAAK,CAC1C,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAG,IAAM,gBACnD,EAIIC,GAAiB,CAAC,EAElBC,GAAgB,CAAC,EAEjBC,GAAiB,CACjB,UAAWrG,GACX,OAAQsE,EACR,aAAcoB,EAClB,EAEIY,GAAqB,CAACD,GAAe,UAAU,QAASA,GAAe,OAAO,QAASA,GAAe,aAAa,OAAO,EAE1HE,GAAwB,CAAC,cAAc,EAEvCC,GAAiB,CAAC,QAAS,UAAW,UAAW,MAAO,OAAQ,SAAU,aAAc,SAAS,EAAE,OAAOD,EAAqB,EAE/HE,GAAgB,CAChB,YAAa,GACb,OAAQH,GAAmB,MAAM,EACjC,KAAM,cAGN,KAAM,QACN,UAAW,gBACX,QAAS,CACb,EAEA,SAASI,GAAcC,EAAqBC,EAAe,CACvDD,EAAoBC,GAAiB,UAAY,CAC7C,IAAIC,EAAQ,UACZ,OAAOF,EAAoB,MAAM,EAAE,KAAK,UAAY,CAChD,OAAOA,EAAoBC,GAAe,MAAMD,EAAqBE,CAAK,CAC9E,CAAC,CACL,CACJ,CAEA,SAASC,IAAS,CACd,QAASjR,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACvC,IAAIqQ,EAAM,UAAUrQ,GAEpB,GAAIqQ,EACA,QAASa,KAAQb,EACTA,EAAI,eAAea,CAAI,IACnBd,GAAQC,EAAIa,EAAK,EACjB,UAAU,GAAGA,GAAQb,EAAIa,GAAM,MAAM,EAErC,UAAU,GAAGA,GAAQb,EAAIa,GAK7C,CAEA,OAAO,UAAU,EACrB,CAEA,IAAIC,GAAc,UAAY,CAC1B,SAASA,EAAY5I,EAAS,CAC1B5E,EAAgB,KAAMwN,CAAW,EAEjC,QAASC,KAAiBZ,GACtB,GAAIA,GAAe,eAAeY,CAAa,EAAG,CAC9C,IAAIC,EAASb,GAAeY,GACxBE,EAAaD,EAAO,QACxB,KAAKD,GAAiBE,EAEjBhB,GAAegB,IAIhB,KAAK,aAAaD,CAAM,CAEhC,CAGJ,KAAK,eAAiBJ,GAAO,CAAC,EAAGL,EAAa,EAC9C,KAAK,QAAUK,GAAO,CAAC,EAAG,KAAK,eAAgB1I,CAAO,EACtD,KAAK,WAAa,KAClB,KAAK,YAAc,KACnB,KAAK,OAAS,GACd,KAAK,QAAU,KAEf,KAAK,6BAA6B,EAClC,KAAK,UAAU,KAAK,QAAQ,MAAM,EAAE,MAAS,UAAY,CAAC,CAAC,CAC/D,CAQA,OAAA4I,EAAY,UAAU,OAAS,SAAgB5I,EAAS,CAIpD,IAAK,OAAOA,EAAY,IAAc,YAAc7E,EAAQ6E,CAAO,KAAO,SAAU,CAGhF,GAAI,KAAK,OACL,OAAO,IAAI,MAAM,sDAA2D,EAGhF,QAASvI,KAAKuI,EAAS,CAKnB,GAJIvI,IAAM,cACNuI,EAAQvI,GAAKuI,EAAQvI,GAAG,QAAQ,MAAO,GAAG,GAG1CA,IAAM,WAAa,OAAOuI,EAAQvI,IAAO,SACzC,OAAO,IAAI,MAAM,oCAAoC,EAGzD,KAAK,QAAQA,GAAKuI,EAAQvI,EAC9B,CAIA,MAAI,WAAYuI,GAAWA,EAAQ,OACxB,KAAK,UAAU,KAAK,QAAQ,MAAM,EAGtC,EACX,KAAO,QAAI,OAAOA,GAAY,SACnB,KAAK,QAAQA,GAEb,KAAK,OAEpB,EAMA4I,EAAY,UAAU,aAAe,SAAsBI,EAAc7M,EAAUE,EAAe,CAC9F,IAAIhD,EAAU,IAAI4C,EAAU,SAAU1B,EAASC,EAAQ,CACnD,GAAI,CACA,IAAIuO,EAAaC,EAAa,QAC1BC,EAAkB,IAAI,MAAM,sFAA2F,EAI3H,GAAI,CAACD,EAAa,QAAS,CACvBxO,EAAOyO,CAAe,EACtB,MACJ,CAGA,QADIC,EAAgBd,GAAe,OAAO,cAAc,EAC/C3Q,EAAI,EAAGe,EAAM0Q,EAAc,OAAQzR,EAAIe,EAAKf,IAAK,CACtD,IAAI0R,GAAmBD,EAAczR,GAIjC2R,GAAa,CAAC1B,GAASS,GAAuBgB,EAAgB,EAClE,IAAKC,IAAcJ,EAAaG,MAAsB,OAAOH,EAAaG,KAAsB,WAAY,CACxG3O,EAAOyO,CAAe,EACtB,MACJ,CACJ,CAEA,IAAII,GAA0B,UAAmC,CAU7D,QATIC,GAA8B,SAAqCC,GAAY,CAC/E,OAAO,UAAY,CACf,IAAIvP,GAAQ,IAAI,MAAM,UAAYuP,GAAa,2CAA2C,EACtFlQ,GAAU4C,EAAU,OAAOjC,EAAK,EACpC,OAAAkC,EAAgB7C,GAAS,UAAU,UAAU,OAAS,EAAE,EACjDA,EACX,CACJ,EAESmQ,GAAK,EAAGC,GAAOtB,GAAsB,OAAQqB,GAAKC,GAAMD,KAAM,CACnE,IAAIE,GAAuBvB,GAAsBqB,IAC5CR,EAAaU,MACdV,EAAaU,IAAwBJ,GAA4BI,EAAoB,EAE7F,CACJ,EAEAL,GAAwB,EAExB,IAAIM,GAAmB,SAA0BC,GAAS,CAClD7B,GAAegB,IACf,QAAQ,KAAK,kCAAoCA,CAAU,EAE/DhB,GAAegB,GAAcC,EAC7BhB,GAAce,GAAca,GAI5BrP,EAAQ,CACZ,EAEI,aAAcyO,EACVA,EAAa,UAAY,OAAOA,EAAa,UAAa,WAC1DA,EAAa,SAAS,EAAE,KAAKW,GAAkBnP,CAAM,EAErDmP,GAAiB,CAAC,CAACX,EAAa,QAAQ,EAG5CW,GAAiB,EAAI,CAE7B,OAAS3S,GAAP,CACEwD,EAAOxD,EAAC,CACZ,CACJ,CAAC,EAED,OAAAoF,EAAoB/C,EAAS8C,EAAUE,CAAa,EAC7ChD,CACX,EAEAuP,EAAY,UAAU,OAAS,UAAkB,CAC7C,OAAO,KAAK,SAAW,IAC3B,EAEAA,EAAY,UAAU,UAAY,SAAmBG,EAAY5M,EAAUE,EAAe,CACtF,IAAIwN,EAAmB9B,GAAegB,GAAc9M,EAAU,QAAQ8L,GAAegB,EAAW,EAAI9M,EAAU,OAAO,IAAI,MAAM,mBAAmB,CAAC,EAEnJ,OAAAG,EAAoByN,EAAkB1N,EAAUE,CAAa,EACtDwN,CACX,EAEAjB,EAAY,UAAU,cAAgB,SAAuBzM,EAAU,CACnE,IAAI2N,EAAoB7N,EAAU,QAAQoI,EAAqB,EAC/D,OAAAjI,EAAoB0N,EAAmB3N,CAAQ,EACxC2N,CACX,EAEAlB,EAAY,UAAU,MAAQ,SAAezM,EAAU,CACnD,IAAIxC,EAAO,KAEPN,EAAUM,EAAK,WAAW,KAAK,UAAY,CAC3C,OAAIA,EAAK,SAAW,OAChBA,EAAK,OAASA,EAAK,YAAY,GAG5BA,EAAK,MAChB,CAAC,EAED,OAAAyC,EAAoB/C,EAAS8C,EAAUA,CAAQ,EACxC9C,CACX,EAEAuP,EAAY,UAAU,UAAY,SAAmBmB,EAAS5N,EAAUE,EAAe,CACnF,IAAI1C,EAAO,KAENkO,GAAQkC,CAAO,IAChBA,EAAU,CAACA,CAAO,GAGtB,IAAIC,EAAmB,KAAK,qBAAqBD,CAAO,EAExD,SAASE,GAAoB,CACzBtQ,EAAK,QAAQ,OAASA,EAAK,OAAO,CACtC,CAEA,SAASuQ,EAAqBpB,EAAQ,CAClC,OAAAnP,EAAK,QAAQmP,CAAM,EACnBmB,EAAkB,EAElBtQ,EAAK,OAASA,EAAK,aAAaA,EAAK,OAAO,EACrCA,EAAK,MAChB,CAEA,SAASwQ,EAAWH,EAAkB,CAClC,OAAO,UAAY,CACf,IAAII,EAAqB,EAEzB,SAASC,IAAoB,CACzB,KAAOD,EAAqBJ,EAAiB,QAAQ,CACjD,IAAIjB,GAAaiB,EAAiBI,GAClC,OAAAA,IAEAzQ,EAAK,QAAU,KACfA,EAAK,OAAS,KAEPA,EAAK,UAAUoP,EAAU,EAAE,KAAKmB,CAAoB,EAAE,MAASG,EAAiB,CAC3F,CAEAJ,EAAkB,EAClB,IAAIjQ,GAAQ,IAAI,MAAM,oCAAoC,EAC1D,OAAAL,EAAK,WAAasC,EAAU,OAAOjC,EAAK,EACjCL,EAAK,UAChB,CAEA,OAAO0Q,GAAkB,CAC7B,CACJ,CAKA,IAAIC,EAAmB,KAAK,aAAe,KAAO,KAAK,WAAW,MAAS,UAAY,CACnF,OAAOrO,EAAU,QAAQ,CAC7B,CAAC,EAAIA,EAAU,QAAQ,EAEvB,YAAK,WAAaqO,EAAiB,KAAK,UAAY,CAChD,IAAIvB,EAAaiB,EAAiB,GAClC,OAAArQ,EAAK,QAAU,KACfA,EAAK,OAAS,KAEPA,EAAK,UAAUoP,CAAU,EAAE,KAAK,SAAUD,EAAQ,CACrDnP,EAAK,QAAUmP,EAAO,QACtBmB,EAAkB,EAClBtQ,EAAK,6BAA6B,EAClCA,EAAK,YAAcwQ,EAAWH,CAAgB,CAClD,CAAC,CACL,CAAC,EAAE,MAAS,UAAY,CACpBC,EAAkB,EAClB,IAAIjQ,EAAQ,IAAI,MAAM,oCAAoC,EAC1D,OAAAL,EAAK,WAAasC,EAAU,OAAOjC,CAAK,EACjCL,EAAK,UAChB,CAAC,EAEDyC,EAAoB,KAAK,WAAYD,EAAUE,CAAa,EACrD,KAAK,UAChB,EAEAuM,EAAY,UAAU,SAAW,SAAkBG,EAAY,CAC3D,MAAO,CAAC,CAACf,GAAce,EAC3B,EAEAH,EAAY,UAAU,QAAU,SAAiB2B,EAA6B,CAC1E7B,GAAO,KAAM6B,CAA2B,CAC5C,EAEA3B,EAAY,UAAU,qBAAuB,SAA8BmB,EAAS,CAEhF,QADIC,EAAmB,CAAC,EACfvS,EAAI,EAAGe,EAAMuR,EAAQ,OAAQtS,EAAIe,EAAKf,IAAK,CAChD,IAAIsR,EAAagB,EAAQtS,GACrB,KAAK,SAASsR,CAAU,GACxBiB,EAAiB,KAAKjB,CAAU,CAExC,CACA,OAAOiB,CACX,EAEApB,EAAY,UAAU,6BAA+B,UAAwC,CAKzF,QAASnR,EAAI,EAAGe,EAAM4P,GAAe,OAAQ3Q,EAAIe,EAAKf,IAClD6Q,GAAc,KAAMF,GAAe3Q,EAAE,CAE7C,EAEAmR,EAAY,UAAU,eAAiB,SAAwB5I,EAAS,CACpE,OAAO,IAAI4I,EAAY5I,CAAO,CAClC,EAEO4I,CACX,EAAE,EAME4B,GAAiB,IAAI5B,GAEzBhS,EAAO,QAAU4T,EAEjB,EAAE,CAAC,EAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CACrB,CAAC,mQC/vFD,IAAsBC,GAAtB,KAAiC,GAAjCC,GAAA,YAAAD,GAOaC,GAAA,WAAa,wBAE1B,IAAaC,GAAb,cAA0BF,EAAW,CAEnC,YAAYG,EAAS,CAEnB,GADA,MAAK,EACD,CAACF,GAAA,WAAW,KAAKE,CAAC,EAAG,MAAM,IAAI,MAAM,0CAA0C,EACnF,KAAK,IAAMA,CACb,CAEA,UAAQ,CACN,OAAO,KAAK,GACd,CAEA,UAAQ,CACN,MAAO,EACT,CAEA,IAAI,OAAK,CACP,MAAO,CAAC,CAAC,KAAK,KAAM,CAAC,CACvB,GAlBFF,GAAA,KAAAC,GAqBA,IAAaE,GAAb,cAA2BJ,EAAW,CAKpC,YAAYK,EAAkC,CAC5C,MAAK,EACL,KAAK,OAAS,OAAOA,GAAS,SAAW,CAACA,CAAI,EAAIA,CACpD,CAEA,UAAQ,CACN,OAAO,KAAK,GACd,CAEA,UAAQ,CACN,GAAI,KAAK,OAAO,OAAS,EAAG,MAAO,GACnC,IAAMC,EAAO,KAAK,OAAO,GACzB,OAAOA,IAAS,IAAMA,IAAS,IACjC,CAEA,IAAI,KAAG,OACL,OAAOC,EAAC,KAAK,QAAI,MAAAA,IAAA,OAAAA,EAAT,KAAK,KAAS,KAAK,OAAO,OAAO,CAACJ,EAAWK,IAAgB,GAAGL,IAAIK,IAAK,EAAE,CACrF,CAEA,IAAI,OAAK,OACP,OAAOD,EAAC,KAAK,UAAM,MAAAA,IAAA,OAAAA,EAAX,KAAK,OAAW,KAAK,OAAO,OAAO,CAACE,EAAkBD,KACxDA,aAAaN,KAAMO,EAAMD,EAAE,MAAQC,EAAMD,EAAE,MAAQ,GAAK,GACrDC,GACN,CAAA,CAAE,CACP,GA7BFR,GAAA,MAAAG,GAwCaH,GAAA,IAAM,IAAIG,GAAM,EAAE,EAI/B,SAAgBM,GAAEC,KAA+BC,EAAe,CAC9D,IAAMP,EAAmB,CAACM,EAAK,EAAE,EAC7BE,EAAI,EACR,KAAOA,EAAID,EAAK,QACdE,GAAWT,EAAMO,EAAKC,EAAE,EACxBR,EAAK,KAAKM,EAAK,EAAEE,EAAE,EAErB,OAAO,IAAIT,GAAMC,CAAI,CACvB,CARAJ,GAAA,EAAAS,GAUA,IAAMK,GAAO,IAAIX,GAAM,GAAG,EAE1B,SAAgBY,GAAIL,KAA+BC,EAA4B,CAC7E,IAAMK,EAAmB,CAACC,GAAcP,EAAK,EAAE,CAAC,EAC5CE,EAAI,EACR,KAAOA,EAAID,EAAK,QACdK,EAAK,KAAKF,EAAI,EACdD,GAAWG,EAAML,EAAKC,EAAE,EACxBI,EAAK,KAAKF,GAAMG,GAAcP,EAAK,EAAEE,EAAE,CAAC,EAE1C,OAAAM,GAASF,CAAI,EACN,IAAIb,GAAMa,CAAI,CACvB,CAVAhB,GAAA,IAAAe,GAYA,SAAgBF,GAAWT,EAAkBe,EAAuB,CAC9DA,aAAehB,GAAOC,EAAK,KAAK,GAAGe,EAAI,MAAM,EACxCA,aAAelB,GAAMG,EAAK,KAAKe,CAAG,EACtCf,EAAK,KAAKgB,GAAYD,CAAG,CAAC,CACjC,CAJAnB,GAAA,WAAAa,GAMA,SAASK,GAASF,EAAgB,CAChC,IAAIJ,EAAI,EACR,KAAOA,EAAII,EAAK,OAAS,GAAG,CAC1B,GAAIA,EAAKJ,KAAOE,GAAM,CACpB,IAAMO,EAAMC,GAAeN,EAAKJ,EAAI,GAAII,EAAKJ,EAAI,EAAE,EACnD,GAAIS,IAAQ,OAAW,CACrBL,EAAK,OAAOJ,EAAI,EAAG,EAAGS,CAAG,EACzB,SAEFL,EAAKJ,KAAO,IAEdA,IAEJ,CAEA,SAASU,GAAeC,EAAaC,EAAW,CAC9C,GAAIA,IAAM,KAAM,OAAOD,EACvB,GAAIA,IAAM,KAAM,OAAOC,EACvB,GAAI,OAAOD,GAAK,SACd,OAAIC,aAAavB,IAAQsB,EAAEA,EAAE,OAAS,KAAO,IAAK,OAC9C,OAAOC,GAAK,SAAiB,GAAGD,EAAE,MAAM,EAAG,EAAE,IAAIC,KACjDA,EAAE,KAAO,IAAYD,EAAE,MAAM,EAAG,EAAE,EAAIC,EAAE,MAAM,CAAC,EACnD,OAEF,GAAI,OAAOA,GAAK,UAAYA,EAAE,KAAO,KAAO,EAAED,aAAatB,IAAO,MAAO,IAAIsB,IAAIC,EAAE,MAAM,CAAC,GAE5F,CAEA,SAAgBC,GAAUC,EAAUC,EAAQ,CAC1C,OAAOA,EAAG,SAAQ,EAAKD,EAAKA,EAAG,SAAQ,EAAKC,EAAKZ,KAAMW,IAAKC,GAC9D,CAFA3B,GAAA,UAAAyB,GAKA,SAASL,GAAYQ,EAA+C,CAClE,OAAO,OAAOA,GAAK,UAAY,OAAOA,GAAK,WAAaA,IAAM,KAC1DA,EACAX,GAAc,MAAM,QAAQW,CAAC,EAAIA,EAAE,KAAK,GAAG,EAAIA,CAAC,CACtD,CAEA,SAAgBC,GAAUD,EAAU,CAClC,OAAO,IAAIzB,GAAMc,GAAcW,CAAC,CAAC,CACnC,CAFA5B,GAAA,UAAA6B,GAIA,SAAgBZ,GAAcW,EAAU,CACtC,OAAO,KAAK,UAAUA,CAAC,EACpB,QAAQ,UAAW,SAAS,EAC5B,QAAQ,UAAW,SAAS,CACjC,CAJA5B,GAAA,cAAAiB,GAMA,SAAgBa,GAAYC,EAA2B,CACrD,OAAO,OAAOA,GAAO,UAAY/B,GAAA,WAAW,KAAK+B,CAAG,EAAI,IAAI5B,GAAM,IAAI4B,GAAK,EAAItB,MAAKsB,IACtF,CAFA/B,GAAA,YAAA8B,GAKA,SAAgBE,GAAiBD,EAA2B,CAC1D,GAAI,OAAOA,GAAO,UAAY/B,GAAA,WAAW,KAAK+B,CAAG,EAC/C,OAAO,IAAI5B,GAAM,GAAG4B,GAAK,EAE3B,MAAM,IAAI,MAAM,iCAAiCA,kCAAoC,CACvF,CALA/B,GAAA,iBAAAgC,GAOA,SAAgBC,GAAWC,EAAU,CACnC,OAAO,IAAI/B,GAAM+B,EAAG,SAAQ,CAAE,CAChC,CAFAlC,GAAA,WAAAiC,gKCrKA,IAAAE,GAAA,KAeMC,GAAN,cAAyB,KAAK,CAE5B,YAAYC,EAAoB,CAC9B,MAAM,uBAAuBA,eAAkB,EAC/C,KAAK,MAAQA,EAAK,KACpB,GAwBUC,IAAZ,SAAYA,EAAc,CACxBA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,UAAA,GAAA,WACF,GAHYA,GAAAC,GAAA,iBAAAA,GAAA,eAAc,CAAA,EAAA,EASbA,GAAA,SAAW,CACtB,MAAO,IAAIJ,GAAA,KAAK,OAAO,EACvB,IAAK,IAAIA,GAAA,KAAK,KAAK,EACnB,IAAK,IAAIA,GAAA,KAAK,KAAK,GAGrB,IAAaK,GAAb,KAAkB,CAKhB,YAAY,CAAC,SAAAC,EAAU,OAAAC,CAAM,EAAkB,CAAA,EAAE,CAJ9B,KAAA,OAA2C,CAAA,EAK5D,KAAK,UAAYD,EACjB,KAAK,QAAUC,CACjB,CAEA,OAAOC,EAA2B,CAChC,OAAOA,aAAwBR,GAAA,KAAOQ,EAAe,KAAK,KAAKA,CAAY,CAC7E,CAEA,KAAKC,EAAc,CACjB,OAAO,IAAIT,GAAA,KAAK,KAAK,SAASS,CAAM,CAAC,CACvC,CAEU,SAASA,EAAc,CAC/B,IAAMC,EAAK,KAAK,OAAOD,IAAW,KAAK,WAAWA,CAAM,EACxD,MAAO,GAAGA,IAASC,EAAG,SACxB,CAEQ,WAAWD,EAAc,SAC/B,KAAIE,GAAAC,EAAA,KAAK,WAAO,MAAAA,IAAA,OAAA,OAAAA,EAAE,aAAS,MAAAD,IAAA,OAAA,OAAAA,EAAE,IAAIF,CAAM,IAAM,KAAK,WAAa,CAAC,KAAK,UAAU,IAAIA,CAAM,EACvF,MAAM,IAAI,MAAM,oBAAoBA,iCAAsC,EAE5E,OAAQ,KAAK,OAAOA,GAAU,CAAC,OAAAA,EAAQ,MAAO,CAAC,CACjD,GA5BFL,GAAA,MAAAC,GAoCA,IAAaQ,GAAb,cAAoCb,GAAA,IAAI,CAKtC,YAAYS,EAAgBK,EAAe,CACzC,MAAMA,CAAO,EACb,KAAK,OAASL,CAChB,CAEA,SAASM,EAAkB,CAAC,SAAAC,EAAU,UAAAC,CAAS,EAAY,CACzD,KAAK,MAAQF,EACb,KAAK,aAAYf,GAAA,MAAK,IAAIA,GAAA,KAAKgB,CAAQ,KAAKC,IAC9C,GAbFb,GAAA,eAAAS,GAoBA,IAAMK,MAAOlB,GAAA,OAEAmB,GAAb,cAAgCd,EAAK,CAKnC,YAAYe,EAAuB,CACjC,MAAMA,CAAI,EALO,KAAA,QAAuB,CAAA,EAMxC,KAAK,OAASA,EAAK,MACnB,KAAK,KAAOC,GAAAC,GAAA,GAAIF,GAAJ,CAAU,GAAIA,EAAK,MAAQF,GAAOlB,GAAA,GAAG,EACnD,CAEA,KAAG,CACD,OAAO,KAAK,MACd,CAEA,KAAKS,EAAc,CACjB,OAAO,IAAII,GAAeJ,EAAQ,KAAK,SAASA,CAAM,CAAC,CACzD,CAEA,MAAMD,EAAuCO,EAAgB,OAC3D,GAAIA,EAAM,MAAQ,OAAW,MAAM,IAAI,MAAM,sCAAsC,EACnF,IAAMb,EAAO,KAAK,OAAOM,CAAY,EAC/B,CAAC,OAAAC,CAAM,EAAIP,EACXqB,GAAWX,EAAAG,EAAM,OAAG,MAAAH,IAAA,OAAAA,EAAIG,EAAM,IAChCS,EAAK,KAAK,QAAQf,GACtB,GAAIe,EAAI,CACN,IAAMC,EAAQD,EAAG,IAAID,CAAQ,EAC7B,GAAIE,EAAO,OAAOA,OAElBD,EAAK,KAAK,QAAQf,GAAU,IAAI,IAElCe,EAAG,IAAID,EAAUrB,CAAI,EAErB,IAAMwB,EAAI,KAAK,OAAOjB,KAAY,KAAK,OAAOA,GAAU,CAAA,GAClDQ,EAAYS,EAAE,OACpB,OAAAA,EAAET,GAAaF,EAAM,IACrBb,EAAK,SAASa,EAAO,CAAC,SAAUN,EAAQ,UAAAQ,CAAS,CAAC,EAC3Cf,CACT,CAEA,SAASO,EAAgBkB,EAAiB,CACxC,IAAMH,EAAK,KAAK,QAAQf,GACxB,GAAI,EAACe,EACL,OAAOA,EAAG,IAAIG,CAAQ,CACxB,CAEA,UAAUC,EAAiBC,EAAuC,KAAK,QAAO,CAC5E,OAAO,KAAK,cAAcA,EAAS3B,GAAwB,CACzD,GAAIA,EAAK,YAAc,OAAW,MAAM,IAAI,MAAM,kBAAkBA,iBAAoB,EACxF,SAAOF,GAAA,KAAI4B,IAAY1B,EAAK,WAC9B,CAAC,CACH,CAEA,UACE2B,EAAuC,KAAK,QAC5CC,EACAC,EAAiD,CAEjD,OAAO,KAAK,cACVF,EACC3B,GAAwB,CACvB,GAAIA,EAAK,QAAU,OAAW,MAAM,IAAI,MAAM,kBAAkBA,iBAAoB,EACpF,OAAOA,EAAK,MAAM,IACpB,EACA4B,EACAC,CAAO,CAEX,CAEQ,cACNF,EACAG,EACAF,EAA8B,CAAA,EAC9BC,EAAiD,CAEjD,IAAIE,EAAajC,GAAA,IACjB,QAAWS,KAAUoB,EAAQ,CAC3B,IAAML,EAAKK,EAAOpB,GAClB,GAAI,CAACe,EAAI,SACT,IAAMU,EAAWJ,EAAWrB,GAAUqB,EAAWrB,IAAW,IAAI,IAChEe,EAAG,QAAStB,GAAwB,CAClC,GAAIgC,EAAQ,IAAIhC,CAAI,EAAG,OACvBgC,EAAQ,IAAIhC,EAAMC,GAAe,OAAO,EACxC,IAAIgC,EAAIH,EAAU9B,CAAI,EACtB,GAAIiC,EAAG,CACL,IAAMC,EAAM,KAAK,KAAK,IAAMhC,GAAA,SAAS,IAAMA,GAAA,SAAS,MACpD6B,KAAOjC,GAAA,KAAIiC,IAAOG,KAAOlC,OAAUiC,KAAK,KAAK,KAAK,aACxCA,EAAIJ,GAAO,KAAA,OAAPA,EAAU7B,CAAI,EAC5B+B,KAAOjC,GAAA,KAAIiC,IAAOE,IAAI,KAAK,KAAK,SAEhC,OAAM,IAAIlC,GAAWC,CAAI,EAE3BgC,EAAQ,IAAIhC,EAAMC,GAAe,SAAS,CAC5C,CAAC,EAEH,OAAO8B,CACT,GAhGF7B,GAAA,WAAAe,wPCpHA,IAAAkB,GAAA,KACAC,GAAA,KAEAC,GAAA,KAAQ,OAAA,eAAAC,EAAA,IAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAD,GAAA,CAAC,CAAA,CAAA,EAAE,OAAA,eAAAC,EAAA,MAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAD,GAAA,GAAG,CAAA,CAAA,EAAE,OAAA,eAAAC,EAAA,YAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAD,GAAA,SAAS,CAAA,CAAA,EAAE,OAAA,eAAAC,EAAA,MAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAD,GAAA,GAAG,CAAA,CAAA,EAAE,OAAA,eAAAC,EAAA,cAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAD,GAAA,WAAW,CAAA,CAAA,EAAE,OAAA,eAAAC,EAAA,YAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAD,GAAA,SAAS,CAAA,CAAA,EAAE,OAAA,eAAAC,EAAA,aAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAD,GAAA,UAAU,CAAA,CAAA,EAAE,OAAA,eAAAC,EAAA,OAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAD,GAAA,IAAI,CAAA,CAAA,EACxE,IAAAE,GAAA,KAAQ,OAAA,eAAAD,EAAA,QAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAC,GAAA,KAAK,CAAA,CAAA,EAAc,OAAA,eAAAD,EAAA,aAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAC,GAAA,UAAU,CAAA,CAAA,EAAE,OAAA,eAAAD,EAAA,iBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAC,GAAA,cAAc,CAAA,CAAA,EAAkB,OAAA,eAAAD,EAAA,WAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAC,GAAA,QAAQ,CAAA,CAAA,EAQlED,EAAA,UAAY,CACvB,GAAI,IAAIH,GAAA,MAAM,GAAG,EACjB,IAAK,IAAIA,GAAA,MAAM,IAAI,EACnB,GAAI,IAAIA,GAAA,MAAM,GAAG,EACjB,IAAK,IAAIA,GAAA,MAAM,IAAI,EACnB,GAAI,IAAIA,GAAA,MAAM,KAAK,EACnB,IAAK,IAAIA,GAAA,MAAM,KAAK,EACpB,IAAK,IAAIA,GAAA,MAAM,GAAG,EAClB,GAAI,IAAIA,GAAA,MAAM,IAAI,EAClB,IAAK,IAAIA,GAAA,MAAM,IAAI,EACnB,IAAK,IAAIA,GAAA,MAAM,GAAG,GAGpB,IAAeK,GAAf,KAAmB,CAGjB,eAAa,CACX,OAAO,IACT,CAEA,cAAcC,EAAmBC,EAAqB,CACpD,OAAO,IACT,GAOIC,GAAN,cAAkBH,EAAI,CACpB,YAA6BI,EAAgCC,EAAoBC,EAAc,CAC7F,MAAK,EADsB,KAAA,QAAAF,EAAgC,KAAA,KAAAC,EAAoB,KAAA,IAAAC,CAEjF,CAEA,OAAO,CAAC,IAAAC,EAAK,GAAAC,CAAE,EAAY,CACzB,IAAMJ,EAAUG,EAAMX,GAAA,SAAS,IAAM,KAAK,QACpCU,EAAM,KAAK,MAAQ,OAAY,GAAK,MAAM,KAAK,MACrD,MAAO,GAAGF,KAAW,KAAK,OAAOE,KAASE,CAC5C,CAEA,cAAcC,EAAkBC,EAAoB,CAClD,GAAI,EAACD,EAAM,KAAK,KAAK,KACrB,OAAI,KAAK,MAAK,KAAK,IAAME,GAAa,KAAK,IAAKF,EAAOC,CAAS,GACzD,IACT,CAEA,IAAI,OAAK,CACP,OAAO,KAAK,eAAef,GAAA,YAAc,KAAK,IAAI,MAAQ,CAAA,CAC5D,GAGIiB,GAAN,cAAqBZ,EAAI,CACvB,YAAqBa,EAAkBP,EAAgCQ,EAAqB,CAC1F,MAAK,EADc,KAAA,IAAAD,EAAkB,KAAA,IAAAP,EAAgC,KAAA,YAAAQ,CAEvE,CAEA,OAAO,CAAC,GAAAN,CAAE,EAAY,CACpB,MAAO,GAAG,KAAK,SAAS,KAAK,OAASA,CACxC,CAEA,cAAcC,EAAkBC,EAAoB,CAClD,GAAI,OAAK,eAAef,GAAA,MAAQ,CAACc,EAAM,KAAK,IAAI,MAAQ,CAAC,KAAK,aAC9D,YAAK,IAAME,GAAa,KAAK,IAAKF,EAAOC,CAAS,EAC3C,IACT,CAEA,IAAI,OAAK,CACP,IAAMD,EAAQ,KAAK,eAAed,GAAA,KAAO,CAAA,EAAKoB,GAAA,GAAI,KAAK,IAAI,OAC3D,OAAOC,GAAaP,EAAO,KAAK,GAAG,CACrC,GAGIQ,GAAN,cAAuBL,EAAM,CAC3B,YAAYC,EAA4BK,EAAUZ,EAAeQ,EAAqB,CACpF,MAAMD,EAAKP,EAAKQ,CAAW,EADW,KAAA,GAAAI,CAExC,CAEA,OAAO,CAAC,GAAAV,CAAE,EAAY,CACpB,MAAO,GAAG,KAAK,OAAO,KAAK,OAAO,KAAK,OAASA,CAClD,GAGIW,GAAN,cAAoBnB,EAAI,CAEtB,YAAqBoB,EAAW,CAC9B,MAAK,EADc,KAAA,MAAAA,EADZ,KAAA,MAAmB,CAAA,CAG5B,CAEA,OAAO,CAAC,GAAAZ,CAAE,EAAY,CACpB,MAAO,GAAG,KAAK,SAAWA,CAC5B,GAGIa,GAAN,cAAoBrB,EAAI,CAEtB,YAAqBoB,EAAY,CAC/B,MAAK,EADc,KAAA,MAAAA,EADZ,KAAA,MAAmB,CAAA,CAG5B,CAEA,OAAO,CAAC,GAAAZ,CAAE,EAAY,CAEpB,MAAO,QADO,KAAK,MAAQ,IAAI,KAAK,QAAU,MACpBA,CAC5B,GAGIc,GAAN,cAAoBtB,EAAI,CACtB,YAAqBuB,EAAW,CAC9B,MAAK,EADc,KAAA,MAAAA,CAErB,CAEA,OAAO,CAAC,GAAAf,CAAE,EAAY,CACpB,MAAO,SAAS,KAAK,SAAWA,CAClC,CAEA,IAAI,OAAK,CACP,OAAO,KAAK,MAAM,KACpB,GAGIgB,GAAN,cAAsBxB,EAAI,CACxB,YAAoByB,EAAc,CAChC,MAAK,EADa,KAAA,KAAAA,CAEpB,CAEA,OAAO,CAAC,GAAAjB,CAAE,EAAY,CACpB,MAAO,GAAG,KAAK,QAAUA,CAC3B,CAEA,eAAa,CACX,MAAO,GAAG,KAAK,OAAS,KAAO,MACjC,CAEA,cAAcC,EAAkBC,EAAoB,CAClD,YAAK,KAAOC,GAAa,KAAK,KAAMF,EAAOC,CAAS,EAC7C,IACT,CAEA,IAAI,OAAK,CACP,OAAO,KAAK,gBAAgBf,GAAA,YAAc,KAAK,KAAK,MAAQ,CAAA,CAC9D,GAGa+B,GAAf,cAAkC1B,EAAI,CACpC,YAAqB2B,EAAqB,CAAA,EAAE,CAC1C,MAAK,EADc,KAAA,MAAAA,CAErB,CAEA,OAAOC,EAAe,CACpB,OAAO,KAAK,MAAM,OAAO,CAACH,EAAM,IAAMA,EAAO,EAAE,OAAOG,CAAI,EAAG,EAAE,CACjE,CAEA,eAAa,CACX,GAAM,CAAC,MAAAD,CAAK,EAAI,KACZE,EAAIF,EAAM,OACd,KAAOE,KAAK,CACV,IAAM,EAAIF,EAAME,GAAG,cAAa,EAC5B,MAAM,QAAQ,CAAC,EAAGF,EAAM,OAAOE,EAAG,EAAG,GAAG,CAAC,EACpC,EAAGF,EAAME,GAAK,EAClBF,EAAM,OAAOE,EAAG,CAAC,EAExB,OAAOF,EAAM,OAAS,EAAI,KAAO,MACnC,CAEA,cAAclB,EAAkBC,EAAoB,CAClD,GAAM,CAAC,MAAAiB,CAAK,EAAI,KACZE,EAAIF,EAAM,OACd,KAAOE,KAAK,CAEV,IAAMC,EAAIH,EAAME,GACZC,EAAE,cAAcrB,EAAOC,CAAS,IACpCqB,GAActB,EAAOqB,EAAE,KAAK,EAC5BH,EAAM,OAAOE,EAAG,CAAC,GAEnB,OAAOF,EAAM,OAAS,EAAI,KAAO,MACnC,CAEA,IAAI,OAAK,CACP,OAAO,KAAK,MAAM,OAAO,CAAClB,EAAkBqB,IAAME,GAASvB,EAAOqB,EAAE,KAAK,EAAG,CAAA,CAAE,CAChF,GAOaG,GAAf,cAAiCP,EAAU,CACzC,OAAOE,EAAe,CACpB,MAAO,IAAMA,EAAK,GAAK,MAAM,OAAOA,CAAI,EAAI,IAAMA,EAAK,EACzD,GAGIM,GAAN,cAAmBR,EAAU,GAEvBS,GAAN,cAAmBF,EAAS,GACVE,GAAA,KAAO,OAGzB,IAAMC,GAAN,cAAiBH,EAAS,CAGxB,YAAoBI,EAA2BV,EAAmB,CAChE,MAAMA,CAAK,EADO,KAAA,UAAAU,CAEpB,CAEA,OAAOT,EAAe,CACpB,IAAIH,EAAO,MAAM,KAAK,aAAe,MAAM,OAAOG,CAAI,EACtD,OAAI,KAAK,OAAMH,GAAQ,QAAU,KAAK,KAAK,OAAOG,CAAI,GAC/CH,CACT,CAEA,eAAa,CACX,MAAM,cAAa,EACnB,IAAMa,EAAO,KAAK,UAClB,GAAIA,IAAS,GAAM,OAAO,KAAK,MAC/B,IAAIC,EAAI,KAAK,KACb,GAAIA,EAAG,CACL,IAAMC,EAAKD,EAAE,cAAa,EAC1BA,EAAI,KAAK,KAAO,MAAM,QAAQC,CAAE,EAAI,IAAIL,GAAKK,CAAE,EAAKA,EAEtD,GAAID,EACF,OAAID,IAAS,GAAcC,aAAaH,GAAKG,EAAIA,EAAE,MAC/C,KAAK,MAAM,OAAe,KACvB,IAAIH,GAAGK,GAAIH,CAAI,EAAGC,aAAaH,GAAK,CAACG,CAAC,EAAIA,EAAE,KAAK,EAE1D,GAAI,EAAAD,IAAS,IAAS,CAAC,KAAK,MAAM,QAClC,OAAO,IACT,CAEA,cAAc7B,EAAkBC,EAAoB,OAElD,GADA,KAAK,MAAOgC,EAAA,KAAK,QAAI,MAAAA,IAAA,OAAA,OAAAA,EAAE,cAAcjC,EAAOC,CAAS,EACjD,GAAE,MAAM,cAAcD,EAAOC,CAAS,GAAK,KAAK,MACpD,YAAK,UAAYC,GAAa,KAAK,UAAWF,EAAOC,CAAS,EACvD,IACT,CAEA,IAAI,OAAK,CACP,IAAMD,EAAQ,MAAM,MACpB,OAAAO,GAAaP,EAAO,KAAK,SAAS,EAC9B,KAAK,MAAMuB,GAASvB,EAAO,KAAK,KAAK,KAAK,EACvCA,CACT,GA1CgB2B,GAAA,KAAO,KAiDzB,IAAeO,GAAf,cAA2BV,EAAS,GAClBU,GAAA,KAAO,MAGzB,IAAMC,GAAN,cAAsBD,EAAG,CACvB,YAAoBE,EAAe,CACjC,MAAK,EADa,KAAA,UAAAA,CAEpB,CAEA,OAAOjB,EAAe,CACpB,MAAO,OAAO,KAAK,aAAe,MAAM,OAAOA,CAAI,CACrD,CAEA,cAAcnB,EAAkBC,EAAoB,CAClD,GAAI,EAAC,MAAM,cAAcD,EAAOC,CAAS,EACzC,YAAK,UAAYC,GAAa,KAAK,UAAWF,EAAOC,CAAS,EACvD,IACT,CAEA,IAAI,OAAK,CACP,OAAOsB,GAAS,MAAM,MAAO,KAAK,UAAU,KAAK,CACnD,GAGIc,GAAN,cAAuBH,EAAG,CACxB,YACmBvC,EACAC,EACA0C,EACAC,EAAY,CAE7B,MAAK,EALY,KAAA,QAAA5C,EACA,KAAA,KAAAC,EACA,KAAA,KAAA0C,EACA,KAAA,GAAAC,CAGnB,CAEA,OAAOpB,EAAe,CACpB,IAAMxB,EAAUwB,EAAK,IAAMhC,GAAA,SAAS,IAAM,KAAK,QACzC,CAAC,KAAAS,EAAM,KAAA0C,EAAM,GAAAC,CAAE,EAAI,KACzB,MAAO,OAAO5C,KAAWC,KAAQ0C,MAAS1C,KAAQ2C,MAAO3C,OAAY,MAAM,OAAOuB,CAAI,CACxF,CAEA,IAAI,OAAK,CACP,IAAMnB,EAAQO,GAAa,MAAM,MAAO,KAAK,IAAI,EACjD,OAAOA,GAAaP,EAAO,KAAK,EAAE,CACpC,GAGIwC,GAAN,cAAsBN,EAAG,CACvB,YACmBO,EACA9C,EACAC,EACT8C,EAAc,CAEtB,MAAK,EALY,KAAA,KAAAD,EACA,KAAA,QAAA9C,EACA,KAAA,KAAAC,EACT,KAAA,SAAA8C,CAGV,CAEA,OAAOvB,EAAe,CACpB,MAAO,OAAO,KAAK,WAAW,KAAK,QAAQ,KAAK,QAAQ,KAAK,YAAc,MAAM,OAAOA,CAAI,CAC9F,CAEA,cAAcnB,EAAkBC,EAAoB,CAClD,GAAI,EAAC,MAAM,cAAcD,EAAOC,CAAS,EACzC,YAAK,SAAWC,GAAa,KAAK,SAAUF,EAAOC,CAAS,EACrD,IACT,CAEA,IAAI,OAAK,CACP,OAAOsB,GAAS,MAAM,MAAO,KAAK,SAAS,KAAK,CAClD,GAGIoB,GAAN,cAAmBnB,EAAS,CAE1B,YAAmB5B,EAAmBgD,EAAmBC,EAAe,CACtE,MAAK,EADY,KAAA,KAAAjD,EAAmB,KAAA,KAAAgD,EAAmB,KAAA,MAAAC,CAEzD,CAEA,OAAO1B,EAAe,CAEpB,MAAO,GADQ,KAAK,MAAQ,SAAW,cACX,KAAK,QAAQ,KAAK,QAAU,MAAM,OAAOA,CAAI,CAC3E,GARgBwB,GAAA,KAAO,OAWzB,IAAMG,GAAN,cAAqB7B,EAAU,CAG7B,OAAOE,EAAe,CACpB,MAAO,UAAY,MAAM,OAAOA,CAAI,CACtC,GAJgB2B,GAAA,KAAO,SAOzB,IAAMC,GAAN,cAAkBvB,EAAS,CAIzB,OAAOL,EAAe,CACpB,IAAIH,EAAO,MAAQ,MAAM,OAAOG,CAAI,EACpC,OAAI,KAAK,QAAOH,GAAQ,KAAK,MAAM,OAAOG,CAAI,GAC1C,KAAK,UAASH,GAAQ,KAAK,QAAQ,OAAOG,CAAI,GAC3CH,CACT,CAEA,eAAa,SACX,aAAM,cAAa,GACnBiB,EAAA,KAAK,SAAK,MAAAA,IAAA,QAAAA,EAAE,cAAa,GACzBe,EAAA,KAAK,WAAO,MAAAA,IAAA,QAAAA,EAAE,cAAa,EACpB,IACT,CAEA,cAAchD,EAAkBC,EAAoB,SAClD,aAAM,cAAcD,EAAOC,CAAS,GACpCgC,EAAA,KAAK,SAAK,MAAAA,IAAA,QAAAA,EAAE,cAAcjC,EAAOC,CAAS,GAC1C+C,EAAA,KAAK,WAAO,MAAAA,IAAA,QAAAA,EAAE,cAAchD,EAAOC,CAAS,EACrC,IACT,CAEA,IAAI,OAAK,CACP,IAAMD,EAAQ,MAAM,MACpB,OAAI,KAAK,OAAOuB,GAASvB,EAAO,KAAK,MAAM,KAAK,EAC5C,KAAK,SAASuB,GAASvB,EAAO,KAAK,QAAQ,KAAK,EAC7CA,CACT,GAOIiD,GAAN,cAAoBzB,EAAS,CAE3B,YAAqBV,EAAW,CAC9B,MAAK,EADc,KAAA,MAAAA,CAErB,CAEA,OAAOK,EAAe,CACpB,MAAO,SAAS,KAAK,SAAW,MAAM,OAAOA,CAAI,CACnD,GAPgB8B,GAAA,KAAO,QAUzB,IAAMC,GAAN,cAAsB1B,EAAS,CAE7B,OAAOL,EAAe,CACpB,MAAO,UAAY,MAAM,OAAOA,CAAI,CACtC,GAHgB+B,GAAA,KAAO,UAiCzB,IAAaC,GAAb,KAAoB,CASlB,YAAYC,EAAsBjC,EAAuB,CAAA,EAAE,CANlD,KAAA,QAA0B,CAAA,EAElB,KAAA,aAAyB,CAAA,EACzB,KAAA,WAAwB,CAAA,EAIvC,KAAK,KAAOkC,GAAA/C,GAAA,GAAIa,GAAJ,CAAU,GAAIA,EAAK,MAAQ;EAAO,EAAE,GAChD,KAAK,UAAYiC,EACjB,KAAK,OAAS,IAAIjE,GAAA,MAAM,CAAC,OAAQiE,CAAQ,CAAC,EAC1C,KAAK,OAAS,CAAC,IAAI3B,EAAM,CAC3B,CAEA,UAAQ,CACN,OAAO,KAAK,MAAM,OAAO,KAAK,IAAI,CACpC,CAGA,KAAK6B,EAAc,CACjB,OAAO,KAAK,OAAO,KAAKA,CAAM,CAChC,CAGA,UAAUA,EAAc,CACtB,OAAO,KAAK,UAAU,KAAKA,CAAM,CACnC,CAGA,WAAWC,EAAuCC,EAAgB,CAChE,IAAM5D,EAAO,KAAK,UAAU,MAAM2D,EAAcC,CAAK,EAErD,OADW,KAAK,QAAQ5D,EAAK,UAAY,KAAK,QAAQA,EAAK,QAAU,IAAI,MACtE,IAAIA,CAAI,EACJA,CACT,CAEA,cAAc0D,EAAgBG,EAAiB,CAC7C,OAAO,KAAK,UAAU,SAASH,EAAQG,CAAQ,CACjD,CAIA,UAAUC,EAAe,CACvB,OAAO,KAAK,UAAU,UAAUA,EAAW,KAAK,OAAO,CACzD,CAEA,WAAS,CACP,OAAO,KAAK,UAAU,UAAU,KAAK,OAAO,CAC9C,CAEQ,KACN/D,EACAgE,EACA9D,EACA+D,EAAkB,CAElB,IAAMhE,EAAO,KAAK,OAAO,OAAO+D,CAAY,EAC5C,OAAI9D,IAAQ,QAAa+D,IAAU,KAAK,WAAWhE,EAAK,KAAOC,GAC/D,KAAK,UAAU,IAAIH,GAAIC,EAASC,EAAMC,CAAG,CAAC,EACnCD,CACT,CAGA,MAAM+D,EAA6B9D,EAAegE,EAAmB,CACnE,OAAO,KAAK,KAAK1E,GAAA,SAAS,MAAOwE,EAAc9D,EAAKgE,CAAS,CAC/D,CAGA,IAAIF,EAA6B9D,EAAgBgE,EAAmB,CAClE,OAAO,KAAK,KAAK1E,GAAA,SAAS,IAAKwE,EAAc9D,EAAKgE,CAAS,CAC7D,CAGA,IAAIF,EAA6B9D,EAAgBgE,EAAmB,CAClE,OAAO,KAAK,KAAK1E,GAAA,SAAS,IAAKwE,EAAc9D,EAAKgE,CAAS,CAC7D,CAGA,OAAOzD,EAAWP,EAAeQ,EAAqB,CACpD,OAAO,KAAK,UAAU,IAAIF,GAAOC,EAAKP,EAAKQ,CAAW,CAAC,CACzD,CAGA,IAAID,EAAWP,EAAa,CAC1B,OAAO,KAAK,UAAU,IAAIW,GAASJ,EAAKf,EAAA,UAAU,IAAKQ,CAAG,CAAC,CAC7D,CAGA,KAAKiE,EAAmB,CACtB,OAAI,OAAOA,GAAK,WAAYA,EAAC,EACpBA,IAAM5E,GAAA,KAAK,KAAK,UAAU,IAAI6B,GAAQ+C,CAAC,CAAC,EAC1C,IACT,CAGA,UAAUC,EAA+C,CACvD,IAAM/C,EAAmB,CAAC,GAAG,EAC7B,OAAW,CAACgD,EAAKR,CAAK,IAAKO,EACrB/C,EAAK,OAAS,GAAGA,EAAK,KAAK,GAAG,EAClCA,EAAK,KAAKgD,CAAG,GACTA,IAAQR,GAAS,KAAK,KAAK,OAC7BxC,EAAK,KAAK,GAAG,KACb9B,GAAA,YAAW8B,EAAMwC,CAAK,GAG1B,OAAAxC,EAAK,KAAK,GAAG,EACN,IAAI9B,GAAA,MAAM8B,CAAI,CACvB,CAGA,GAAGY,EAA2BqC,EAAkBC,EAAgB,CAG9D,GAFA,KAAK,WAAW,IAAIvC,GAAGC,CAAS,CAAC,EAE7BqC,GAAYC,EACd,KAAK,KAAKD,CAAQ,EAAE,KAAI,EAAG,KAAKC,CAAQ,EAAE,MAAK,UACtCD,EACT,KAAK,KAAKA,CAAQ,EAAE,MAAK,UAChBC,EACT,MAAM,IAAI,MAAM,0CAA0C,EAE5D,OAAO,IACT,CAGA,OAAOtC,EAAyB,CAC9B,OAAO,KAAK,UAAU,IAAID,GAAGC,CAAS,CAAC,CACzC,CAGA,MAAI,CACF,OAAO,KAAK,UAAU,IAAIF,EAAM,CAClC,CAGA,OAAK,CACH,OAAO,KAAK,cAAcC,GAAID,EAAI,CACpC,CAEQ,KAAKyC,EAAWC,EAAe,CACrC,YAAK,WAAWD,CAAI,EAChBC,GAAS,KAAK,KAAKA,CAAO,EAAE,OAAM,EAC/B,IACT,CAGA,IAAIhC,EAAiBgC,EAAe,CAClC,OAAO,KAAK,KAAK,IAAIjC,GAAQC,CAAS,EAAGgC,CAAO,CAClD,CAGA,SACET,EACArB,EACAC,EACA6B,EACAzE,EAAgB,KAAK,KAAK,IAAMR,GAAA,SAAS,IAAMA,GAAA,SAAS,IAAG,CAE3D,IAAMS,EAAO,KAAK,OAAO,OAAO+D,CAAY,EAC5C,OAAO,KAAK,KAAK,IAAItB,GAAS1C,EAASC,EAAM0C,EAAMC,CAAE,EAAG,IAAM6B,EAAQxE,CAAI,CAAC,CAC7E,CAGA,MACE+D,EACAjB,EACA0B,EACAzE,EAAgBR,GAAA,SAAS,MAAK,CAE9B,IAAMS,EAAO,KAAK,OAAO,OAAO+D,CAAY,EAC5C,GAAI,KAAK,KAAK,IAAK,CACjB,IAAMU,EAAM3B,aAAoBxD,GAAA,KAAOwD,EAAW,KAAK,IAAI,OAAQA,CAAQ,EAC3E,OAAO,KAAK,SAAS,KAAM,KAAGxD,GAAA,KAAImF,WAAejD,GAAK,CACpD,KAAK,IAAIxB,KAAMV,GAAA,KAAImF,KAAOjD,IAAI,EAC9BgD,EAAQxE,CAAI,CACd,CAAC,EAEH,OAAO,KAAK,KAAK,IAAI4C,GAAQ,KAAM7C,EAASC,EAAM8C,CAAQ,EAAG,IAAM0B,EAAQxE,CAAI,CAAC,CAClF,CAIA,MACE+D,EACAW,EACAF,EACAzE,EAAgB,KAAK,KAAK,IAAMR,GAAA,SAAS,IAAMA,GAAA,SAAS,MAAK,CAE7D,GAAI,KAAK,KAAK,cACZ,OAAO,KAAK,MAAMwE,KAAczE,GAAA,iBAAgBoF,KAAQF,CAAO,EAEjE,IAAMxE,EAAO,KAAK,OAAO,OAAO+D,CAAY,EAC5C,OAAO,KAAK,KAAK,IAAInB,GAAQ,KAAM7C,EAASC,EAAM0E,CAAG,EAAG,IAAMF,EAAQxE,CAAI,CAAC,CAC7E,CAGA,QAAM,CACJ,OAAO,KAAK,cAAcsC,EAAG,CAC/B,CAGA,MAAMvB,EAAW,CACf,OAAO,KAAK,UAAU,IAAID,GAAMC,CAAK,CAAC,CACxC,CAGA,MAAMA,EAAY,CAChB,OAAO,KAAK,UAAU,IAAIC,GAAMD,CAAK,CAAC,CACxC,CAGA,OAAO6C,EAAuB,CAC5B,IAAMW,EAAO,IAAIrB,GAGjB,GAFA,KAAK,WAAWqB,CAAI,EACpB,KAAK,KAAKX,CAAK,EACXW,EAAK,MAAM,SAAW,EAAG,MAAM,IAAI,MAAM,wCAAwC,EACrF,OAAO,KAAK,cAAcrB,EAAM,CAClC,CAGA,IAAIyB,EAAgBC,EAA+BC,EAAmB,CACpE,GAAI,CAACD,GAAa,CAACC,EAAa,MAAM,IAAI,MAAM,8CAA8C,EAC9F,IAAMN,EAAO,IAAIpB,GAGjB,GAFA,KAAK,WAAWoB,CAAI,EACpB,KAAK,KAAKI,CAAO,EACbC,EAAW,CACb,IAAM1D,EAAQ,KAAK,KAAK,GAAG,EAC3B,KAAK,UAAYqD,EAAK,MAAQ,IAAIlB,GAAMnC,CAAK,EAC7C0D,EAAU1D,CAAK,EAEjB,OAAI2D,IACF,KAAK,UAAYN,EAAK,QAAU,IAAIjB,GACpC,KAAK,KAAKuB,CAAW,GAEhB,KAAK,cAAcxB,GAAOC,EAAO,CAC1C,CAGA,MAAMpC,EAAW,CACf,OAAO,KAAK,UAAU,IAAID,GAAMC,CAAK,CAAC,CACxC,CAGA,MAAM4D,EAAcC,EAAkB,CACpC,YAAK,aAAa,KAAK,KAAK,OAAO,MAAM,EACrCD,GAAM,KAAK,KAAKA,CAAI,EAAE,SAASC,CAAS,EACrC,IACT,CAGA,SAASA,EAAkB,CACzB,IAAMC,EAAM,KAAK,aAAa,IAAG,EACjC,GAAIA,IAAQ,OAAW,MAAM,IAAI,MAAM,sCAAsC,EAC7E,IAAMC,EAAU,KAAK,OAAO,OAASD,EACrC,GAAIC,EAAU,GAAMF,IAAc,QAAaE,IAAYF,EACzD,MAAM,IAAI,MAAM,mCAAmCE,QAAcF,YAAoB,EAEvF,YAAK,OAAO,OAASC,EACd,IACT,CAGA,KAAKhF,EAAYgD,EAAa1D,GAAA,IAAK2D,EAAiBiC,EAAgB,CAClE,YAAK,WAAW,IAAInC,GAAK/C,EAAMgD,EAAMC,CAAK,CAAC,EACvCiC,GAAU,KAAK,KAAKA,CAAQ,EAAE,QAAO,EAClC,IACT,CAGA,SAAO,CACL,OAAO,KAAK,cAAcnC,EAAI,CAChC,CAEA,SAAStB,EAAI,EAAC,CACZ,KAAOA,KAAM,GACX,KAAK,MAAM,cAAa,EACxB,KAAK,MAAM,cAAc,KAAK,MAAM,MAAO,KAAK,UAAU,CAE9D,CAEQ,UAAU8C,EAAc,CAC9B,YAAK,UAAU,MAAM,KAAKA,CAAI,EACvB,IACT,CAEQ,WAAWA,EAAoB,CACrC,KAAK,UAAU,MAAM,KAAKA,CAAI,EAC9B,KAAK,OAAO,KAAKA,CAAI,CACvB,CAEQ,cAAcY,EAAsBC,EAAqB,CAC/D,IAAM,EAAI,KAAK,UACf,GAAI,aAAaD,GAAOC,GAAM,aAAaA,EACzC,YAAK,OAAO,IAAG,EACR,KAET,MAAM,IAAI,MAAM,0BAA0BA,EAAK,GAAGD,EAAG,QAAQC,EAAG,OAASD,EAAG,OAAO,CACrF,CAEQ,UAAUZ,EAAe,CAC/B,IAAM9C,EAAI,KAAK,UACf,GAAI,EAAEA,aAAaM,IACjB,MAAM,IAAI,MAAM,8BAA8B,EAEhD,YAAK,UAAYN,EAAE,KAAO8C,EACnB,IACT,CAEA,IAAY,OAAK,CACf,OAAO,KAAK,OAAO,EACrB,CAEA,IAAY,WAAS,CACnB,IAAMpC,EAAK,KAAK,OAChB,OAAOA,EAAGA,EAAG,OAAS,EACxB,CAEA,IAAY,UAAUoC,EAAgB,CACpC,IAAMpC,EAAK,KAAK,OAChBA,EAAGA,EAAG,OAAS,GAAKoC,CACtB,GAjUF9E,EAAA,QAAA8D,GAwUA,SAAS5B,GAASvB,EAAkBsC,EAAe,CACjD,QAAWjB,KAAKiB,EAAMtC,EAAMqB,IAAMrB,EAAMqB,IAAM,IAAMiB,EAAKjB,IAAM,GAC/D,OAAOrB,CACT,CAEA,SAASO,GAAaP,EAAkBsC,EAAc,CACpD,OAAOA,aAAgBpD,GAAA,YAAcqC,GAASvB,EAAOsC,EAAK,KAAK,EAAItC,CACrE,CAGA,SAASE,GAAa+E,EAAgBjF,EAAkBC,EAAoB,CAC1E,GAAIgF,aAAgB/F,GAAA,KAAM,OAAOgG,EAAYD,CAAI,EACjD,GAAI,CAACE,EAAYF,CAAI,EAAG,OAAOA,EAC/B,OAAO,IAAI/F,GAAA,MACT+F,EAAK,OAAO,OAAO,CAACG,EAAmBtB,KACjCA,aAAa5E,GAAA,OAAM4E,EAAIoB,EAAYpB,CAAC,GACpCA,aAAa5E,GAAA,MAAOkG,EAAM,KAAK,GAAGtB,EAAE,MAAM,EACzCsB,EAAM,KAAKtB,CAAC,EACVsB,GACN,CAAA,CAAE,CAAC,EAGR,SAASF,EAAY7D,EAAO,CAC1B,IAAMyC,EAAI7D,EAAUoB,EAAE,KACtB,OAAIyC,IAAM,QAAa9D,EAAMqB,EAAE,OAAS,EAAUA,GAClD,OAAOrB,EAAMqB,EAAE,KACRyC,EACT,CAEA,SAASqB,EAAYrD,EAAW,CAC9B,OACEA,aAAa5C,GAAA,OACb4C,EAAE,OAAO,KACNgC,GAAMA,aAAa5E,GAAA,MAAQc,EAAM8D,EAAE,OAAS,GAAK7D,EAAU6D,EAAE,OAAS,MAAS,CAGtF,CACF,CAEA,SAASxC,GAActB,EAAkBsC,EAAe,CACtD,QAAWjB,KAAKiB,EAAMtC,EAAMqB,IAAMrB,EAAMqB,IAAM,IAAMiB,EAAKjB,IAAM,EACjE,CAGA,SAAgBW,GAAIqD,EAAkB,CACpC,OAAO,OAAOA,GAAK,WAAa,OAAOA,GAAK,UAAYA,IAAM,KAAO,CAACA,KAAInG,GAAA,MAAKoG,GAAID,CAAC,GACtF,CAFAhG,EAAA,IAAA2C,GAIA,IAAMuD,GAAUC,GAAQnG,EAAA,UAAU,GAAG,EAGrC,SAAgBoG,MAAO7C,EAAY,CACjC,OAAOA,EAAK,OAAO2C,EAAO,CAC5B,CAFAlG,EAAA,IAAAoG,GAIA,IAAMC,GAASF,GAAQnG,EAAA,UAAU,EAAE,EAGnC,SAAgBsG,MAAM/C,EAAY,CAChC,OAAOA,EAAK,OAAO8C,EAAM,CAC3B,CAFArG,EAAA,GAAAsG,GAMA,SAASH,GAAQ/E,EAAQ,CACvB,MAAO,CAAC4E,EAAGO,IAAOP,IAAMnG,GAAA,IAAM0G,EAAIA,IAAM1G,GAAA,IAAMmG,KAAInG,GAAA,KAAIoG,GAAID,CAAC,KAAK5E,KAAM6E,GAAIM,CAAC,GAC7E,CAEA,SAASN,GAAID,EAAO,CAClB,OAAOA,aAAanG,GAAA,KAAOmG,KAAInG,GAAA,MAAKmG,IACtC,kYC7zBA,IAAAQ,GAAA,IACAC,GAAA,KAIA,SAAgBC,GAAkCC,EAAQ,CACxD,IAAMC,EAA0B,CAAA,EAChC,QAAWC,KAAQF,EAAKC,EAAKC,GAAQ,GACrC,OAAOD,CACT,CAJAE,EAAA,OAAAJ,GAMA,SAAgBK,GAAkBC,EAAeC,EAAiB,CAChE,OAAI,OAAOA,GAAU,UAAkBA,EACnC,OAAO,KAAKA,CAAM,EAAE,SAAW,EAAU,IAC7CC,GAAkBF,EAAIC,CAAM,EACrB,CAACE,GAAeF,EAAQD,EAAG,KAAK,MAAM,GAAG,EAClD,CALAF,EAAA,kBAAAC,GAOA,SAAgBG,GAAkBF,EAAeC,EAAoBD,EAAG,OAAM,CAC5E,GAAM,CAAC,KAAAI,EAAM,KAAAC,CAAI,EAAIL,EAErB,GADI,CAACI,EAAK,cACN,OAAOH,GAAW,UAAW,OACjC,IAAMK,EAAQD,EAAK,MAAM,SACzB,QAAWE,KAAON,EACXK,EAAMC,IAAMC,GAAgBR,EAAI,qBAAqBO,IAAM,CAEpE,CARAT,EAAA,kBAAAI,GAUA,SAAgBC,GACdF,EACAK,EAAyC,CAEzC,GAAI,OAAOL,GAAU,UAAW,MAAO,CAACA,EACxC,QAAWM,KAAON,EAAQ,GAAIK,EAAMC,GAAM,MAAO,GACjD,MAAO,EACT,CAPAT,EAAA,eAAAK,GASA,SAAgBM,GAAqBR,EAAmBS,EAAsB,CAC5E,GAAI,OAAOT,GAAU,UAAW,MAAO,CAACA,EACxC,QAAWM,KAAON,EAAQ,GAAIM,IAAQ,QAAUG,EAAM,IAAIH,GAAM,MAAO,GACvE,MAAO,EACT,CAJAT,EAAA,qBAAAW,GAMA,SAAgBE,GACd,CAAC,aAAAC,EAAc,WAAAC,CAAU,EACzBZ,EACAa,EACAC,EAAsB,CAEtB,GAAI,CAACA,EAAO,CACV,GAAI,OAAOd,GAAU,UAAY,OAAOA,GAAU,UAAW,OAAOA,EACpE,GAAI,OAAOA,GAAU,SAAU,SAAOT,GAAA,KAAIS,IAE5C,SAAOT,GAAA,KAAIoB,IAAeC,OAAarB,GAAA,aAAYsB,CAAO,GAC5D,CAXAhB,EAAA,eAAAa,GAaA,SAAgBK,GAAiBC,EAAW,CAC1C,OAAOC,GAAoB,mBAAmBD,CAAG,CAAC,CACpD,CAFAnB,EAAA,iBAAAkB,GAIA,SAAgBG,GAAeF,EAAoB,CACjD,OAAO,mBAAmBG,GAAkBH,CAAG,CAAC,CAClD,CAFAnB,EAAA,eAAAqB,GAIA,SAAgBC,GAAkBH,EAAoB,CACpD,OAAI,OAAOA,GAAO,SAAiB,GAAGA,IAC/BA,EAAI,QAAQ,KAAM,IAAI,EAAE,QAAQ,MAAO,IAAI,CACpD,CAHAnB,EAAA,kBAAAsB,GAKA,SAAgBF,GAAoBD,EAAW,CAC7C,OAAOA,EAAI,QAAQ,MAAO,GAAG,EAAE,QAAQ,MAAO,GAAG,CACnD,CAFAnB,EAAA,oBAAAoB,GAIA,SAAgBG,GAAYC,EAAaC,EAAiB,CACxD,GAAI,MAAM,QAAQD,CAAE,EAClB,QAAWE,KAAKF,EAAIC,EAAEC,CAAC,OAEvBD,EAAED,CAAE,CAER,CANAxB,EAAA,SAAAuB,GAwBA,SAASI,GAA4C,CACnD,WAAAC,EACA,YAAAC,EACA,YAAAC,EACA,aAAAC,CAAY,EACS,CACrB,MAAO,CAACC,EAAKC,EAAMC,EAAIC,IAAU,CAC/B,IAAMC,EACJF,IAAO,OACHD,EACAC,aAAcxC,GAAA,MACbuC,aAAgBvC,GAAA,KAAOkC,EAAWI,EAAKC,EAAMC,CAAE,EAAIL,EAAYG,EAAKC,EAAMC,CAAE,EAAGA,GAChFD,aAAgBvC,GAAA,MACfmC,EAAYG,EAAKE,EAAID,CAAI,EAAGA,GAC7BH,EAAYG,EAAMC,CAAE,EAC1B,OAAOC,IAAWzC,GAAA,MAAQ,EAAE0C,aAAe1C,GAAA,MAAQqC,EAAaC,EAAKI,CAAG,EAAIA,CAC9E,CACF,CAOapC,EAAA,eAAiC,CAC5C,MAAO2B,GAAmB,CACxB,WAAY,CAACK,EAAKC,EAAMC,IACtBF,EAAI,MAAGtC,GAAA,KAAIwC,iBAAkBD,kBAAsB,IAAK,CACtDD,EAAI,MACFtC,GAAA,KAAIuC,aACJ,IAAMD,EAAI,OAAOE,EAAI,EAAI,EACzB,IAAMF,EAAI,OAAOE,KAAIxC,GAAA,KAAIwC,SAAU,EAAE,QAAKxC,GAAA,mBAAkBwC,MAAOD,IAAO,CAAC,CAE/E,CAAC,EACH,YAAa,CAACD,EAAKC,EAAMC,IACvBF,EAAI,MAAGtC,GAAA,KAAIwC,aAAe,IAAK,CACzBD,IAAS,GACXD,EAAI,OAAOE,EAAI,EAAI,GAEnBF,EAAI,OAAOE,KAAIxC,GAAA,KAAIwC,SAAU,EAC7BG,GAAaL,EAAKE,EAAID,CAAI,EAE9B,CAAC,EACH,YAAa,CAACA,EAAMC,IAAQD,IAAS,GAAO,GAAOK,MAAA,GAAIL,GAASC,GAChE,aAAcK,GACf,EACD,MAAOZ,GAAmB,CACxB,WAAY,CAACK,EAAKC,EAAMC,IACtBF,EAAI,MAAGtC,GAAA,KAAIwC,iBAAkBD,kBAAsB,IACjDD,EAAI,OAAOE,KAAIxC,GAAA,KAAIuC,uBAA0BC,OAAQD,OAAUC,OAAQD,GAAM,CAAC,EAElF,YAAa,CAACD,EAAKC,EAAMC,IACvBF,EAAI,MAAGtC,GAAA,KAAIwC,aAAe,IACxBF,EAAI,OAAOE,EAAID,IAAS,GAAO,MAAOvC,GAAA,KAAIwC,OAAQD,OAAUC,OAAQD,GAAM,CAAC,EAE/E,YAAa,CAACA,EAAMC,IAAQD,IAAS,GAAO,GAAO,KAAK,IAAIA,EAAMC,CAAE,EACpE,aAAc,CAACF,EAAKQ,IAAUR,EAAI,IAAI,QAASQ,CAAK,EACrD,GAGH,SAAgBD,GAAqBP,EAAcS,EAAwB,CACzE,GAAIA,IAAO,GAAM,OAAOT,EAAI,IAAI,QAAS,EAAI,EAC7C,IAAMU,EAAQV,EAAI,IAAI,WAAStC,GAAA,MAAK,EACpC,OAAI+C,IAAO,QAAWJ,GAAaL,EAAKU,EAAOD,CAAE,EAC1CC,CACT,CALA1C,EAAA,qBAAAuC,GAOA,SAAgBF,GAAaL,EAAcU,EAAaD,EAA0B,CAChF,OAAO,KAAKA,CAAE,EAAE,QAASE,GAAMX,EAAI,UAAOtC,GAAA,KAAIgD,OAAQhD,GAAA,aAAYiD,CAAC,IAAK,EAAI,CAAC,CAC/E,CAFA3C,EAAA,aAAAqC,GAIA,IAAMO,GAAoC,CAAA,EAE1C,SAAgBC,GAAQb,EAAcP,EAAiB,CACrD,OAAOO,EAAI,WAAW,OAAQ,CAC5B,IAAKP,EACL,KAAMmB,GAASnB,EAAE,QAAUmB,GAASnB,EAAE,MAAQ,IAAI9B,GAAA,MAAM8B,EAAE,IAAI,GAC/D,CACH,CALAzB,EAAA,QAAA6C,GAOA,IAAYC,IAAZ,SAAYA,EAAI,CACdA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,IAAA,GAAA,KACF,GAHYA,GAAA9C,EAAA,OAAAA,EAAA,KAAI,CAAA,EAAA,EAKhB,SAAgB+C,GACdC,EACAC,EACAC,EAA0B,CAG1B,GAAIF,aAAoBtD,GAAA,KAAM,CAC5B,IAAMyD,EAAWF,IAAiBH,GAAK,IACvC,OAAOI,EACHC,KACEzD,GAAA,WAAUsD,aACVtD,GAAA,YAAWsD,WACbG,KACAzD,GAAA,WAAUsD,OACVtD,GAAA,WAAUsD,8CAEhB,OAAOE,KAAmBxD,GAAA,aAAYsD,CAAQ,EAAE,SAAQ,EAAK,IAAM1B,GAAkB0B,CAAQ,CAC/F,CAjBAhD,EAAA,aAAA+C,GAmBA,SAAgBrC,GACdR,EACAkD,EACAC,EAAwBnD,EAAG,KAAK,aAAY,CAE5C,GAAI,EAACmD,EAEL,IADAD,EAAM,gBAAgBA,IAClBC,IAAS,GAAM,MAAM,IAAI,MAAMD,CAAG,EACtClD,EAAG,KAAK,OAAO,KAAKkD,CAAG,EACzB,CATApD,EAAA,gBAAAU,kFC3MA,IAAA4C,GAAA,IAEMC,GAAQ,CAEZ,KAAM,IAAID,GAAA,KAAK,MAAM,EAErB,OAAQ,IAAIA,GAAA,KAAK,QAAQ,EACzB,aAAc,IAAIA,GAAA,KAAK,cAAc,EACrC,WAAY,IAAIA,GAAA,KAAK,YAAY,EACjC,mBAAoB,IAAIA,GAAA,KAAK,oBAAoB,EACjD,SAAU,IAAIA,GAAA,KAAK,UAAU,EAC7B,eAAgB,IAAIA,GAAA,KAAK,gBAAgB,EAEzC,QAAS,IAAIA,GAAA,KAAK,SAAS,EAC3B,OAAQ,IAAIA,GAAA,KAAK,QAAQ,EACzB,KAAM,IAAIA,GAAA,KAAK,MAAM,EAErB,KAAM,IAAIA,GAAA,KAAK,MAAM,EACrB,MAAO,IAAIA,GAAA,KAAK,OAAO,EAEvB,KAAM,IAAIA,GAAA,KAAK,MAAM,EACrB,QAAS,IAAIA,GAAA,KAAK,SAAS,EAC3B,QAAS,IAAIA,GAAA,KAAK,SAAS,EAC3B,SAAU,IAAIA,GAAA,KAAK,UAAU,GAG/BE,GAAA,QAAeD,qMCxBf,IAAAE,GAAA,IAEAC,GAAA,KACAC,GAAA,KAEaC,GAAA,aAAuC,CAClD,QAAS,CAAC,CAAC,QAAAC,CAAO,OAAMJ,GAAA,kBAAiBI,yBAG9BD,GAAA,kBAA4C,CACvD,QAAS,CAAC,CAAC,QAAAC,EAAS,WAAAC,CAAU,IAC5BA,KACIL,GAAA,QAAOI,sBAA4BC,eACnCL,GAAA,QAAOI,iCASf,SAAgBE,GACdC,EACAC,EAAgCL,GAAA,aAChCM,EACAC,EAA2B,CAE3B,GAAM,CAAC,GAAAC,CAAE,EAAIJ,EACP,CAAC,IAAAK,EAAK,cAAAC,EAAe,UAAAC,CAAS,EAAIH,EAClCI,EAASC,GAAgBT,EAAKC,EAAOC,CAAU,GACjDC,GAAiB,KAAjBA,EAAsBG,GAAiBC,GACzCG,GAASL,EAAKG,CAAM,EAEpBG,GAAaP,KAAIX,GAAA,MAAKe,IAAS,CAEnC,CAdAZ,GAAA,YAAAG,GAgBA,SAAgBa,GACdZ,EACAC,EAAgCL,GAAA,aAChCM,EAAuB,CAEvB,GAAM,CAAC,GAAAE,CAAE,EAAIJ,EACP,CAAC,IAAAK,EAAK,cAAAC,EAAe,UAAAC,CAAS,EAAIH,EAClCI,EAASC,GAAgBT,EAAKC,EAAOC,CAAU,EACrDQ,GAASL,EAAKG,CAAM,EACdF,GAAiBC,GACrBI,GAAaP,EAAIT,GAAA,QAAE,OAAO,CAE9B,CAZAC,GAAA,iBAAAgB,GAcA,SAAgBC,GAAiBR,EAAcS,EAAe,CAC5DT,EAAI,OAAOV,GAAA,QAAE,OAAQmB,CAAS,EAC9BT,EAAI,MAAGZ,GAAA,KAAIE,GAAA,QAAE,mBAAoB,IAC/BU,EAAI,GACFS,EACA,IAAMT,EAAI,UAAOZ,GAAA,KAAIE,GAAA,QAAE,iBAAkBmB,CAAS,EAClD,IAAMT,EAAI,OAAOV,GAAA,QAAE,QAAS,IAAI,CAAC,CAClC,CAEL,CATAC,GAAA,iBAAAiB,GAWA,SAAgBE,GAAa,CAC3B,IAAAV,EACA,QAAAR,EACA,YAAAmB,EACA,KAAAC,EACA,UAAAH,EACA,GAAAV,CAAE,EACc,CAEhB,GAAIU,IAAc,OAAW,MAAM,IAAI,MAAM,0BAA0B,EACvE,IAAMI,EAAMb,EAAI,KAAK,KAAK,EAC1BA,EAAI,SAAS,IAAKS,EAAWnB,GAAA,QAAE,OAASwB,GAAK,CAC3Cd,EAAI,MAAMa,KAAKzB,GAAA,KAAIE,GAAA,QAAE,WAAWwB,IAAI,EACpCd,EAAI,MAAGZ,GAAA,KAAIyB,+BAAkC,IAC3Cb,EAAI,UAAOZ,GAAA,KAAIyB,oBAAoBzB,GAAA,WAAUE,GAAA,QAAE,aAAcS,EAAG,SAAS,CAAC,CAAC,EAE7EC,EAAI,UAAOZ,GAAA,KAAIyB,kBAAkBzB,GAAA,OAAMW,EAAG,iBAAiBP,GAAS,EAChEO,EAAG,KAAK,UACVC,EAAI,UAAOZ,GAAA,KAAIyB,WAAcF,CAAW,EACxCX,EAAI,UAAOZ,GAAA,KAAIyB,SAAYD,CAAI,EAEnC,CAAC,CACH,CAtBArB,GAAA,aAAAmB,GAwBA,SAASL,GAASL,EAAcG,EAAY,CAC1C,IAAMU,EAAMb,EAAI,MAAM,MAAOG,CAAM,EACnCH,EAAI,MACFZ,GAAA,KAAIE,GAAA,QAAE,mBACN,IAAMU,EAAI,OAAOV,GAAA,QAAE,WAASF,GAAA,MAAKyB,IAAM,KACvCzB,GAAA,KAAIE,GAAA,QAAE,gBAAgBuB,IAAM,EAE9Bb,EAAI,QAAKZ,GAAA,KAAIE,GAAA,QAAE,UAAU,CAC3B,CAEA,SAASgB,GAAaP,EAAegB,EAAU,CAC7C,GAAM,CAAC,IAAAf,EAAK,aAAAgB,EAAc,UAAAC,CAAS,EAAIlB,EACnCkB,EAAU,OACZjB,EAAI,SAAMZ,GAAA,SAAQW,EAAG,mBAA2BgB,IAAO,GAEvDf,EAAI,UAAOZ,GAAA,KAAI4B,WAAuBD,CAAI,EAC1Cf,EAAI,OAAO,EAAK,EAEpB,CAEA,IAAMkB,GAAI,CACR,QAAS,IAAI9B,GAAA,KAAK,SAAS,EAC3B,WAAY,IAAIA,GAAA,KAAK,YAAY,EACjC,OAAQ,IAAIA,GAAA,KAAK,QAAQ,EACzB,aAAc,IAAIA,GAAA,KAAK,cAAc,EACrC,QAAS,IAAIA,GAAA,KAAK,SAAS,EAC3B,OAAQ,IAAIA,GAAA,KAAK,QAAQ,EACzB,aAAc,IAAIA,GAAA,KAAK,cAAc,GAGvC,SAASgB,GACPT,EACAC,EACAC,EAAuB,CAEvB,GAAM,CAAC,aAAAsB,CAAY,EAAIxB,EAAI,GAC3B,OAAIwB,IAAiB,MAAc/B,GAAA,OAC5BgC,GAAYzB,EAAKC,EAAOC,CAAU,CAC3C,CAEA,SAASuB,GACPzB,EACAC,EACAC,EAAyB,CAAA,EAAE,CAE3B,GAAM,CAAC,IAAAG,EAAK,GAAAD,CAAE,EAAIJ,EACZ0B,EAAyC,CAC7CC,GAAkBvB,EAAIF,CAAU,EAChC0B,GAAgB5B,EAAKE,CAAU,GAEjC,OAAA2B,GAAgB7B,EAAKC,EAAOyB,CAAS,EAC9BrB,EAAI,OAAO,GAAGqB,CAAS,CAChC,CAEA,SAASC,GAAkB,CAAC,UAAAG,CAAS,EAAc,CAAC,aAAAC,CAAY,EAAa,CAC3E,IAAMC,EAAWD,KACbtC,GAAA,OAAMqC,OAAYpC,GAAA,cAAaqC,EAAcrC,GAAA,KAAK,GAAG,IACrDoC,EACJ,MAAO,CAACnC,GAAA,QAAE,gBAAcF,GAAA,WAAUE,GAAA,QAAE,aAAcqC,CAAQ,CAAC,CAC7D,CAEA,SAASJ,GACP,CAAC,QAAA/B,EAAS,GAAI,CAAC,cAAAoC,CAAa,CAAC,EAC7B,CAAC,WAAAC,EAAY,aAAAC,CAAY,EAAa,CAEtC,IAAIC,EAAUD,EAAeF,KAAgBxC,GAAA,OAAMwC,KAAiBpC,IACpE,OAAIqC,IACFE,KAAU3C,GAAA,OAAM2C,OAAU1C,GAAA,cAAawC,EAAYxC,GAAA,KAAK,GAAG,KAEtD,CAAC6B,GAAE,WAAYa,CAAO,CAC/B,CAEA,SAASP,GACP7B,EACA,CAAC,OAAAqC,EAAQ,QAAAC,CAAO,EAChBZ,EAAsC,CAEtC,GAAM,CAAC,QAAA7B,EAAS,KAAAoB,EAAM,YAAAD,EAAa,GAAAZ,CAAE,EAAIJ,EACnC,CAAC,KAAAuC,EAAM,aAAAC,EAAc,aAAAC,EAAc,WAAAP,CAAU,EAAI9B,EACvDsB,EAAU,KACR,CAACH,GAAE,QAAS1B,CAAO,EACnB,CAAC0B,GAAE,OAAQ,OAAOc,GAAU,WAAaA,EAAOrC,CAAG,EAAIqC,MAAU5C,GAAA,MAAK,CAAC,EAErE8C,EAAK,UACPb,EAAU,KAAK,CAACH,GAAE,QAAS,OAAOe,GAAW,WAAaA,EAAQtC,CAAG,EAAIsC,CAAO,CAAC,EAE/EC,EAAK,SACPb,EAAU,KACR,CAACH,GAAE,OAAQP,CAAW,EACtB,CAACO,GAAE,gBAAc9B,GAAA,KAAIgD,IAAeP,GAAY,EAChD,CAACvC,GAAA,QAAE,KAAMsB,CAAI,CAAC,EAGduB,GAAcd,EAAU,KAAK,CAACH,GAAE,aAAciB,CAAY,CAAC,CACjE,qICrLA,IAAAE,GAAA,KACAC,GAAA,IACAC,GAAA,KAEMC,GAAoC,CACxC,QAAS,2BAGX,SAAgBC,GAAqBC,EAAa,CAChD,GAAM,CAAC,IAAAC,EAAK,OAAAC,EAAQ,aAAAC,CAAY,EAAIH,EAChCE,IAAW,GACbE,GAAiBJ,EAAI,EAAK,EACjB,OAAOE,GAAU,UAAYA,EAAO,SAAW,GACxDD,EAAI,OAAOJ,GAAA,QAAE,IAAI,GAEjBI,EAAI,UAAOL,GAAA,KAAIO,WAAuB,IAAI,EAC1CF,EAAI,OAAO,EAAI,EAEnB,CAVAI,GAAA,qBAAAN,GAYA,SAAgBO,GAAkBN,EAAeO,EAAW,CAC1D,GAAM,CAAC,IAAAN,EAAK,OAAAC,CAAM,EAAIF,EAClBE,IAAW,IACbD,EAAI,IAAIM,EAAO,EAAK,EACpBH,GAAiBJ,CAAE,GAEnBC,EAAI,IAAIM,EAAO,EAAI,CAEvB,CARAF,GAAA,kBAAAC,GAUA,SAASF,GAAiBJ,EAAeQ,EAA2B,CAClE,GAAM,CAAC,IAAAP,EAAK,KAAAQ,CAAI,EAAIT,EAEdU,EAAuB,CAC3B,IAAAT,EACA,QAAS,eACT,KAAAQ,EACA,OAAQ,GACR,WAAY,GACZ,YAAa,GACb,OAAQ,CAAA,EACR,GAAAT,MAEFL,GAAA,aAAYe,EAAKZ,GAAW,OAAWU,CAAiB,CAC1D,kHC5CA,IAAMG,GAAa,CAAC,SAAU,SAAU,UAAW,UAAW,OAAQ,SAAU,OAAO,EAIjFC,GAAyB,IAAI,IAAID,EAAU,EAEjD,SAAgBE,GAAWC,EAAU,CACnC,OAAO,OAAOA,GAAK,UAAYF,GAAU,IAAIE,CAAC,CAChD,CAFAC,GAAA,WAAAF,GA2BA,SAAgBG,IAAQ,CACtB,IAAMC,EAAsE,CAC1E,OAAQ,CAAC,KAAM,SAAU,MAAO,CAAA,CAAE,EAClC,OAAQ,CAAC,KAAM,SAAU,MAAO,CAAA,CAAE,EAClC,MAAO,CAAC,KAAM,QAAS,MAAO,CAAA,CAAE,EAChC,OAAQ,CAAC,KAAM,SAAU,MAAO,CAAA,CAAE,GAEpC,MAAO,CACL,MAAOC,GAAAC,GAAA,GAAIF,GAAJ,CAAY,QAAS,GAAM,QAAS,GAAM,KAAM,EAAI,GAC3D,MAAO,CAAC,CAAC,MAAO,CAAA,CAAE,EAAGA,EAAO,OAAQA,EAAO,OAAQA,EAAO,MAAOA,EAAO,MAAM,EAC9E,KAAM,CAAC,MAAO,CAAA,CAAE,EAChB,IAAK,CAAA,EACL,SAAU,CAAA,EAEd,CAdAF,GAAA,SAAAC,qJC/BA,SAAgBI,GACd,CAAC,OAAAC,EAAQ,KAAAC,CAAI,EACbC,EAAc,CAEd,IAAMC,EAAQF,EAAK,MAAM,MAAMC,GAC/B,OAAOC,GAASA,IAAU,IAAQC,GAAeJ,EAAQG,CAAK,CAChE,CANAE,GAAA,sBAAAN,GAQA,SAAgBK,GAAeJ,EAAyBG,EAAgB,CACtE,OAAOA,EAAM,MAAM,KAAMG,GAASC,GAAcP,EAAQM,CAAI,CAAC,CAC/D,CAFAD,GAAA,eAAAD,GAIA,SAAgBG,GAAcP,EAAyBM,EAAU,OAC/D,OACEN,EAAOM,EAAK,WAAa,UACzBE,EAAAF,EAAK,WAAW,cAAU,MAAAE,IAAA,OAAA,OAAAA,EAAE,KAAMC,GAAQT,EAAOS,KAAS,MAAS,EAEvE,CALAJ,GAAA,cAAAE,uNCTA,IAAAG,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,EAAA,IACAC,GAAA,KAEYC,IAAZ,SAAYA,EAAQ,CAClBA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,MAAA,GAAA,OACF,GAHYA,GAAAC,GAAA,WAAAA,GAAA,SAAQ,CAAA,EAAA,EAKpB,SAAgBC,GAAeC,EAAuB,CACpD,IAAMC,EAAQC,GAAaF,EAAO,IAAI,EAEtC,GADgBC,EAAM,SAAS,MAAM,GAEnC,GAAID,EAAO,WAAa,GAAO,MAAM,IAAI,MAAM,wCAAwC,MAClF,CACL,GAAI,CAACC,EAAM,QAAUD,EAAO,WAAa,OACvC,MAAM,IAAI,MAAM,0CAA0C,EAExDA,EAAO,WAAa,IAAMC,EAAM,KAAK,MAAM,EAEjD,OAAOA,CACT,CAZAH,GAAA,eAAAC,GAcA,SAAgBG,GAAaC,EAAuB,CAClD,IAAMF,EAAmB,MAAM,QAAQE,CAAE,EAAIA,EAAKA,EAAK,CAACA,CAAE,EAAI,CAAA,EAC9D,GAAIF,EAAM,MAAMT,GAAA,UAAU,EAAG,OAAOS,EACpC,MAAM,IAAI,MAAM,wCAA0CA,EAAM,KAAK,GAAG,CAAC,CAC3E,CAJAH,GAAA,aAAAI,GAMA,SAAgBE,GAAuBC,EAAkBJ,EAAiB,CACxE,GAAM,CAAC,IAAAK,EAAK,KAAAC,EAAM,KAAAC,CAAI,EAAIH,EACpBI,EAAWC,GAAcT,EAAOO,EAAK,WAAW,EAChDG,EACJV,EAAM,OAAS,GACf,EAAEQ,EAAS,SAAW,GAAKR,EAAM,SAAW,MAAKR,GAAA,uBAAsBY,EAAIJ,EAAM,EAAE,GACrF,GAAIU,EAAY,CACd,IAAMC,EAAYC,GAAeZ,EAAOM,EAAMC,EAAK,cAAeX,GAAS,KAAK,EAChFS,EAAI,GAAGM,EAAW,IAAK,CACjBH,EAAS,OAAQK,GAAWT,EAAIJ,EAAOQ,CAAQ,EAC9CM,GAAgBV,CAAE,CACzB,CAAC,EAEH,OAAOM,CACT,CAdAb,GAAA,uBAAAM,GAgBA,IAAMY,GAA2B,IAAI,IAAI,CAAC,SAAU,SAAU,UAAW,UAAW,MAAM,CAAC,EAC3F,SAASN,GAAcT,EAAmBgB,EAA+B,CACvE,OAAOA,EACHhB,EAAM,OAAQiB,GAAMF,GAAU,IAAIE,CAAC,GAAMD,IAAgB,SAAWC,IAAM,OAAQ,EAClF,CAAA,CACN,CAEA,SAASJ,GAAWT,EAAkBJ,EAAmBQ,EAAoB,CAC3E,GAAM,CAAC,IAAAH,EAAK,KAAAC,EAAM,KAAAC,CAAI,EAAIH,EACpBc,EAAWb,EAAI,IAAI,cAAYX,EAAA,YAAWY,GAAM,EAChDa,EAAUd,EAAI,IAAI,aAAWX,EAAA,aAAY,EAC3Ca,EAAK,cAAgB,SACvBF,EAAI,MAAGX,EAAA,KAAIwB,kCAAyCZ,SAAYA,gBAAoB,IAClFD,EACG,OAAOC,KAAMZ,EAAA,KAAIY,MAAS,EAC1B,OAAOY,KAAUxB,EAAA,YAAWY,GAAM,EAClC,GAAGM,GAAeZ,EAAOM,EAAMC,EAAK,aAAa,EAAG,IAAMF,EAAI,OAAOc,EAASb,CAAI,CAAC,CAAC,EAG3FD,EAAI,MAAGX,EAAA,KAAIyB,iBAAuB,EAClC,QAAWF,KAAKT,GACVO,GAAU,IAAIE,CAAC,GAAMA,IAAM,SAAWV,EAAK,cAAgB,UAC7Da,EAAmBH,CAAC,EAGxBZ,EAAI,KAAI,EACRS,GAAgBV,CAAE,EAClBC,EAAI,MAAK,EAETA,EAAI,MAAGX,EAAA,KAAIyB,kBAAyB,IAAK,CACvCd,EAAI,OAAOC,EAAMa,CAAO,EACxBE,GAAiBjB,EAAIe,CAAO,CAC9B,CAAC,EAED,SAASC,EAAmBH,EAAS,CACnC,OAAQA,EAAG,CACT,IAAK,SACHZ,EACG,UAAOX,EAAA,KAAIwB,oBAA2BA,gBAAuB,EAC7D,OAAOC,KAASzB,EAAA,UAASY,GAAM,EAC/B,UAAOZ,EAAA,KAAIY,YAAe,EAC1B,OAAOa,KAASzB,EAAA,MAAK,EACxB,OACF,IAAK,SACHW,EACG,UACCX,EAAA,KAAIwB,qBAA4BZ;oBACxBY,oBAA2BZ,QAAWA,SAAYA,IAAO,EAElE,OAAOa,KAASzB,EAAA,MAAKY,GAAM,EAC9B,OACF,IAAK,UACHD,EACG,UACCX,EAAA,KAAIwB,sBAA6BZ;oBACzBY,qBAA4BZ,QAAWA,SAAYA,UAAaA,SAAY,EAErF,OAAOa,KAASzB,EAAA,MAAKY,GAAM,EAC9B,OACF,IAAK,UACHD,EACG,UAAOX,EAAA,KAAIY,oBAAuBA,cAAiBA,YAAe,EAClE,OAAOa,EAAS,EAAK,EACrB,UAAOzB,EAAA,KAAIY,mBAAsBA,SAAY,EAC7C,OAAOa,EAAS,EAAI,EACvB,OACF,IAAK,OACHd,EAAI,UAAOX,EAAA,KAAIY,eAAkBA,cAAiBA,aAAgB,EAClED,EAAI,OAAOc,EAAS,IAAI,EACxB,OAEF,IAAK,QACHd,EACG,UACCX,EAAA,KAAIwB,qBAA4BA;mBACzBA,sBAA6BZ,YAAe,EAEpD,OAAOa,KAASzB,EAAA,MAAKY,IAAO,EAErC,CACF,CAEA,SAASe,GAAiB,CAAC,IAAAhB,EAAK,WAAAiB,EAAY,mBAAAC,CAAkB,EAAiBC,EAAU,CAEvFnB,EAAI,MAAGX,EAAA,KAAI4B,kBAA4B,IACrCjB,EAAI,UAAOX,EAAA,KAAI4B,KAAcC,KAAuBC,CAAI,CAAC,CAE7D,CAEA,SAAgBC,GACdP,EACAZ,EACAoB,EACAC,EAAU/B,GAAS,QAAO,CAE1B,IAAMgC,EAAKD,IAAY/B,GAAS,QAAUF,EAAA,UAAU,GAAKA,EAAA,UAAU,IAC/DmC,EACJ,OAAQX,EAAU,CAChB,IAAK,OACH,SAAOxB,EAAA,KAAIY,KAAQsB,SACrB,IAAK,QACHC,KAAOnC,EAAA,mBAAkBY,KACzB,MACF,IAAK,SACHuB,KAAOnC,EAAA,KAAIY,eAAkBA,mCAAsCA,KACnE,MACF,IAAK,UACHuB,EAAOC,KAAQpC,EAAA,OAAMY,oBAAuBA,IAAO,EACnD,MACF,IAAK,SACHuB,EAAOC,EAAO,EACd,MACF,QACE,SAAOpC,EAAA,YAAWY,KAAQsB,KAAMV,IAEpC,OAAOS,IAAY/B,GAAS,QAAUiC,KAAOnC,EAAA,KAAImC,CAAI,EAErD,SAASC,EAAQC,EAAcrC,EAAA,IAAG,CAChC,SAAOA,EAAA,QAAIA,EAAA,YAAWY,gBAAoByB,EAAOL,KAAahC,EAAA,cAAaY,KAAUZ,EAAA,GAAG,CAC1F,CACF,CA/BAG,GAAA,cAAA4B,GAiCA,SAAgBb,GACdoB,EACA1B,EACAoB,EACAC,EAAkB,CAElB,GAAIK,EAAU,SAAW,EACvB,OAAOP,GAAcO,EAAU,GAAI1B,EAAMoB,EAAYC,CAAO,EAE9D,IAAIE,EACE7B,KAAQL,GAAA,QAAOqC,CAAS,EAC9B,GAAIhC,EAAM,OAASA,EAAM,OAAQ,CAC/B,IAAMiC,KAASvC,EAAA,YAAWY,gBAC1BuB,EAAO7B,EAAM,KAAOiC,KAASvC,EAAA,MAAKY,QAAW2B,IAC7C,OAAOjC,EAAM,KACb,OAAOA,EAAM,MACb,OAAOA,EAAM,YAEb6B,EAAOnC,EAAA,IAELM,EAAM,QAAQ,OAAOA,EAAM,QAC/B,QAAWiB,KAAKjB,EAAO6B,KAAOnC,EAAA,KAAImC,EAAMJ,GAAcR,EAAeX,EAAMoB,EAAYC,CAAO,CAAC,EAC/F,OAAOE,CACT,CAvBAhC,GAAA,eAAAe,GA2BA,IAAMsB,GAAoC,CACxC,QAAS,CAAC,CAAC,OAAAnC,CAAM,IAAM,WAAWA,IAClC,OAAQ,CAAC,CAAC,OAAAA,EAAQ,YAAAoC,CAAW,IAC3B,OAAOpC,GAAU,YAAWL,EAAA,YAAWK,QAAYL,EAAA,YAAWyC,MAGlE,SAAgBrB,GAAgBV,EAAgB,CAC9C,IAAMgC,EAAMC,GAAoBjC,CAAE,KAClCX,GAAA,aAAY2C,EAAKF,EAAS,CAC5B,CAHArC,GAAA,gBAAAiB,GAKA,SAASuB,GAAoBjC,EAAgB,CAC3C,GAAM,CAAC,IAAAC,EAAK,KAAAC,EAAM,OAAAP,CAAM,EAAIK,EACtBkC,KAAa3C,GAAA,gBAAeS,EAAIL,EAAQ,MAAM,EACpD,MAAO,CACL,IAAAM,EACA,QAAS,OACT,KAAAC,EACA,OAAQP,EAAO,KACf,WAAAuC,EACA,YAAaA,EACb,aAAcvC,EACd,OAAQ,CAAA,EACR,GAAAK,EAEJ,0GCnOA,IAAAmC,GAAA,IACAC,GAAA,KAEA,SAAgBC,GAAeC,EAAkBC,EAAW,CAC1D,GAAM,CAAC,WAAAC,EAAY,MAAAC,CAAK,EAAIH,EAAG,OAC/B,GAAIC,IAAO,UAAYC,EACrB,QAAWE,KAAOF,EAChBG,GAAcL,EAAII,EAAKF,EAAWE,GAAK,OAAO,OAEvCH,IAAO,SAAW,MAAM,QAAQE,CAAK,GAC9CA,EAAM,QAAQ,CAACG,EAAKC,IAAcF,GAAcL,EAAIO,EAAGD,EAAI,OAAO,CAAC,CAEvE,CATAE,GAAA,eAAAT,GAWA,SAASM,GAAcL,EAAkBS,EAAuBC,EAAqB,CACnF,GAAM,CAAC,IAAAC,EAAK,cAAAC,EAAe,KAAAC,EAAM,KAAAC,CAAI,EAAId,EACzC,GAAIU,IAAiB,OAAW,OAChC,IAAMK,KAAYlB,GAAA,KAAIgB,OAAOhB,GAAA,aAAYY,CAAI,IAC7C,GAAIG,EAAe,IACjBd,GAAA,iBAAgBE,EAAI,2BAA2Be,GAAW,EAC1D,OAGF,IAAIC,KAAYnB,GAAA,KAAIkB,kBAChBD,EAAK,cAAgB,UACvBE,KAAYnB,GAAA,KAAImB,QAAgBD,iBAAyBA,YAI3DJ,EAAI,GAAGK,KAAWnB,GAAA,KAAIkB,UAAelB,GAAA,WAAUa,CAAY,GAAG,CAChE,gVC5BA,IAAAO,GAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACA,SAAgBC,GAAuBC,EAAiBC,EAAY,CAClE,GAAM,CAAC,IAAAC,EAAK,KAAAC,EAAM,GAAAC,CAAE,EAAIJ,EACxBE,EAAI,GAAGG,GAAiBH,EAAKC,EAAMF,EAAMG,EAAG,KAAK,aAAa,EAAG,IAAK,CACpEJ,EAAI,UAAU,CAAC,mBAAiBL,GAAA,KAAIM,GAAM,EAAG,EAAI,EACjDD,EAAI,MAAK,CACX,CAAC,CACH,CANAM,GAAA,uBAAAP,GAQA,SAAgBQ,GACd,CAAC,IAAAL,EAAK,KAAAC,EAAM,GAAI,CAAC,KAAAK,CAAI,CAAC,EACtBC,EACAC,EAAa,CAEb,SAAOf,GAAA,IACL,GAAGc,EAAW,IAAKR,MACjBN,GAAA,KAAIU,GAAiBH,EAAKC,EAAMF,EAAMO,EAAK,aAAa,KAAGb,GAAA,KAAIe,OAAaT,GAAM,CAAC,CACpF,CAEL,CAVAK,GAAA,iBAAAC,GAYA,SAAgBI,GAAkBX,EAAiBU,EAAa,CAC9DV,EAAI,UAAU,CAAC,gBAAiBU,CAAO,EAAG,EAAI,EAC9CV,EAAI,MAAK,CACX,CAHAM,GAAA,kBAAAK,GAKA,SAAgBC,GAAYV,EAAY,CACtC,OAAOA,EAAI,WAAW,OAAQ,CAE5B,IAAK,OAAO,UAAU,eACtB,QAAMP,GAAA,oCACP,CACH,CANAW,GAAA,YAAAM,GAQA,SAAgBC,GAAcX,EAAcC,EAAYW,EAAuB,CAC7E,SAAOnB,GAAA,KAAIiB,GAAYV,CAAG,UAAUC,MAASW,IAC/C,CAFAR,GAAA,cAAAO,GAIA,SAAgBE,GACdb,EACAC,EACAW,EACAE,EAAuB,CAEvB,IAAMC,KAAOtB,GAAA,KAAIQ,OAAOR,GAAA,aAAYmB,CAAQ,kBAC5C,OAAOE,KAAgBrB,GAAA,KAAIsB,QAAWJ,GAAcX,EAAKC,EAAMW,CAAQ,IAAMG,CAC/E,CARAX,GAAA,eAAAS,GAUA,SAAgBV,GACdH,EACAC,EACAW,EACAE,EAAuB,CAEvB,IAAMC,KAAOtB,GAAA,KAAIQ,OAAOR,GAAA,aAAYmB,CAAQ,kBAC5C,OAAOE,KAAgBrB,GAAA,IAAGsB,KAAMtB,GAAA,KAAIkB,GAAcX,EAAKC,EAAMW,CAAQ,CAAC,CAAC,EAAIG,CAC7E,CARAX,GAAA,iBAAAD,GAUA,SAAgBa,GAAoBC,EAAqB,CACvD,OAAOA,EAAY,OAAO,KAAKA,CAAS,EAAE,OAAQC,GAAMA,IAAM,WAAW,EAAI,CAAA,CAC/E,CAFAd,GAAA,oBAAAY,GAIA,SAAgBG,GAAiBjB,EAAee,EAAoB,CAClE,OAAOD,GAAoBC,CAAS,EAAE,OACnCC,GAAM,IAACxB,GAAA,mBAAkBQ,EAAIe,EAAUC,EAAe,CAAC,CAE5D,CAJAd,GAAA,iBAAAe,GAMA,SAAgBC,GACd,CAAC,WAAAC,EAAY,KAAApB,EAAM,GAAI,CAAC,IAAAD,EAAK,aAAAsB,EAAc,WAAAC,EAAY,UAAAC,CAAS,EAAG,GAAAtB,CAAE,EACrEuB,EACAC,EACAC,EAAoB,CAEpB,IAAMC,EAAgBD,KAAalC,GAAA,KAAI4B,MAAepB,MAASqB,IAAeC,IAAetB,EACvF4B,EAAkC,CACtC,CAAClC,GAAA,QAAE,gBAAcF,GAAA,WAAUE,GAAA,QAAE,aAAc6B,CAAS,CAAC,EACrD,CAAC7B,GAAA,QAAE,WAAYO,EAAG,UAAU,EAC5B,CAACP,GAAA,QAAE,mBAAoBO,EAAG,kBAAkB,EAC5C,CAACP,GAAA,QAAE,SAAUA,GAAA,QAAE,QAAQ,GAErBO,EAAG,KAAK,YAAY2B,EAAO,KAAK,CAAClC,GAAA,QAAE,eAAgBA,GAAA,QAAE,cAAc,CAAC,EACxE,IAAMmC,KAAOrC,GAAA,KAAImC,MAAkB5B,EAAI,OAAO,GAAG6B,CAAM,IACvD,OAAOH,IAAYjC,GAAA,OAAMA,GAAA,KAAIgC,UAAaC,MAAYI,QAAUrC,GAAA,KAAIgC,KAAQK,IAC9E,CAhBA1B,GAAA,iBAAAgB,GAkBA,IAAMW,MAAYtC,GAAA,eAElB,SAAgBuC,GAAW,CAAC,IAAAhC,EAAK,GAAI,CAAC,KAAAM,CAAI,CAAC,EAAe2B,EAAe,CACvE,IAAMC,EAAI5B,EAAK,cAAgB,IAAM,GAC/B,CAAC,OAAA6B,CAAM,EAAI7B,EAAK,KAChB8B,EAAKD,EAAOF,EAASC,CAAC,EAE5B,OAAOlC,EAAI,WAAW,UAAW,CAC/B,IAAKoC,EAAG,SAAQ,EAChB,IAAKA,EACL,QAAM3C,GAAA,KAAI0C,EAAO,OAAS,aAAeJ,MAAYnC,GAAA,SAAQI,EAAKmC,CAAM,KAAKF,MAAYC,KAC1F,CACH,CAVA9B,GAAA,WAAA4B,GAYA,SAAgBK,GAAcvC,EAAe,CAC3C,GAAM,CAAC,IAAAE,EAAK,KAAAC,EAAM,QAAAqC,EAAS,GAAApC,CAAE,EAAIJ,EAC3ByC,EAAQvC,EAAI,KAAK,OAAO,EAC9B,GAAIE,EAAG,UAAW,CAChB,IAAMsC,EAAWxC,EAAI,IAAI,QAAS,EAAI,EACtC,OAAAyC,EAAc,IAAMzC,EAAI,OAAOwC,EAAU,EAAK,CAAC,EACxCA,EAET,OAAAxC,EAAI,IAAIuC,EAAO,EAAI,EACnBE,EAAc,IAAMzC,EAAI,MAAK,CAAE,EACxBuC,EAEP,SAASE,EAAcC,EAAoB,CACzC,IAAMC,EAAM3C,EAAI,MAAM,SAAOP,GAAA,KAAIQ,UAAa,EAC9CD,EAAI,SAAS,IAAK,EAAG2C,EAAMC,GAAK,CAC9B9C,EAAI,UACF,CACE,QAAAwC,EACA,SAAUM,EACV,aAAclD,GAAA,KAAK,KAErB6C,CAAK,EAEPvC,EAAI,MAAGP,GAAA,KAAI8C,CAAK,EAAGG,CAAQ,CAC7B,CAAC,CACH,CACF,CA1BAtC,GAAA,cAAAiC,GA4BA,SAAgBQ,GAAc/C,EAAe,CAC3C,GAAM,CAAC,IAAAE,EAAK,OAAA8C,EAAQ,QAAAR,EAAS,GAAApC,CAAE,EAAIJ,EAEnC,GAAI,CAAC,MAAM,QAAQgD,CAAM,EAAG,MAAM,IAAI,MAAM,0BAA0B,EAEtE,GADoBA,EAAO,KAAMC,MAAmBrD,GAAA,mBAAkBQ,EAAI6C,CAAG,CAAC,GAC3D,CAAC7C,EAAG,KAAK,YAAa,OAEzC,IAAMqC,EAAQvC,EAAI,IAAI,QAAS,EAAK,EAC9BgD,EAAWhD,EAAI,KAAK,QAAQ,EAElCA,EAAI,MAAM,IACR8C,EAAO,QAAQ,CAACG,EAAiBL,IAAa,CAC5C,IAAMM,EAASpD,EAAI,UACjB,CACE,QAAAwC,EACA,WAAYM,EACZ,cAAe,IAEjBI,CAAQ,EAEVhD,EAAI,OAAOuC,KAAO9C,GAAA,KAAI8C,QAAYS,GAAU,EAC7BlD,EAAI,oBAAoBoD,EAAQF,CAAQ,GAG1ChD,EAAI,MAAGP,GAAA,KAAI8C,CAAK,CAAC,CAChC,CAAC,CAAC,EAGJzC,EAAI,OACFyC,EACA,IAAMzC,EAAI,MAAK,EACf,IAAMA,EAAI,MAAM,EAAI,CAAC,CAEzB,CAjCAM,GAAA,cAAAyC,2KC5HA,IAAAM,GAAA,IACAC,GAAA,KAEAC,GAAA,KACAC,GAAA,KAIA,SAAgBC,GAAiBC,EAAiBC,EAA2B,CAC3E,GAAM,CAAC,IAAAC,EAAK,QAAAC,EAAS,OAAAC,EAAQ,aAAAC,EAAc,GAAAC,CAAE,EAAIN,EAC3CO,EAAcN,EAAI,MAAM,KAAKK,EAAG,KAAMF,EAAQC,EAAcC,CAAE,EAC9DE,EAAYC,GAAWP,EAAKC,EAASI,CAAW,EAClDD,EAAG,KAAK,iBAAmB,IAAOA,EAAG,KAAK,eAAeC,EAAa,EAAI,EAE9E,IAAMG,EAAQR,EAAI,KAAK,OAAO,EAC9BF,EAAI,UACF,CACE,OAAQO,EACR,WAAYZ,GAAA,IACZ,cAAe,GAAGW,EAAG,iBAAiBH,IACtC,aAAcK,EACd,cAAe,IAEjBE,CAAK,EAEPV,EAAI,KAAKU,EAAO,IAAMV,EAAI,MAAM,EAAI,CAAC,CACvC,CAlBAW,GAAA,iBAAAZ,GAoBA,SAAgBa,GAAgBZ,EAAiBC,EAA0B,OACzE,GAAM,CAAC,IAAAC,EAAK,QAAAC,EAAS,OAAAC,EAAQ,aAAAC,EAAc,MAAAQ,EAAO,GAAAP,CAAE,EAAIN,EACxDc,GAAkBR,EAAIL,CAAG,EACzB,IAAMc,EACJ,CAACF,GAASZ,EAAI,QAAUA,EAAI,QAAQ,KAAKK,EAAG,KAAMF,EAAQC,EAAcC,CAAE,EAAIL,EAAI,SAC9Ee,EAAcP,GAAWP,EAAKC,EAASY,CAAQ,EAC/CL,EAAQR,EAAI,IAAI,OAAO,EAC7BF,EAAI,WAAWU,EAAOO,CAAe,EACrCjB,EAAI,IAAGkB,EAAAjB,EAAI,SAAK,MAAAiB,IAAA,OAAAA,EAAIR,CAAK,EAEzB,SAASO,GAAe,CACtB,GAAIhB,EAAI,SAAW,GACjBkB,EAAW,EACPlB,EAAI,WAAWmB,GAAWpB,CAAG,EACjCqB,EAAW,IAAMrB,EAAI,MAAK,CAAE,MACvB,CACL,IAAMsB,EAAWrB,EAAI,MAAQsB,EAAa,EAAKC,EAAY,EACvDvB,EAAI,WAAWmB,GAAWpB,CAAG,EACjCqB,EAAW,IAAMI,GAAQzB,EAAKsB,CAAQ,CAAC,EAE3C,CAEA,SAASC,GAAa,CACpB,IAAMD,EAAWpB,EAAI,IAAI,WAAY,IAAI,EACzC,OAAAA,EAAI,IACF,IAAMiB,KAAYxB,GAAA,UAAS,EAC1B+B,GACCxB,EAAI,OAAOQ,EAAO,EAAK,EAAE,MACvBf,GAAA,KAAI+B,gBAAgBpB,EAAG,kBACvB,IAAMJ,EAAI,OAAOoB,KAAU3B,GAAA,KAAI+B,UAAU,EACzC,IAAMxB,EAAI,MAAMwB,CAAC,CAAC,CACnB,EAEEJ,CACT,CAEA,SAASE,GAAY,CACnB,IAAMG,KAAehC,GAAA,KAAIqB,WACzB,OAAAd,EAAI,OAAOyB,EAAc,IAAI,EAC7BR,EAAYxB,GAAA,GAAG,EACRgC,CACT,CAEA,SAASR,EAAYS,EAAe3B,EAAI,SAAQN,GAAA,WAAYA,GAAA,IAAG,CAC7D,IAAMkC,EAAUvB,EAAG,KAAK,YAAcV,GAAA,QAAE,KAAOA,GAAA,QAAE,KAC3CkC,EAAa,EAAG,YAAa7B,GAAO,CAACY,GAAUZ,EAAI,SAAW,IACpEC,EAAI,OACFQ,KACAf,GAAA,KAAIiC,OAAS/B,GAAA,kBAAiBG,EAAKgB,EAAaa,EAASC,CAAU,IACnE7B,EAAI,SAAS,CAEjB,CAEA,SAASoB,EAAWU,EAAkB,OACpC7B,EAAI,MAAGP,GAAA,MAAIuB,EAAAjB,EAAI,SAAK,MAAAiB,IAAA,OAAAA,EAAIR,CAAK,EAAGqB,CAAM,CACxC,CACF,CAxDApB,GAAA,gBAAAC,GA0DA,SAASQ,GAAWpB,EAAe,CACjC,GAAM,CAAC,IAAAE,EAAK,KAAA8B,EAAM,GAAA1B,CAAE,EAAIN,EACxBE,EAAI,GAAGI,EAAG,WAAY,IAAMJ,EAAI,OAAO8B,KAAMrC,GAAA,KAAIW,EAAG,cAAcA,EAAG,qBAAqB,CAAC,CAC7F,CAEA,SAASmB,GAAQzB,EAAiBiC,EAAU,CAC1C,GAAM,CAAC,IAAA/B,CAAG,EAAIF,EACdE,EAAI,MACFP,GAAA,mBAAkBsC,KAClB,IAAK,CACH/B,EACG,OAAON,GAAA,QAAE,WAASD,GAAA,KAAIC,GAAA,QAAE,sBAAsBqC,OAAUrC,GAAA,QAAE,kBAAkBqC,IAAO,EACnF,OAAOrC,GAAA,QAAE,UAAQD,GAAA,KAAIC,GAAA,QAAE,gBAAgB,KAC1CE,GAAA,cAAaE,CAAG,CAClB,EACA,IAAMA,EAAI,MAAK,CAAE,CAErB,CAEA,SAASc,GAAkB,CAAC,UAAAoB,CAAS,EAAiBjC,EAA0B,CAC9E,GAAIA,EAAI,OAAS,CAACiC,EAAU,OAAQ,MAAM,IAAI,MAAM,8BAA8B,CACpF,CAEA,SAASzB,GAAWP,EAAcC,EAAiBgC,EAAiC,CAClF,GAAIA,IAAW,OAAW,MAAM,IAAI,MAAM,YAAYhC,sBAA4B,EAClF,OAAOD,EAAI,WACT,UACA,OAAOiC,GAAU,WAAa,CAAC,IAAKA,CAAM,EAAI,CAAC,IAAKA,EAAQ,QAAMxC,GAAA,WAAUwC,CAAM,CAAC,CAAC,CAExF,CAEA,SAAgBC,GACdhC,EACAiC,EACAC,EAAiB,GAAK,CAGtB,MACE,CAACD,EAAW,QACZA,EAAW,KAAME,GACfA,IAAO,QACH,MAAM,QAAQnC,CAAM,EACpBmC,IAAO,SACPnC,GAAU,OAAOA,GAAU,UAAY,CAAC,MAAM,QAAQA,CAAM,EAC5D,OAAOA,GAAUmC,GAAOD,GAAkB,OAAOlC,EAAU,GAAY,CAGjF,CAhBAO,GAAA,gBAAAyB,GAkBA,SAAgBI,GACd,CAAC,OAAApC,EAAQ,KAAAqC,EAAM,KAAAC,EAAM,cAAAC,CAAa,EAClC1C,EACAE,EAAe,CAGf,GAAI,MAAM,QAAQF,EAAI,OAAO,EAAI,CAACA,EAAI,QAAQ,SAASE,CAAO,EAAIF,EAAI,UAAYE,EAChF,MAAM,IAAI,MAAM,0BAA0B,EAG5C,IAAMyC,EAAO3C,EAAI,aACjB,GAAI2C,GAAI,MAAJA,EAAM,KAAMC,GAAQ,CAAC,OAAO,UAAU,eAAe,KAAKzC,EAAQyC,CAAG,CAAC,EACxE,MAAM,IAAI,MAAM,2CAA2C1C,MAAYyC,EAAK,KAAK,GAAG,GAAG,EAGzF,GAAI3C,EAAI,gBAEF,CADUA,EAAI,eAAeG,EAAOD,EAAQ,EACpC,CACV,IAAM2C,EACJ,YAAY3C,gCAAsCwC,OAClDD,EAAK,WAAWzC,EAAI,eAAe,MAAM,EAC3C,GAAIwC,EAAK,iBAAmB,MAAOC,EAAK,OAAO,MAAMI,CAAG,MACnD,OAAM,IAAI,MAAMA,CAAG,EAG9B,CAzBAnC,GAAA,qBAAA6B,uJC/IA,IAAAO,GAAA,IACAC,GAAA,KA6CA,SAAgBC,GACdC,EACA,CAAC,QAAAC,EAAS,WAAAC,EAAY,OAAAC,EAAQ,WAAAC,EAAY,cAAAC,EAAe,aAAAC,CAAY,EAAgB,CAErF,GAAIL,IAAY,QAAaE,IAAW,OACtC,MAAM,IAAI,MAAM,sDAAsD,EAGxE,GAAIF,IAAY,OAAW,CACzB,IAAMM,EAAMP,EAAG,OAAOC,GACtB,OAAOC,IAAe,OAClB,CACE,OAAQK,EACR,cAAYV,GAAA,KAAIG,EAAG,gBAAaH,GAAA,aAAYI,CAAO,IACnD,cAAe,GAAGD,EAAG,iBAAiBC,KAExC,CACE,OAAQM,EAAIL,GACZ,cAAYL,GAAA,KAAIG,EAAG,gBAAaH,GAAA,aAAYI,CAAO,OAAIJ,GAAA,aAAYK,CAAU,IAC7E,cAAe,GAAGF,EAAG,iBAAiBC,QAAWH,GAAA,gBAAeI,CAAU,KAIlF,GAAIC,IAAW,OAAW,CACxB,GAAIC,IAAe,QAAaC,IAAkB,QAAaC,IAAiB,OAC9E,MAAM,IAAI,MAAM,6EAA6E,EAE/F,MAAO,CACL,OAAAH,EACA,WAAAC,EACA,aAAAE,EACA,cAAAD,GAIJ,MAAM,IAAI,MAAM,6CAA6C,CAC/D,CApCAG,GAAA,aAAAT,GAsCA,SAAgBU,GACdC,EACAV,EACA,CAAC,SAAAW,EAAU,aAAcC,EAAQ,KAAAC,EAAM,UAAAC,EAAW,aAAAC,CAAY,EAAgB,CAE9E,GAAIF,IAAS,QAAaF,IAAa,OACrC,MAAM,IAAI,MAAM,qDAAqD,EAGvE,GAAM,CAAC,IAAAK,CAAG,EAAIhB,EAEd,GAAIW,IAAa,OAAW,CAC1B,GAAM,CAAC,UAAAM,EAAW,YAAAC,EAAa,KAAAC,CAAI,EAAInB,EACjCoB,EAAWJ,EAAI,IAAI,UAAQnB,GAAA,KAAIG,EAAG,UAAOH,GAAA,aAAYc,CAAQ,IAAK,EAAI,EAC5EU,EAAiBD,CAAQ,EACzBV,EAAU,aAAYb,GAAA,OAAMoB,OAAYnB,GAAA,cAAaa,EAAUC,EAAQO,EAAK,gBAAgB,IAC5FT,EAAU,sBAAqBb,GAAA,KAAIc,IACnCD,EAAU,YAAc,CAAC,GAAGQ,EAAaR,EAAU,kBAAkB,EAGvE,GAAIG,IAAS,OAAW,CACtB,IAAMO,EAAWP,aAAgBhB,GAAA,KAAOgB,EAAOG,EAAI,IAAI,OAAQH,EAAM,EAAI,EACzEQ,EAAiBD,CAAQ,EACrBL,IAAiB,SAAWL,EAAU,aAAeK,GAIvDD,IAAWJ,EAAU,UAAYI,GAErC,SAASO,EAAiBC,EAAe,CACvCZ,EAAU,KAAOY,EACjBZ,EAAU,UAAYV,EAAG,UAAY,EACrCU,EAAU,UAAY,CAAA,EACtBV,EAAG,kBAAoB,IAAI,IAC3BU,EAAU,WAAaV,EAAG,KAC1BU,EAAU,UAAY,CAAC,GAAGV,EAAG,UAAWsB,CAAS,CACnD,CACF,CArCAd,GAAA,oBAAAC,GAuCA,SAAgBc,GACdb,EACA,CAAC,iBAAAc,EAAkB,YAAAC,EAAa,cAAAC,EAAe,aAAAC,EAAc,UAAAC,CAAS,EAAgB,CAElFF,IAAkB,SAAWhB,EAAU,cAAgBgB,GACvDC,IAAiB,SAAWjB,EAAU,aAAeiB,GACrDC,IAAc,SAAWlB,EAAU,UAAYkB,GACnDlB,EAAU,iBAAmBc,EAC7Bd,EAAU,YAAce,CAC1B,CATAjB,GAAA,oBAAAe,KC7HA,IAAAM,GAAAC,EAAA,CAAAC,GAAAC,KAAA,cAMAA,GAAO,QAAU,SAASC,EAAMC,EAAGC,EAAG,CACpC,GAAID,IAAMC,EAAG,MAAO,GAEpB,GAAID,GAAKC,GAAK,OAAOD,GAAK,UAAY,OAAOC,GAAK,SAAU,CAC1D,GAAID,EAAE,cAAgBC,EAAE,YAAa,MAAO,GAE5C,IAAIC,EAAQC,EAAGC,EACf,GAAI,MAAM,QAAQJ,CAAC,EAAG,CAEpB,GADAE,EAASF,EAAE,OACPE,GAAUD,EAAE,OAAQ,MAAO,GAC/B,IAAKE,EAAID,EAAQC,MAAQ,GACvB,GAAI,CAACJ,EAAMC,EAAEG,GAAIF,EAAEE,EAAE,EAAG,MAAO,GACjC,MAAO,EACT,CAIA,GAAIH,EAAE,cAAgB,OAAQ,OAAOA,EAAE,SAAWC,EAAE,QAAUD,EAAE,QAAUC,EAAE,MAC5E,GAAID,EAAE,UAAY,OAAO,UAAU,QAAS,OAAOA,EAAE,QAAQ,IAAMC,EAAE,QAAQ,EAC7E,GAAID,EAAE,WAAa,OAAO,UAAU,SAAU,OAAOA,EAAE,SAAS,IAAMC,EAAE,SAAS,EAIjF,GAFAG,EAAO,OAAO,KAAKJ,CAAC,EACpBE,EAASE,EAAK,OACVF,IAAW,OAAO,KAAKD,CAAC,EAAE,OAAQ,MAAO,GAE7C,IAAKE,EAAID,EAAQC,MAAQ,GACvB,GAAI,CAAC,OAAO,UAAU,eAAe,KAAKF,EAAGG,EAAKD,EAAE,EAAG,MAAO,GAEhE,IAAKA,EAAID,EAAQC,MAAQ,GAAI,CAC3B,IAAIE,EAAMD,EAAKD,GAEf,GAAI,CAACJ,EAAMC,EAAEK,GAAMJ,EAAEI,EAAI,EAAG,MAAO,EACrC,CAEA,MAAO,EACT,CAGA,OAAOL,IAAIA,GAAKC,IAAIA,CACtB,IC7CA,IAAAK,GAAAC,EAAA,CAAAC,GAAAC,KAAA,cAEA,IAAIC,GAAWD,GAAO,QAAU,SAAUE,EAAQC,EAAMC,EAAI,CAEtD,OAAOD,GAAQ,aACjBC,EAAKD,EACLA,EAAO,CAAC,GAGVC,EAAKD,EAAK,IAAMC,EAChB,IAAIC,EAAO,OAAOD,GAAM,WAAcA,EAAKA,EAAG,KAAO,UAAW,CAAC,EAC7DE,EAAOF,EAAG,MAAQ,UAAW,CAAC,EAElCG,GAAUJ,EAAME,EAAKC,EAAMJ,EAAQ,GAAIA,CAAM,CAC/C,EAGAD,GAAS,SAAW,CAClB,gBAAiB,GACjB,MAAO,GACP,SAAU,GACV,qBAAsB,GACtB,cAAe,GACf,IAAK,GACL,GAAI,GACJ,KAAM,GACN,KAAM,EACR,EAEAA,GAAS,cAAgB,CACvB,MAAO,GACP,MAAO,GACP,MAAO,GACP,MAAO,EACT,EAEAA,GAAS,cAAgB,CACvB,MAAO,GACP,YAAa,GACb,WAAY,GACZ,kBAAmB,GACnB,aAAc,EAChB,EAEAA,GAAS,aAAe,CACtB,QAAS,GACT,KAAM,GACN,MAAO,GACP,SAAU,GACV,QAAS,GACT,QAAS,GACT,iBAAkB,GAClB,iBAAkB,GAClB,WAAY,GACZ,UAAW,GACX,UAAW,GACX,QAAS,GACT,OAAQ,GACR,SAAU,GACV,SAAU,GACV,YAAa,GACb,cAAe,GACf,cAAe,EACjB,EAGA,SAASM,GAAUJ,EAAME,EAAKC,EAAMJ,EAAQM,EAASC,EAAYC,EAAeC,EAAeC,EAAcC,EAAU,CACrH,GAAIX,GAAU,OAAOA,GAAU,UAAY,CAAC,MAAM,QAAQA,CAAM,EAAG,CACjEG,EAAIH,EAAQM,EAASC,EAAYC,EAAeC,EAAeC,EAAcC,CAAQ,EACrF,QAASC,KAAOZ,EAAQ,CACtB,IAAIa,EAAMb,EAAOY,GACjB,GAAI,MAAM,QAAQC,CAAG,GACnB,GAAID,KAAOb,GAAS,cAClB,QAASe,EAAE,EAAGA,EAAED,EAAI,OAAQC,IAC1BT,GAAUJ,EAAME,EAAKC,EAAMS,EAAIC,GAAIR,EAAU,IAAMM,EAAM,IAAME,EAAGP,EAAYD,EAASM,EAAKZ,EAAQc,CAAC,UAEhGF,KAAOb,GAAS,eACzB,GAAIc,GAAO,OAAOA,GAAO,SACvB,QAASE,KAAQF,EACfR,GAAUJ,EAAME,EAAKC,EAAMS,EAAIE,GAAOT,EAAU,IAAMM,EAAM,IAAMI,GAAcD,CAAI,EAAGR,EAAYD,EAASM,EAAKZ,EAAQe,CAAI,OAExHH,KAAOb,GAAS,UAAaE,EAAK,SAAW,EAAEW,KAAOb,GAAS,gBACxEM,GAAUJ,EAAME,EAAKC,EAAMS,EAAKP,EAAU,IAAMM,EAAKL,EAAYD,EAASM,EAAKZ,CAAM,CAEzF,CACAI,EAAKJ,EAAQM,EAASC,EAAYC,EAAeC,EAAeC,EAAcC,CAAQ,CACxF,CACF,CAGA,SAASK,GAAcC,EAAK,CAC1B,OAAOA,EAAI,QAAQ,KAAM,IAAI,EAAE,QAAQ,MAAO,IAAI,CACpD,kLCzFA,IAAAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAMMC,GAAiB,IAAI,IAAI,CAC7B,OACA,SACA,UACA,YACA,YACA,gBACA,gBACA,WACA,WACA,UACA,UACA,cACA,aACA,WACA,OACA,QACD,EAED,SAAgBC,GAAUC,EAAmBC,EAA0B,GAAI,CACzE,OAAI,OAAOD,GAAU,UAAkB,GACnCC,IAAU,GAAa,CAACC,GAAOF,CAAM,EACpCC,EACEE,GAAUH,CAAM,GAAKC,EADT,EAErB,CALAG,GAAA,UAAAL,GAOA,IAAMM,GAAe,IAAI,IAAI,CAC3B,OACA,gBACA,mBACA,cACA,iBACD,EAED,SAASH,GAAOF,EAAuB,CACrC,QAAWM,KAAON,EAAQ,CACxB,GAAIK,GAAa,IAAIC,CAAG,EAAG,MAAO,GAClC,IAAMC,EAAMP,EAAOM,GAEnB,GADI,MAAM,QAAQC,CAAG,GAAKA,EAAI,KAAKL,EAAM,GACrC,OAAOK,GAAO,UAAYL,GAAOK,CAAG,EAAG,MAAO,GAEpD,MAAO,EACT,CAEA,SAASJ,GAAUH,EAAuB,CACxC,IAAIQ,EAAQ,EACZ,QAAWF,KAAON,EAAQ,CACxB,GAAIM,IAAQ,OAAQ,MAAO,KAE3B,GADAE,IACI,CAAAV,GAAe,IAAIQ,CAAG,IACtB,OAAON,EAAOM,IAAQ,aACxBX,GAAA,UAASK,EAAOM,GAAOC,GAASC,GAASL,GAAUI,CAAG,CAAE,EAEtDC,IAAU,KAAU,MAAO,KAEjC,OAAOA,CACT,CAEA,SAAgBC,GAAYC,EAAuBC,EAAK,GAAIC,EAAmB,CACzEA,IAAc,KAAOD,EAAKE,GAAYF,CAAE,GAC5C,IAAMG,EAAIJ,EAAS,MAAMC,CAAE,EAC3B,OAAOI,GAAaL,EAAUI,CAAC,CACjC,CAJAV,GAAA,YAAAK,GAMA,SAAgBM,GAAaL,EAAuBI,EAAgB,CAElE,OADmBJ,EAAS,UAAUI,CAAC,EACrB,MAAM,GAAG,EAAE,GAAK,GACpC,CAHAV,GAAA,aAAAW,GAKA,IAAMC,GAAsB,QAC5B,SAAgBH,GAAYF,EAAsB,CAChD,OAAOA,EAAKA,EAAG,QAAQK,GAAqB,EAAE,EAAI,EACpD,CAFAZ,GAAA,YAAAS,GAIA,SAAgBI,GAAWP,EAAuBQ,EAAgBP,EAAU,CAC1E,OAAAA,EAAKE,GAAYF,CAAE,EACZD,EAAS,QAAQQ,EAAQP,CAAE,CACpC,CAHAP,GAAA,WAAAa,GAKA,IAAME,GAAS,wBAEf,SAAgBC,GAAyBpB,EAAmBkB,EAAc,CACxE,GAAI,OAAOlB,GAAU,UAAW,MAAO,CAAA,EACvC,GAAM,CAAC,SAAAqB,EAAU,YAAAC,CAAW,EAAI,KAAK,KAC/BC,EAAQV,GAAYb,EAAOqB,IAAaH,CAAM,EAC9CM,EAA0C,CAAC,GAAID,CAAK,EACpDE,EAAahB,GAAYa,EAAaC,EAAO,EAAK,EAClDG,EAAuB,CAAA,EACvBC,EAA0B,IAAI,IAEpC,OAAA9B,GAASG,EAAQ,CAAC,QAAS,EAAI,EAAG,CAACO,EAAKqB,EAASC,EAAGC,IAAiB,CACnE,GAAIA,IAAkB,OAAW,OACjC,IAAMC,EAAWN,EAAaG,EAC1BV,EAASM,EAAQM,GACjB,OAAOvB,EAAIc,IAAa,WAAUH,EAASc,EAAO,KAAK,KAAMzB,EAAIc,EAAS,GAC9EY,EAAU,KAAK,KAAM1B,EAAI,OAAO,EAChC0B,EAAU,KAAK,KAAM1B,EAAI,cAAc,EACvCiB,EAAQI,GAAWV,EAEnB,SAASc,EAAkBE,EAAW,CAEpC,IAAMC,GAAW,KAAK,KAAK,YAAY,QAEvC,GADAD,EAAMrB,GAAYK,EAASiB,GAASjB,EAAQgB,CAAG,EAAIA,CAAG,EAClDP,EAAW,IAAIO,CAAG,EAAG,MAAME,EAASF,CAAG,EAC3CP,EAAW,IAAIO,CAAG,EAClB,IAAIG,EAAW,KAAK,KAAKH,GACzB,OAAI,OAAOG,GAAY,WAAUA,EAAW,KAAK,KAAKA,IAClD,OAAOA,GAAY,SACrBC,EAAiB/B,EAAK8B,EAAS,OAAQH,CAAG,EACjCA,IAAQrB,GAAYkB,CAAQ,IACjCG,EAAI,KAAO,KACbI,EAAiB/B,EAAKmB,EAAUQ,GAAMA,CAAG,EACzCR,EAAUQ,GAAO3B,GAEjB,KAAK,KAAK2B,GAAOH,GAGdG,CACT,CAEA,SAASD,EAAqBM,EAAe,CAC3C,GAAI,OAAOA,GAAU,SAAU,CAC7B,GAAI,CAACpB,GAAO,KAAKoB,CAAM,EAAG,MAAM,IAAI,MAAM,mBAAmBA,IAAS,EACtEP,EAAO,KAAK,KAAM,IAAIO,GAAQ,EAElC,CACF,CAAC,EAEMb,EAEP,SAASY,EAAiBE,EAAiBC,EAA6BP,EAAW,CACjF,GAAIO,IAAS,QAAa,CAAC7C,GAAM4C,EAAMC,CAAI,EAAG,MAAML,EAASF,CAAG,CAClE,CAEA,SAASE,EAASF,EAAW,CAC3B,OAAO,IAAI,MAAM,cAAcA,qCAAuC,CACxE,CACF,CAxDA9B,GAAA,cAAAgB,0ICnFA,IAAAsB,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,EAAA,IACAC,EAAA,KACAC,GAAA,KACAC,GAAA,KASAC,GAAA,KASA,SAAgBC,GAAqBC,EAAa,CAChD,GAAIC,GAAYD,CAAE,IAChBE,GAAcF,CAAE,EACZG,GAAkBH,CAAE,GAAG,CACzBI,GAAiBJ,CAAE,EACnB,OAGJK,GAAiBL,EAAI,OAAMb,GAAA,sBAAqBa,CAAE,CAAC,CACrD,CATAM,GAAA,qBAAAP,GAWA,SAASM,GACP,CAAC,IAAAE,EAAK,aAAAC,EAAc,OAAAC,EAAQ,UAAAC,EAAW,KAAAC,CAAI,EAC3CC,EAAW,CAEPD,EAAK,KAAK,IACZJ,EAAI,KAAKC,KAAcd,EAAA,KAAIC,EAAA,QAAE,SAASA,EAAA,QAAE,SAAUe,EAAU,OAAQ,IAAK,CACvEH,EAAI,QAAKb,EAAA,mBAAkBmB,GAAcJ,EAAQE,CAAI,GAAG,EACxDG,GAAqBP,EAAKI,CAAI,EAC9BJ,EAAI,KAAKK,CAAI,CACf,CAAC,EAEDL,EAAI,KAAKC,KAAcd,EAAA,KAAIC,EAAA,QAAE,SAASoB,GAAkBJ,CAAI,IAAKD,EAAU,OAAQ,IACjFH,EAAI,KAAKM,GAAcJ,EAAQE,CAAI,CAAC,EAAE,KAAKC,CAAI,CAAC,CAGtD,CAEA,SAASG,GAAkBJ,EAAqB,CAC9C,SAAOjB,EAAA,MAAKC,EAAA,QAAE,oBAAoBA,EAAA,QAAE,eAAeA,EAAA,QAAE,uBAAuBA,EAAA,QAAE,YAC5EA,EAAA,QAAE,OACDgB,EAAK,cAAajB,EAAA,OAAMC,EAAA,QAAE,oBAAsBD,EAAA,SACrD,CAEA,SAASoB,GAAqBP,EAAcI,EAAqB,CAC/DJ,EAAI,GACFZ,EAAA,QAAE,OACF,IAAK,CACHY,EAAI,IAAIZ,EAAA,QAAE,gBAAcD,EAAA,KAAIC,EAAA,QAAE,UAAUA,EAAA,QAAE,cAAc,EACxDY,EAAI,IAAIZ,EAAA,QAAE,cAAYD,EAAA,KAAIC,EAAA,QAAE,UAAUA,EAAA,QAAE,YAAY,EACpDY,EAAI,IAAIZ,EAAA,QAAE,sBAAoBD,EAAA,KAAIC,EAAA,QAAE,UAAUA,EAAA,QAAE,oBAAoB,EACpEY,EAAI,IAAIZ,EAAA,QAAE,YAAUD,EAAA,KAAIC,EAAA,QAAE,UAAUA,EAAA,QAAE,UAAU,EAC5CgB,EAAK,YAAYJ,EAAI,IAAIZ,EAAA,QAAE,kBAAgBD,EAAA,KAAIC,EAAA,QAAE,UAAUA,EAAA,QAAE,gBAAgB,CACnF,EACA,IAAK,CACHY,EAAI,IAAIZ,EAAA,QAAE,gBAAcD,EAAA,MAAK,EAC7Ba,EAAI,IAAIZ,EAAA,QAAE,cAAYD,EAAA,aAAY,EAClCa,EAAI,IAAIZ,EAAA,QAAE,sBAAoBD,EAAA,aAAY,EAC1Ca,EAAI,IAAIZ,EAAA,QAAE,SAAUA,EAAA,QAAE,IAAI,EACtBgB,EAAK,YAAYJ,EAAI,IAAIZ,EAAA,QAAE,kBAAgBD,EAAA,MAAK,CACtD,CAAC,CAEL,CAEA,SAASU,GAAiBJ,EAAgB,CACxC,GAAM,CAAC,OAAAS,EAAQ,KAAAE,EAAM,IAAAJ,CAAG,EAAIP,EAC5BK,GAAiBL,EAAI,IAAK,CACpBW,EAAK,UAAYF,EAAO,UAAUO,GAAehB,CAAE,EACvDiB,GAAejB,CAAE,EACjBO,EAAI,IAAIZ,EAAA,QAAE,QAAS,IAAI,EACvBY,EAAI,IAAIZ,EAAA,QAAE,OAAQ,CAAC,EACfgB,EAAK,aAAaO,GAAelB,CAAE,EACvCmB,GAAgBnB,CAAE,EAClBoB,GAAcpB,CAAE,CAClB,CAAC,CAEH,CAEA,SAASkB,GAAelB,EAAgB,CAEtC,GAAM,CAAC,IAAAO,EAAK,aAAAC,CAAY,EAAIR,EAC5BA,EAAG,UAAYO,EAAI,MAAM,eAAab,EAAA,KAAIc,aAAwB,EAClED,EAAI,MAAGb,EAAA,KAAIM,EAAG,yBAA0B,IAAMO,EAAI,UAAOb,EAAA,KAAIM,EAAG,qBAAmBN,EAAA,aAAY,CAAC,EAChGa,EAAI,MAAGb,EAAA,KAAIM,EAAG,yBAA0B,IAAMO,EAAI,UAAOb,EAAA,KAAIM,EAAG,qBAAmBN,EAAA,aAAY,CAAC,CAClG,CAEA,SAASmB,GAAcJ,EAAmBE,EAAqB,CAC7D,IAAMU,EAAQ,OAAOZ,GAAU,UAAYA,EAAOE,EAAK,UACvD,OAAOU,IAAUV,EAAK,KAAK,QAAUA,EAAK,KAAK,YAAWjB,EAAA,mBAAkB2B,OAAa3B,EAAA,GAC3F,CAGA,SAAS4B,GAActB,EAAeuB,EAAW,CAC/C,GAAItB,GAAYD,CAAE,IAChBE,GAAcF,CAAE,EACZG,GAAkBH,CAAE,GAAG,CACzBwB,GAAiBxB,EAAIuB,CAAK,EAC1B,UAGJpC,GAAA,mBAAkBa,EAAIuB,CAAK,CAC7B,CAEA,SAASpB,GAAkB,CAAC,OAAAM,EAAQ,KAAAgB,CAAI,EAAY,CAClD,GAAI,OAAOhB,GAAU,UAAW,MAAO,CAACA,EACxC,QAAWiB,KAAOjB,EAAQ,GAAIgB,EAAK,MAAM,IAAIC,GAAM,MAAO,GAC1D,MAAO,EACT,CAEA,SAASzB,GAAYD,EAAa,CAChC,OAAO,OAAOA,EAAG,QAAU,SAC7B,CAEA,SAASwB,GAAiBxB,EAAkBuB,EAAW,CACrD,GAAM,CAAC,OAAAd,EAAQ,IAAAF,EAAK,KAAAI,CAAI,EAAIX,EACxBW,EAAK,UAAYF,EAAO,UAAUO,GAAehB,CAAE,EACvD2B,GAAc3B,CAAE,EAChB4B,GAAiB5B,CAAE,EACnB,IAAM6B,EAAYtB,EAAI,MAAM,QAASZ,EAAA,QAAE,MAAM,EAC7CwB,GAAgBnB,EAAI6B,CAAS,EAE7BtB,EAAI,IAAIgB,KAAO7B,EAAA,KAAImC,SAAiBlC,EAAA,QAAE,QAAQ,CAChD,CAEA,SAASO,GAAcF,EAAgB,IACrCH,GAAA,mBAAkBG,CAAE,EACpB8B,GAAqB9B,CAAE,CACzB,CAEA,SAASmB,GAAgBnB,EAAkB6B,EAAgB,CACzD,GAAI7B,EAAG,KAAK,IAAK,OAAO+B,GAAe/B,EAAI,CAAA,EAAI,GAAO6B,CAAS,EAC/D,IAAMG,KAAQ5C,GAAA,gBAAeY,EAAG,MAAM,EAChCiC,KAAe7C,GAAA,wBAAuBY,EAAIgC,CAAK,EACrDD,GAAe/B,EAAIgC,EAAO,CAACC,EAAcJ,CAAS,CACpD,CAEA,SAASC,GAAqB9B,EAAgB,CAC5C,GAAM,CAAC,OAAAS,EAAQ,cAAAyB,EAAe,KAAAvB,EAAM,KAAAc,CAAI,EAAIzB,EACxCS,EAAO,MAAQE,EAAK,0BAAyBd,GAAA,sBAAqBY,EAAQgB,EAAK,KAAK,GACtFA,EAAK,OAAO,KAAK,6CAA6CS,IAAgB,CAElF,CAEA,SAASjB,GAAejB,EAAgB,CACtC,GAAM,CAAC,OAAAS,EAAQ,KAAAE,CAAI,EAAIX,EACnBS,EAAO,UAAY,QAAaE,EAAK,aAAeA,EAAK,iBAC3Dd,GAAA,iBAAgBG,EAAI,uCAAuC,CAE/D,CAEA,SAAS2B,GAAc3B,EAAgB,CACrC,IAAMqB,EAAQrB,EAAG,OAAOA,EAAG,KAAK,UAC5BqB,IAAOrB,EAAG,UAASJ,GAAA,YAAWI,EAAG,KAAK,YAAaA,EAAG,OAAQqB,CAAK,EACzE,CAEA,SAASO,GAAiB5B,EAAgB,CACxC,GAAIA,EAAG,OAAO,QAAU,CAACA,EAAG,UAAU,OAAQ,MAAM,IAAI,MAAM,6BAA6B,CAC7F,CAEA,SAASgB,GAAe,CAAC,IAAAT,EAAK,UAAAG,EAAW,OAAAD,EAAQ,cAAAyB,EAAe,KAAAvB,CAAI,EAAe,CACjF,IAAMwB,EAAM1B,EAAO,SACnB,GAAIE,EAAK,WAAa,GACpBJ,EAAI,QAAKb,EAAA,KAAIC,EAAA,QAAE,mBAAmBwC,IAAM,UAC/B,OAAOxB,EAAK,UAAY,WAAY,CAC7C,IAAMyB,KAAa1C,EAAA,OAAMwC,aACnBG,EAAW9B,EAAI,WAAW,OAAQ,CAAC,IAAKG,EAAU,IAAI,CAAC,EAC7DH,EAAI,QAAKb,EAAA,KAAIC,EAAA,QAAE,sBAAsBwC,MAAQC,MAAeC,WAAkB,EAElF,CAEA,SAASjB,GAAcpB,EAAa,CAClC,GAAM,CAAC,IAAAO,EAAK,UAAAG,EAAW,aAAAF,EAAc,gBAAA8B,EAAiB,KAAA3B,CAAI,EAAIX,EAC1DU,EAAU,OAEZH,EAAI,MACFb,EAAA,KAAIC,EAAA,QAAE,eACN,IAAMY,EAAI,OAAOZ,EAAA,QAAE,IAAI,EACvB,IAAMY,EAAI,SAAMb,EAAA,SAAQ4C,KAA2B3C,EAAA,QAAE,UAAU,CAAC,GAGlEY,EAAI,UAAOb,EAAA,KAAIc,WAAuBb,EAAA,QAAE,OAAO,EAC3CgB,EAAK,aAAa4B,GAAgBvC,CAAE,EACxCO,EAAI,UAAOb,EAAA,KAAIC,EAAA,QAAE,cAAc,EAEnC,CAEA,SAAS4C,GAAgB,CAAC,IAAAhC,EAAK,UAAAiC,EAAW,MAAAC,EAAO,MAAAC,CAAK,EAAY,CAC5DD,aAAiB/C,EAAA,MAAMa,EAAI,UAAOb,EAAA,KAAI8C,UAAmBC,CAAK,EAC9DC,aAAiBhD,EAAA,MAAMa,EAAI,UAAOb,EAAA,KAAI8C,UAAmBE,CAAK,CACpE,CAEA,SAASX,GACP/B,EACAgC,EACAW,EACAd,EAAgB,CAEhB,GAAM,CAAC,IAAAtB,EAAK,OAAAE,EAAQ,KAAAmC,EAAM,UAAAC,EAAW,KAAAlC,EAAM,KAAAc,CAAI,EAAIzB,EAC7C,CAAC,MAAA8C,CAAK,EAAIrB,EAChB,GAAIhB,EAAO,OAASE,EAAK,uBAAyB,IAACd,GAAA,sBAAqBY,EAAQqC,CAAK,GAAI,CACvFvC,EAAI,MAAM,IAAMwC,GAAY/C,EAAI,OAAS8C,EAAM,IAAI,KAAc,UAAU,CAAC,EAC5E,OAEGnC,EAAK,KAAKqC,GAAiBhD,EAAIgC,CAAK,EACzCzB,EAAI,MAAM,IAAK,CACb,QAAW0C,KAASH,EAAM,MAAOI,EAAcD,CAAK,EACpDC,EAAcJ,EAAM,IAAI,CAC1B,CAAC,EAED,SAASI,EAAcD,EAAgB,CACjC,IAAC5D,GAAA,gBAAeoB,EAAQwC,CAAK,IAC7BA,EAAM,MACR1C,EAAI,MAAGjB,GAAA,eAAc2D,EAAM,KAAML,EAAMjC,EAAK,aAAa,CAAC,EAC1DwC,GAAgBnD,EAAIiD,CAAK,EACrBjB,EAAM,SAAW,GAAKA,EAAM,KAAOiB,EAAM,MAAQN,IACnDpC,EAAI,KAAI,KACRjB,GAAA,iBAAgBU,CAAE,GAEpBO,EAAI,MAAK,GAET4C,GAAgBnD,EAAIiD,CAAK,EAGtBJ,GAAWtC,EAAI,MAAGb,EAAA,KAAIC,EAAA,QAAE,cAAckC,GAAa,GAAG,EAC7D,CACF,CAEA,SAASsB,GAAgBnD,EAAkBiD,EAAgB,CACzD,GAAM,CACJ,IAAA1C,EACA,OAAAE,EACA,KAAM,CAAC,YAAA2C,CAAW,CAAC,EACjBpD,EACAoD,MAAa7D,GAAA,gBAAeS,EAAIiD,EAAM,IAAI,EAC9C1C,EAAI,MAAM,IAAK,CACb,QAAW8C,KAAQJ,EAAM,SACnB5D,GAAA,eAAcoB,EAAQ4C,CAAI,GAC5BN,GAAY/C,EAAIqD,EAAK,QAASA,EAAK,WAAYJ,EAAM,IAAI,CAG/D,CAAC,CACH,CAEA,SAASD,GAAiBhD,EAAkBgC,EAAiB,CACvDhC,EAAG,UAAU,MAAQ,CAACA,EAAG,KAAK,cAClCsD,GAAkBtD,EAAIgC,CAAK,EACtBhC,EAAG,KAAK,iBAAiBuD,GAAmBvD,EAAIgC,CAAK,EAC1DwB,GAAkBxD,EAAIA,EAAG,SAAS,EACpC,CAEA,SAASsD,GAAkBtD,EAAkBgC,EAAiB,CAC5D,GAAI,EAACA,EAAM,OACX,IAAI,CAAChC,EAAG,UAAU,OAAQ,CACxBA,EAAG,UAAYgC,EACf,OAEFA,EAAM,QAASyB,GAAK,CACbC,GAAa1D,EAAG,UAAWyD,CAAC,GAC/BE,GAAiB3D,EAAI,SAASyD,8BAA8BzD,EAAG,UAAU,KAAK,GAAG,IAAI,CAEzF,CAAC,EACDA,EAAG,UAAYA,EAAG,UAAU,OAAQyD,GAAMC,GAAa1B,EAAOyB,CAAC,CAAC,EAClE,CAEA,SAASF,GAAmBvD,EAAkB4D,EAAc,CACtDA,EAAG,OAAS,GAAK,EAAEA,EAAG,SAAW,GAAKA,EAAG,SAAS,MAAM,IAC1DD,GAAiB3D,EAAI,iDAAiD,CAE1E,CAEA,SAASwD,GAAkBxD,EAAkB4D,EAAc,CACzD,IAAMC,EAAQ7D,EAAG,KAAK,MAAM,IAC5B,QAAW8D,KAAWD,EAAO,CAC3B,IAAMR,EAAOQ,EAAMC,GACnB,GAAI,OAAOT,GAAQ,aAAYhE,GAAA,eAAcW,EAAG,OAAQqD,CAAI,EAAG,CAC7D,GAAM,CAAC,KAAAU,CAAI,EAAIV,EAAK,WAChBU,EAAK,QAAU,CAACA,EAAK,KAAMN,GAAMO,GAAkBJ,EAAIH,CAAC,CAAC,GAC3DE,GAAiB3D,EAAI,iBAAiB+D,EAAK,KAAK,GAAG,mBAAmBD,IAAU,GAIxF,CAEA,SAASE,GAAkBC,EAAmBC,EAAc,CAC1D,OAAOD,EAAM,SAASC,CAAI,GAAMA,IAAS,UAAYD,EAAM,SAAS,SAAS,CAC/E,CAEA,SAASP,GAAaE,EAAgBH,EAAW,CAC/C,OAAOG,EAAG,SAASH,CAAC,GAAMA,IAAM,WAAaG,EAAG,SAAS,QAAQ,CACnE,CAEA,SAASD,GAAiB3D,EAAkBmC,EAAW,CACrD,IAAMC,EAAapC,EAAG,UAAU,OAASA,EAAG,cAC5CmC,GAAO,QAAQC,sBACfvC,GAAA,iBAAgBG,EAAImC,EAAKnC,EAAG,KAAK,WAAW,CAC9C,CAEA,IAAamE,GAAb,KAAuB,CAiBrB,YAAYnE,EAAkBoE,EAA6BN,EAAe,CAexE,MAdAtE,GAAA,sBAAqBQ,EAAIoE,EAAKN,CAAO,EACrC,KAAK,IAAM9D,EAAG,IACd,KAAK,UAAYA,EAAG,UACpB,KAAK,QAAU8D,EACf,KAAK,KAAO9D,EAAG,KACf,KAAK,OAASA,EAAG,OAAO8D,GACxB,KAAK,MAAQM,EAAI,OAASpE,EAAG,KAAK,OAAS,KAAK,QAAU,KAAK,OAAO,MACtE,KAAK,eAAcH,GAAA,gBAAeG,EAAI,KAAK,OAAQ8D,EAAS,KAAK,KAAK,EACtE,KAAK,WAAaM,EAAI,WACtB,KAAK,aAAepE,EAAG,OACvB,KAAK,OAAS,CAAA,EACd,KAAK,GAAKA,EACV,KAAK,IAAMoE,EAEP,KAAK,MACP,KAAK,WAAapE,EAAG,IAAI,MAAM,UAAWqE,GAAQ,KAAK,MAAOrE,CAAE,CAAC,UAEjE,KAAK,WAAa,KAAK,YACnB,IAACR,GAAA,iBAAgB,KAAK,OAAQ4E,EAAI,WAAYA,EAAI,cAAc,EAClE,MAAM,IAAI,MAAM,GAAGN,mBAAyB,KAAK,UAAUM,EAAI,UAAU,GAAG,GAI5E,SAAUA,EAAMA,EAAI,YAAcA,EAAI,SAAW,MACnD,KAAK,UAAYpE,EAAG,IAAI,MAAM,QAASL,EAAA,QAAE,MAAM,EAEnD,CAEA,OAAO2E,EAAiBC,EAA4BC,EAAuB,CACzE,KAAK,cAAW9E,EAAA,KAAI4E,CAAS,EAAGC,EAAeC,CAAU,CAC3D,CAEA,WAAWF,EAAiBC,EAA4BC,EAAuB,CAC7E,KAAK,IAAI,GAAGF,CAAS,EACjBE,EAAYA,EAAU,EACrB,KAAK,MAAK,EACXD,GACF,KAAK,IAAI,KAAI,EACbA,EAAa,EACT,KAAK,WAAW,KAAK,IAAI,MAAK,GAE9B,KAAK,UAAW,KAAK,IAAI,MAAK,EAC7B,KAAK,IAAI,KAAI,CAEtB,CAEA,KAAKD,EAAiBE,EAAuB,CAC3C,KAAK,cAAW9E,EAAA,KAAI4E,CAAS,EAAG,OAAWE,CAAU,CACvD,CAEA,KAAKF,EAAgB,CACnB,GAAIA,IAAc,OAAW,CAC3B,KAAK,MAAK,EACL,KAAK,WAAW,KAAK,IAAI,GAAG,EAAK,EACtC,OAEF,KAAK,IAAI,GAAGA,CAAS,EACrB,KAAK,MAAK,EACN,KAAK,UAAW,KAAK,IAAI,MAAK,EAC7B,KAAK,IAAI,KAAI,CACpB,CAEA,UAAUA,EAAe,CACvB,GAAI,CAAC,KAAK,MAAO,OAAO,KAAK,KAAKA,CAAS,EAC3C,GAAM,CAAC,WAAAG,CAAU,EAAI,KACrB,KAAK,QAAK/E,EAAA,KAAI+E,0BAAgC/E,EAAA,IAAG,KAAK,aAAY,EAAI4E,CAAS,IAAI,CACrF,CAEA,MAAMI,EAAkBC,EAAgCC,EAAuB,CAC7E,GAAID,EAAa,CACf,KAAK,UAAUA,CAAW,EAC1B,KAAK,OAAOD,EAAQE,CAAU,EAC9B,KAAK,UAAU,CAAA,CAAE,EACjB,OAEF,KAAK,OAAOF,EAAQE,CAAU,CAChC,CAEQ,OAAOF,EAAkBE,EAAuB,EACpDF,EAAS5E,GAAA,iBAAmBA,GAAA,aAAa,KAAM,KAAK,IAAI,MAAO8E,CAAU,CAC7E,CAEA,YAAU,IACR9E,GAAA,aAAY,KAAM,KAAK,IAAI,YAAcA,GAAA,iBAAiB,CAC5D,CAEA,OAAK,CACH,GAAI,KAAK,YAAc,OAAW,MAAM,IAAI,MAAM,yCAAyC,KAC3FA,GAAA,kBAAiB,KAAK,IAAK,KAAK,SAAS,CAC3C,CAEA,GAAG+E,EAAoB,CAChB,KAAK,WAAW,KAAK,IAAI,GAAGA,CAAI,CACvC,CAEA,UAAUC,EAAuBC,EAAa,CACxCA,EAAQ,OAAO,OAAO,KAAK,OAAQD,CAAG,EACrC,KAAK,OAASA,CACrB,CAEA,WAAWvD,EAAayD,EAAuBC,EAAmBvF,EAAA,IAAG,CACnE,KAAK,IAAI,MAAM,IAAK,CAClB,KAAK,WAAW6B,EAAO0D,CAAU,EACjCD,EAAS,CACX,CAAC,CACH,CAEA,WAAWzD,EAAc7B,EAAA,IAAKuF,EAAmBvF,EAAA,IAAG,CAClD,GAAI,CAAC,KAAK,MAAO,OACjB,GAAM,CAAC,IAAAa,EAAK,WAAAkE,EAAY,WAAAS,EAAY,IAAAd,CAAG,EAAI,KAC3C7D,EAAI,MAAGb,EAAA,OAAGA,EAAA,KAAI+E,kBAA4BQ,CAAU,CAAC,EACjD1D,IAAU7B,EAAA,KAAKa,EAAI,OAAOgB,EAAO,EAAI,GACrC2D,EAAW,QAAUd,EAAI,kBAC3B7D,EAAI,OAAO,KAAK,aAAY,CAAE,EAC9B,KAAK,WAAU,EACXgB,IAAU7B,EAAA,KAAKa,EAAI,OAAOgB,EAAO,EAAK,GAE5ChB,EAAI,KAAI,CACV,CAEA,cAAY,CACV,GAAM,CAAC,IAAAA,EAAK,WAAAkE,EAAY,WAAAS,EAAY,IAAAd,EAAK,GAAApE,CAAE,EAAI,KAC/C,SAAON,EAAA,IAAGyF,EAAc,EAAIC,EAAkB,CAAE,EAEhD,SAASD,GAAc,CACrB,GAAID,EAAW,OAAQ,CAErB,GAAI,EAAET,aAAsB/E,EAAA,MAAO,MAAM,IAAI,MAAM,0BAA0B,EAC7E,IAAM2F,EAAK,MAAM,QAAQH,CAAU,EAAIA,EAAa,CAACA,CAAU,EAC/D,SAAOxF,EAAA,QAAIJ,GAAA,gBAAe+F,EAAIZ,EAAYzE,EAAG,KAAK,cAAeV,GAAA,SAAS,KAAK,IAEjF,OAAOI,EAAA,GACT,CAEA,SAAS0F,GAAkB,CACzB,GAAIhB,EAAI,eAAgB,CACtB,IAAMkB,EAAoB/E,EAAI,WAAW,gBAAiB,CAAC,IAAK6D,EAAI,cAAc,CAAC,EACnF,SAAO1E,EAAA,MAAK4F,KAAqBb,KAEnC,OAAO/E,EAAA,GACT,CACF,CAEA,UAAU6F,EAAqBhE,EAAW,CACxC,IAAMiE,KAAY/F,GAAA,cAAa,KAAK,GAAI8F,CAAI,KAC5C9F,GAAA,qBAAoB+F,EAAW,KAAK,GAAID,CAAI,KAC5C9F,GAAA,qBAAoB+F,EAAWD,CAAI,EACnC,IAAME,EAAcC,GAAAC,MAAA,GAAI,KAAK,IAAOH,GAAhB,CAA2B,MAAO,OAAW,MAAO,MAAS,GACjF,OAAAlE,GAAcmE,EAAalE,CAAK,EACzBkE,CACT,CAEA,eAAeG,EAAsBC,EAAoB,CACvD,GAAM,CAAC,GAAA7F,EAAI,IAAAO,CAAG,EAAI,KACd,CAACP,EAAG,KAAK,cACTA,EAAG,QAAU,IAAQ4F,EAAU,QAAU,SAC3C5F,EAAG,MAAQH,GAAA,eAAe,MAAMU,EAAKqF,EAAU,MAAO5F,EAAG,MAAO6F,CAAM,GAEpE7F,EAAG,QAAU,IAAQ4F,EAAU,QAAU,SAC3C5F,EAAG,MAAQH,GAAA,eAAe,MAAMU,EAAKqF,EAAU,MAAO5F,EAAG,MAAO6F,CAAM,GAE1E,CAEA,oBAAoBD,EAAsBrE,EAAW,CACnD,GAAM,CAAC,GAAAvB,EAAI,IAAAO,CAAG,EAAI,KAClB,GAAIP,EAAG,KAAK,cAAgBA,EAAG,QAAU,IAAQA,EAAG,QAAU,IAC5D,OAAAO,EAAI,GAAGgB,EAAO,IAAM,KAAK,eAAeqE,EAAWlG,EAAA,IAAI,CAAC,EACjD,EAEX,GA3LFY,GAAA,WAAA6D,GA8LA,SAASpB,GACP/C,EACA8D,EACAM,EACA0B,EAAmB,CAEnB,IAAMC,EAAM,IAAI5B,GAAWnE,EAAIoE,EAAKN,CAAO,EACvC,SAAUM,EACZA,EAAI,KAAK2B,EAAKD,CAAQ,EACbC,EAAI,OAAS3B,EAAI,YAC1B5E,GAAA,iBAAgBuG,EAAK3B,CAAG,EACf,UAAWA,KACpB5E,GAAA,kBAAiBuG,EAAK3B,CAAG,GAChBA,EAAI,SAAWA,EAAI,cAC5B5E,GAAA,iBAAgBuG,EAAK3B,CAAG,CAE5B,CAEA,IAAM4B,GAAe,sBACfC,GAAwB,mCAC9B,SAAgB5B,GACd6B,EACA,CAAC,UAAAC,EAAW,UAAAC,EAAW,YAAAC,CAAW,EAAY,CAE9C,IAAIC,EACA1D,EACJ,GAAIsD,IAAU,GAAI,OAAOvG,EAAA,QAAE,SAC3B,GAAIuG,EAAM,KAAO,IAAK,CACpB,GAAI,CAACF,GAAa,KAAKE,CAAK,EAAG,MAAM,IAAI,MAAM,yBAAyBA,GAAO,EAC/EI,EAAcJ,EACdtD,EAAOjD,EAAA,QAAE,aACJ,CACL,IAAM4G,EAAUN,GAAsB,KAAKC,CAAK,EAChD,GAAI,CAACK,EAAS,MAAM,IAAI,MAAM,yBAAyBL,GAAO,EAC9D,IAAMM,EAAa,CAACD,EAAQ,GAE5B,GADAD,EAAcC,EAAQ,GAClBD,IAAgB,IAAK,CACvB,GAAIE,GAAML,EAAW,MAAM,IAAI,MAAMM,EAAS,iBAAkBD,CAAE,CAAC,EACnE,OAAOH,EAAYF,EAAYK,GAEjC,GAAIA,EAAKL,EAAW,MAAM,IAAI,MAAMM,EAAS,OAAQD,CAAE,CAAC,EAExD,GADA5D,EAAOwD,EAAUD,EAAYK,GACzB,CAACF,EAAa,OAAO1D,EAG3B,IAAI8D,EAAO9D,EACL+D,EAAWL,EAAY,MAAM,GAAG,EACtC,QAAWM,KAAWD,EAChBC,IACFhE,KAAOlD,EAAA,KAAIkD,OAAOlD,EAAA,gBAAYG,GAAA,qBAAoB+G,CAAO,CAAC,IAC1DF,KAAOhH,EAAA,KAAIgH,QAAW9D,KAG1B,OAAO8D,EAEP,SAASD,EAASI,EAAqBL,EAAU,CAC/C,MAAO,iBAAiBK,KAAeL,iCAAkCL,GAC3E,CACF,CAtCA7F,GAAA,QAAA+D,kFCphBA,IAAqByC,GAArB,cAA6C,KAAK,CAKhD,YAAYC,EAA8B,CACxC,MAAM,mBAAmB,EACzB,KAAK,OAASA,EACd,KAAK,IAAM,KAAK,WAAa,EAC/B,GATFC,GAAA,QAAAF,kFCFA,IAAAG,GAAA,KAGqBC,GAArB,cAA6C,KAAK,CAIhD,YAAYC,EAAuBC,EAAgBC,EAAaC,EAAY,CAC1E,MAAMA,GAAO,2BAA2BD,aAAeD,GAAQ,EAC/D,KAAK,cAAaH,GAAA,YAAWE,EAAUC,EAAQC,CAAG,EAClD,KAAK,iBAAgBJ,GAAA,gBAAYA,GAAA,aAAYE,EAAU,KAAK,UAAU,CAAC,CACzE,GARFI,GAAA,QAAAL,4KCOA,IAAAM,GAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KA0DaC,GAAb,KAAsB,CAkBpB,YAAYC,EAAkB,OATrB,KAAA,KAAmB,CAAA,EACnB,KAAA,eAA2C,CAAA,EASlD,IAAIC,EACA,OAAOD,EAAI,QAAU,WAAUC,EAASD,EAAI,QAChD,KAAK,OAASA,EAAI,OAClB,KAAK,SAAWA,EAAI,SACpB,KAAK,KAAOA,EAAI,MAAQ,KACxB,KAAK,QAASE,EAAAF,EAAI,UAAM,MAAAE,IAAA,OAAAA,KAAIN,GAAA,aAAYK,GAAM,KAAA,OAANA,EAASD,EAAI,UAAY,MAAM,EACvE,KAAK,WAAaA,EAAI,WACtB,KAAK,UAAYA,EAAI,UACrB,KAAK,KAAOA,EAAI,KAChB,KAAK,OAASC,GAAM,KAAA,OAANA,EAAQ,OACtB,KAAK,KAAO,CAAA,CACd,GA9BFE,GAAA,UAAAJ,GAqCA,SAAgBK,GAAyBC,EAAc,CAErD,IAAMC,EAAOC,GAAmB,KAAK,KAAMF,CAAG,EAC9C,GAAIC,EAAM,OAAOA,EACjB,IAAME,KAASZ,GAAA,aAAY,KAAK,KAAK,YAAaS,EAAI,KAAK,MAAM,EAC3D,CAAC,IAAAI,EAAK,MAAAC,CAAK,EAAI,KAAK,KAAK,KACzB,CAAC,cAAAC,CAAa,EAAI,KAAK,KACvBC,EAAM,IAAInB,GAAA,QAAQ,KAAK,MAAO,CAAC,IAAAgB,EAAK,MAAAC,EAAO,cAAAC,CAAa,CAAC,EAC3DE,EACAR,EAAI,SACNQ,EAAmBD,EAAI,WAAW,QAAS,CACzC,IAAKlB,GAAA,QACL,QAAMD,GAAA,yDACP,GAGH,IAAMqB,EAAeF,EAAI,UAAU,UAAU,EAC7CP,EAAI,aAAeS,EAEnB,IAAMC,EAAuB,CAC3B,IAAAH,EACA,UAAW,KAAK,KAAK,UACrB,KAAMjB,GAAA,QAAE,KACR,WAAYA,GAAA,QAAE,WACd,mBAAoBA,GAAA,QAAE,mBACtB,UAAW,CAACA,GAAA,QAAE,IAAI,EAClB,YAAa,CAACF,GAAA,GAAG,EACjB,UAAW,EACX,UAAW,CAAA,EACX,kBAAmB,IAAI,IACvB,aAAcmB,EAAI,WAChB,SACA,KAAK,KAAK,KAAK,SAAW,GACtB,CAAC,IAAKP,EAAI,OAAQ,QAAMZ,GAAA,WAAUY,EAAI,MAAM,CAAC,EAC7C,CAAC,IAAKA,EAAI,MAAM,CAAC,EAEvB,aAAAS,EACA,gBAAiBD,EACjB,OAAQR,EAAI,OACZ,UAAWA,EACX,OAAAG,EACA,OAAQH,EAAI,QAAUG,EACtB,WAAYf,GAAA,IACZ,cAAeY,EAAI,aAAe,KAAK,KAAK,IAAM,GAAK,KACvD,aAAWZ,GAAA,OACX,KAAM,KAAK,KACX,KAAM,MAGJuB,EACJ,GAAI,CACF,KAAK,cAAc,IAAIX,CAAG,KAC1BP,GAAA,sBAAqBiB,CAAS,EAC9BH,EAAI,SAAS,KAAK,KAAK,KAAK,QAAQ,EAEpC,IAAMK,EAAeL,EAAI,SAAQ,EACjCI,EAAa,GAAGJ,EAAI,UAAUjB,GAAA,QAAE,KAAK,WAAWsB,IAE5C,KAAK,KAAK,KAAK,UAASD,EAAa,KAAK,KAAK,KAAK,QAAQA,EAAYX,CAAG,GAG/E,IAAMa,EADe,IAAI,SAAS,GAAGvB,GAAA,QAAE,OAAQ,GAAGA,GAAA,QAAE,QAASqB,CAAU,EACpB,KAAM,KAAK,MAAM,IAAG,CAAE,EAUzE,GATA,KAAK,MAAM,MAAMF,EAAc,CAAC,IAAKI,CAAQ,CAAC,EAE9CA,EAAS,OAAS,KAClBA,EAAS,OAASb,EAAI,OACtBa,EAAS,UAAYb,EACjBA,EAAI,SAASa,EAAmC,OAAS,IACzD,KAAK,KAAK,KAAK,SAAW,KAC5BA,EAAS,OAAS,CAAC,aAAAJ,EAAc,aAAAG,EAAc,YAAaL,EAAI,OAAO,GAErE,KAAK,KAAK,YAAa,CACzB,GAAM,CAAC,MAAAO,EAAO,MAAAC,CAAK,EAAIL,EACvBG,EAAS,UAAY,CACnB,MAAOC,aAAiB1B,GAAA,KAAO,OAAY0B,EAC3C,MAAOC,aAAiB3B,GAAA,KAAO,OAAY2B,EAC3C,aAAcD,aAAiB1B,GAAA,KAC/B,aAAc2B,aAAiB3B,GAAA,MAE7ByB,EAAS,SAAQA,EAAS,OAAO,aAAYzB,GAAA,WAAUyB,EAAS,SAAS,GAE/E,OAAAb,EAAI,SAAWa,EACRb,QACAgB,EAAP,CACA,aAAOhB,EAAI,SACX,OAAOA,EAAI,aACPW,GAAY,KAAK,OAAO,MAAM,yCAA0CA,CAAU,EAEhFK,UAEN,KAAK,cAAc,OAAOhB,CAAG,EAEjC,CA5FAF,GAAA,cAAAC,GA8FA,SAAgBkB,GAEdC,EACAC,EACAC,EAAW,OAEXA,KAAM7B,GAAA,YAAW,KAAK,KAAK,YAAa4B,EAAQC,CAAG,EACnD,IAAMC,EAAYH,EAAK,KAAKE,GAC5B,GAAIC,EAAW,OAAOA,EAEtB,IAAIpB,EAAOqB,GAAQ,KAAK,KAAMJ,EAAME,CAAG,EACvC,GAAInB,IAAS,OAAW,CACtB,IAAML,GAASC,EAAAqB,EAAK,aAAS,MAAArB,IAAA,OAAA,OAAAA,EAAGuB,GAC1B,CAAC,SAAAG,CAAQ,EAAI,KAAK,KACpB3B,IAAQK,EAAO,IAAIP,GAAU,CAAC,OAAAE,EAAQ,SAAA2B,EAAU,KAAAL,EAAM,OAAAC,CAAM,CAAC,GAGnE,GAAIlB,IAAS,OACb,OAAQiB,EAAK,KAAKE,GAAOI,GAAgB,KAAK,KAAMvB,CAAI,CAC1D,CAnBAH,GAAA,WAAAmB,GAqBA,SAASO,GAA2BxB,EAAc,CAChD,SAAIT,GAAA,WAAUS,EAAI,OAAQ,KAAK,KAAK,UAAU,EAAUA,EAAI,OACrDA,EAAI,SAAWA,EAAMD,GAAc,KAAK,KAAMC,CAAG,CAC1D,CAGA,SAAgBE,GAA8BuB,EAAiB,CAC7D,QAAWzB,KAAO,KAAK,cACrB,GAAI0B,GAAc1B,EAAKyB,CAAM,EAAG,OAAOzB,CAE3C,CAJAF,GAAA,mBAAAI,GAMA,SAASwB,GAAcC,EAAeC,EAAa,CACjD,OAAOD,EAAG,SAAWC,EAAG,QAAUD,EAAG,OAASC,EAAG,MAAQD,EAAG,SAAWC,EAAG,MAC5E,CAIA,SAASN,GAEPJ,EACAE,GAEA,IAAIpB,EACJ,KAAO,OAAQA,EAAM,KAAK,KAAKoB,KAAS,UAAUA,EAAMpB,EACxD,OAAOA,GAAO,KAAK,QAAQoB,IAAQS,GAAc,KAAK,KAAMX,EAAME,CAAG,CACvE,CAGA,SAAgBS,GAEdX,EACAE,GAEA,IAAMU,EAAI,KAAK,KAAK,YAAY,MAAMV,CAAG,EACnCW,KAAUxC,GAAA,cAAa,KAAK,KAAK,YAAauC,CAAC,EACjDX,KAAS5B,GAAA,aAAY,KAAK,KAAK,YAAa2B,EAAK,OAAQ,MAAS,EAEtE,GAAI,OAAO,KAAKA,EAAK,MAAM,EAAE,OAAS,GAAKa,IAAYZ,EACrD,OAAOa,GAAe,KAAK,KAAMF,EAAGZ,CAAI,EAG1C,IAAMe,KAAK1C,GAAA,aAAYwC,CAAO,EACxBG,EAAW,KAAK,KAAKD,IAAO,KAAK,QAAQA,GAC/C,GAAI,OAAOC,GAAY,SAAU,CAC/B,IAAMlC,EAAM6B,GAAc,KAAK,KAAMX,EAAMgB,CAAQ,EACnD,OAAI,OAAOlC,GAAG,KAAA,OAAHA,EAAK,SAAW,SAAU,OAC9BgC,GAAe,KAAK,KAAMF,EAAG9B,CAAG,EAGzC,GAAI,OAAOkC,GAAQ,KAAA,OAARA,EAAU,SAAW,SAEhC,IADKA,EAAS,UAAUnC,GAAc,KAAK,KAAMmC,CAAQ,EACrDD,OAAO1C,GAAA,aAAY6B,CAAG,EAAG,CAC3B,GAAM,CAAC,OAAAxB,CAAM,EAAIsC,EACX,CAAC,SAAAX,CAAQ,EAAI,KAAK,KAClBY,EAAQvC,EAAO2B,GACrB,OAAIY,IAAOhB,KAAS5B,GAAA,YAAW,KAAK,KAAK,YAAa4B,EAAQgB,CAAK,GAC5D,IAAIzC,GAAU,CAAC,OAAAE,EAAQ,SAAA2B,EAAU,KAAAL,EAAM,OAAAC,CAAM,CAAC,EAEvD,OAAOa,GAAe,KAAK,KAAMF,EAAGI,CAAQ,EAC9C,CA/BApC,GAAA,cAAA+B,GAiCA,IAAMO,GAAuB,IAAI,IAAI,CACnC,aACA,oBACA,OACA,eACA,cACD,EAED,SAASJ,GAEPK,EACA,CAAC,OAAAlB,EAAQ,OAAAvB,EAAQ,KAAAsB,CAAI,EAAY,OAEjC,KAAIrB,EAAAwC,EAAU,YAAQ,MAAAxC,IAAA,OAAA,OAAAA,EAAG,MAAO,IAAK,OACrC,QAAWyC,KAAQD,EAAU,SAAS,MAAM,CAAC,EAAE,MAAM,GAAG,EAAG,CACzD,GAAI,OAAOzC,GAAW,UAAW,OACjC,IAAM2C,EAAa3C,KAAOJ,GAAA,kBAAiB8C,CAAI,GAC/C,GAAIC,IAAe,OAAW,OAC9B3C,EAAS2C,EAET,IAAMJ,EAAQ,OAAOvC,GAAW,UAAYA,EAAO,KAAK,KAAK,UACzD,CAACwC,GAAqB,IAAIE,CAAI,GAAKH,IACrChB,KAAS5B,GAAA,YAAW,KAAK,KAAK,YAAa4B,EAAQgB,CAAK,GAG5D,IAAIxC,EACJ,GAAI,OAAOC,GAAU,WAAaA,EAAO,MAAQ,IAACJ,GAAA,sBAAqBI,EAAQ,KAAK,KAAK,EAAG,CAC1F,IAAM4C,KAAOjD,GAAA,YAAW,KAAK,KAAK,YAAa4B,EAAQvB,EAAO,IAAI,EAClED,EAAMkC,GAAc,KAAK,KAAMX,EAAMsB,CAAI,EAI3C,GAAM,CAAC,SAAAjB,CAAQ,EAAI,KAAK,KAExB,GADA5B,EAAMA,GAAO,IAAID,GAAU,CAAC,OAAAE,EAAQ,SAAA2B,EAAU,KAAAL,EAAM,OAAAC,CAAM,CAAC,EACvDxB,EAAI,SAAWA,EAAI,KAAK,OAAQ,OAAOA,CAE7C,kiBanUA,SAAA8C,GAAA,4BAAyBC,EAAzB,MAAAC,CAAA,EAAAC,EAAA,EAAAA,EAAAD,EAAAC,MAAAA,GAAA,UAAAA,MACKF,EAAKG,OAAS,EAAG,GACf,GAAKH,EAAK,GAAGI,MAAM,EAAG,EAAjB,UACJC,EAAKL,EAAKG,OAAS,EAChBG,EAAI,EAAGA,EAAID,EAAI,EAAEC,IACpBA,GAAKN,EAAKM,GAAGF,MAAM,EAAG,EAAjB,WAENC,GAAML,EAAKK,GAAID,MAAM,CAAf,EACJJ,EAAKO,KAAK,EAAV,cAEAP,EAAK,GAId,SAAAQ,EAAuBC,EAAvB,OACQ,MAAQA,EAAM,IAGtB,SAAAC,EAAuBC,EAAvB,QACQA,IAAMC,OAAY,YAAeD,IAAM,KAAO,OAASE,OAAOC,UAAUC,SAASC,KAAKL,CAA/B,EAAkCM,MAAM,GAAxC,EAA6CC,IAA7C,EAAmDD,MAAM,GAAzD,EAA8DE,MAA9D,EAAsEC,YAAtE,EAG/D,SAAAC,EAA4BZ,EAA5B,QACQA,EAAIY,YAAJ,EAGR,SAAAC,EAAwBC,EAAxB,QAC6BA,GAAQ,KAAQA,aAAeC,MAAQD,EAAO,OAAOA,EAAIpB,QAAW,UAAYoB,EAAIN,OAASM,EAAIE,aAAeF,EAAIP,KAAO,CAACO,CAAD,EAAQC,MAAMV,UAAUV,MAAMY,KAAKO,CAA3B,EAAoC,CAAA,EAIpM,SAAAG,EAAuBC,EAAgBC,EAAvC,KACOL,EAAMI,KACRC,UACQC,KAAOD,IACbC,GAAOD,EAAOC,UAGbN,EDnCR,SAAAO,EAA0BC,EAA1B,KAEEC,EAAU,WACVC,EAAM,UACNC,EAAU,QACVC,EAAW,UACXC,EAAWrC,EAAMmC,EAAS,UAAf,IACJ,UACPG,GAAO,UACPC,GAAe9B,EAAOA,EAAO,UAAY4B,EAAW,IAAMA,EAAWA,EAAW,IAAMA,EAAWA,CAA3E,EAAuF,IAAM5B,EAAO,cAAgB4B,EAAW,IAAMA,EAAWA,CAAnD,EAA+D,IAAM5B,EAAO,IAAM4B,EAAWA,CAAxB,CAAzK,KACA,0BACfG,GAAe,sCACfC,GAAazC,EAAM0C,GAAcF,EAApB,EACbG,GAAYX,EAAQ,8EAAgF,QACvFA,EAAQ,oBAAsB,QAC5BhC,EAAMiC,EAASE,EAAS,iBAAkBQ,EAA1C,EACfC,GAAUnC,EAAOwB,EAAUjC,EAAMiC,EAASE,EAAS,aAAxB,EAAyC,GAA1D,EACVU,GAAYpC,EAAOA,EAAO8B,GAAe,IAAMvC,EAAM8C,GAAcN,GAAc,OAAlC,CAA5B,EAA0E,GAAjF,EACZO,GAAatC,EAAOA,EAAO,SAAP,EAAoB,IAAMA,EAAO,SAAW0B,CAAlB,EAA6B,IAAM1B,EAAO,IAAM0B,EAAUA,CAAvB,EAAkC,IAAM1B,EAAO,QAAU0B,CAAjB,EAA4B,IAAMA,CAA9I,EACba,GAAqBvC,EAAOA,EAAO,SAAP,EAAoB,IAAMA,EAAO,SAAW0B,CAAlB,EAA6B,IAAM1B,EAAO,IAAM0B,EAAUA,CAAvB,EAAkC,IAAM1B,EAAO,UAAY0B,CAAnB,EAA8B,QAAUA,CAApJ,KACN1B,EAAOuC,GAAqB,MAAQA,GAAqB,MAAQA,GAAqB,MAAQA,EAA9F,EACfC,GAAOxC,EAAO4B,EAAW,OAAlB,EACPa,GAAQzC,EAAOA,EAAOwC,GAAO,MAAQA,EAAtB,EAA8B,IAAME,EAA3C,EACRC,GAAgB3C,EAAmEA,EAAOwC,GAAO,KAAd,EAAuB,MAAQC,EAAlG,KACAzC,EAAwD,SAAWA,EAAOwC,GAAO,KAAd,EAAuB,MAAQC,EAAlG,KACAzC,EAAOA,EAAwCwC,EAAxC,EAAgD,UAAYxC,EAAOwC,GAAO,KAAd,EAAuB,MAAQC,EAAlG,KACAzC,EAAOA,EAAOA,EAAOwC,GAAO,KAAd,EAAuB,QAAUA,EAAxC,EAAgD,UAAYxC,EAAOwC,GAAO,KAAd,EAAuB,MAAQC,EAAlG,KACAzC,EAAOA,EAAOA,EAAOwC,GAAO,KAAd,EAAuB,QAAUA,EAAxC,EAAgD,UAAYxC,EAAOwC,GAAO,KAAd,EAAuB,MAAQC,EAAlG,KACAzC,EAAOA,EAAOA,EAAOwC,GAAO,KAAd,EAAuB,QAAUA,EAAxC,EAAgD,UAAmBA,GAAO,MAAiBC,EAAlG,KACAzC,EAAOA,EAAOA,EAAOwC,GAAO,KAAd,EAAuB,QAAUA,EAAxC,EAAgD,UAA2CC,EAAlG,KACAzC,EAAOA,EAAOA,EAAOwC,GAAO,KAAd,EAAuB,QAAUA,EAAxC,EAAgD,UAA2CA,EAAlG,IACAxC,EAAOA,EAAOA,EAAOwC,GAAO,KAAd,EAAuB,QAAUA,EAAxC,EAAgD,SAAvD,IACDxC,EAAO,CAAC2C,GAAeC,GAAeC,GAAeC,GAAeC,GAAeC,GAAeC,GAAeC,GAAeC,CAAzH,EAAwIpD,KAAK,GAA7I,CAAP,EACfqD,EAAUpD,EAAOA,EAAOqC,GAAe,IAAMP,EAA5B,EAA4C,GAAnD,IACG9B,EAAOqD,EAAe,QAAUD,CAAhC,IACQpD,EAAOqD,EAAerD,EAAO,eAAiB4B,EAAW,MAAnC,EAA6CwB,CAAnE,IACRpD,EAAO,OAAS4B,EAAW,OAASrC,EAAM8C,GAAcN,GAAc,OAAlC,EAA6C,GAAjF,EACbuB,EAActD,EAAO,MAAQA,EAAOuD,EAAqB,IAAMF,EAAe,IAAMG,CAAvD,EAAqE,KAApF,IACFxD,EAAOA,EAAO8B,GAAe,IAAMvC,EAAM8C,GAAcN,EAApB,CAA5B,EAAiE,GAAxE,EACZ0B,EAAQzD,EAAOsD,EAAc,IAAMZ,GAAe,MAAQgB,EAAY,KAAYA,CAA1E,EACRC,EAAQ3D,EAAO0B,EAAU,GAAjB,EACRkC,EAAa5D,EAAOA,EAAOoC,GAAY,GAAnB,EAA0B,IAAMqB,EAAQzD,EAAO,MAAQ2D,CAAf,EAAwB,GAAvE,EACbE,EAAS7D,EAAO8B,GAAe,IAAMvC,EAAM8C,GAAcN,GAAc,UAAlC,CAA5B,EACT+B,EAAW9D,EAAO6D,EAAS,GAAhB,EACXE,GAAc/D,EAAO6D,EAAS,GAAhB,EACdG,GAAiBhE,EAAOA,EAAO8B,GAAe,IAAMvC,EAAM8C,GAAcN,GAAc,OAAlC,CAA5B,EAA0E,GAAjF,EACjBkC,GAAgBjE,EAAOA,EAAO,MAAQ8D,CAAf,EAA2B,GAAlC,EAChBI,GAAiBlE,EAAO,MAAQA,EAAO+D,GAAcE,EAArB,EAAsC,GAArD,KACAjE,EAAOgE,GAAiBC,EAAxB,KACAjE,EAAO+D,GAAcE,EAArB,KACH,MAAQJ,EAAS,IAC/BM,GAAQnE,EAAOiE,GAAgB,IAAMC,GAAiB,IAAME,GAAiB,IAAMC,GAAiB,IAAMC,EAAlG,EACRC,GAASvE,EAAOA,EAAO6D,EAAS,IAAMtE,EAAM,WAAYiF,EAAlB,CAAtB,EAAuD,GAA9D,EACTC,GAAYzE,EAAOA,EAAO6D,EAAS,WAAhB,EAA+B,GAAtC,EACZa,GAAa1E,EAAOA,EAAO,SAAW4D,EAAaK,EAA/B,EAAgD,IAAMC,GAAiB,IAAMG,GAAiB,IAAMC,EAA3G,EACbK,GAAO3E,EAAOmC,GAAU,MAAQuC,GAAa1E,EAAO,MAAQuE,EAAf,EAAyB,IAAMvE,EAAO,MAAQyE,EAAf,EAA4B,GAAjG,EACPG,GAAiB5E,EAAOA,EAAO,SAAW4D,EAAaK,EAA/B,EAAgD,IAAMC,GAAiB,IAAME,GAAiB,IAAME,EAA3G,EACjBO,GAAY7E,EAAO4E,GAAiB5E,EAAO,MAAQuE,EAAf,EAAyB,IAAMvE,EAAO,MAAQyE,EAAf,EAA4B,GAAnF,EACZK,GAAiB9E,EAAO2E,GAAO,IAAME,EAApB,EACjBE,GAAgB/E,EAAOmC,GAAU,MAAQuC,GAAa1E,EAAO,MAAQuE,EAAf,EAAyB,GAA/D,EAEhBS,GAAe,KAAO7C,GAAU,OAASnC,EAAOA,EAAO,UAAYA,EAAO,IAAMoC,GAAY,IAAzB,EAAiC,KAAOqB,EAAQ,IAAMzD,EAAO,OAAS2D,EAAQ,GAAxB,EAA+B,IAAxG,EAAgH,KAAOM,GAAgB,IAAMC,GAAiB,IAAMG,GAAiB,IAAMC,GAAc,GAAhN,EAAuNtE,EAAO,OAASuE,GAAS,GAAzB,EAAgC,IAAMvE,EAAO,OAASyE,GAAY,GAA5B,EAAmC,KACzUQ,GAAgB,SAAWjF,EAAOA,EAAO,UAAYA,EAAO,IAAMoC,GAAY,IAAzB,EAAiC,KAAOqB,EAAQ,IAAMzD,EAAO,OAAS2D,EAAQ,GAAxB,EAA+B,IAAxG,EAAgH,KAAOM,GAAgB,IAAMC,GAAiB,IAAME,GAAiB,IAAME,GAAc,GAAhN,EAAuNtE,EAAO,OAASuE,GAAS,GAAzB,EAAgC,IAAMvE,EAAO,OAASyE,GAAY,GAA5B,EAAmC,KAC3TS,GAAgB,KAAO/C,GAAU,OAASnC,EAAOA,EAAO,UAAYA,EAAO,IAAMoC,GAAY,IAAzB,EAAiC,KAAOqB,EAAQ,IAAMzD,EAAO,OAAS2D,EAAQ,GAAxB,EAA+B,IAAxG,EAAgH,KAAOM,GAAgB,IAAMC,GAAiB,IAAMG,GAAiB,IAAMC,GAAc,GAAhN,EAAuNtE,EAAO,OAASuE,GAAS,GAAzB,EAAgC,KACjSY,GAAe,IAAMnF,EAAO,OAASyE,GAAY,GAA5B,EAAmC,KACxDW,GAAiB,IAAMpF,EAAO,IAAMoC,GAAY,IAAzB,EAAiC,KAAOqB,EAAQ,IAAMzD,EAAO,OAAS2D,EAAQ,GAAxB,EAA+B,WAGtG,YACO,IAAI0B,OAAO9F,EAAM,MAAOiC,EAASE,EAAS,aAA/B,EAA+C,GAA1D,eACE,IAAI2D,OAAO9F,EAAM,YAAa8C,GAAcN,EAAjC,EAAgD,GAA3D,WACJ,IAAIsD,OAAO9F,EAAM,kBAAmB8C,GAAcN,EAAvC,EAAsD,GAAjE,WACA,IAAIsD,OAAO9F,EAAM,kBAAmB8C,GAAcN,EAAvC,EAAsD,GAAjE,oBACS,IAAIsD,OAAO9F,EAAM,eAAgB8C,GAAcN,EAApC,EAAmD,GAA9D,YACR,IAAIsD,OAAO9F,EAAM,SAAU8C,GAAcN,GAAc,iBAAkByC,EAA9D,EAA2E,GAAtF,eACG,IAAIa,OAAO9F,EAAM,SAAU8C,GAAcN,GAAc,gBAA5C,EAA+D,GAA1E,SACN,IAAIsD,OAAO9F,EAAM,MAAO8C,GAAcN,EAA3B,EAA0C,GAArD,aACI,IAAIsD,OAAOhD,GAAc,GAAzB,cACC,IAAIgD,OAAO9F,EAAM,SAAU8C,GAAcL,EAA9B,EAA2C,GAAtD,cACA,IAAIqD,OAAOvD,GAAc,GAAzB,cACA,IAAIuD,OAAO,KAAO3C,GAAe,IAAjC,cACA,IAAI2C,OAAO,SAAWhC,EAAe,IAAMrD,EAAOA,EAAO,eAAiB4B,EAAW,MAAnC,EAA6C,IAAMwB,EAAU,GAApE,EAA2E,QAAtH,GAIhB,IAAAkC,EAAehE,EAAU,EAAV,EDrFfiE,EAAejE,EAAU,EAAV,ijBDATkE,EAAS,WAGTC,EAAO,GACPC,EAAO,EACPC,EAAO,GACPC,EAAO,GACPC,EAAO,IACPC,EAAc,GACdC,EAAW,IACXC,GAAY,IAGZC,EAAgB,QAChBC,EAAgB,aAChBC,EAAkB,4BAGlBC,EAAS,UACF,8DACC,iEACI,iBAIZC,GAAgBZ,EAAOC,EACvBY,GAAQC,KAAKD,MACbE,GAAqBC,OAAOC,aAUlC,SAASC,GAAMC,EAAM,OACd,IAAIC,WAAWT,EAAOQ,EAAtB,EAWP,SAASE,GAAIC,EAAOC,EAAI,SACjBC,EAAS,CAAA,EACXtH,EAASoH,EAAMpH,OACZA,OACCA,GAAUqH,EAAGD,EAAMpH,EAAT,SAEXsH,EAaR,SAASC,GAAUC,EAAQH,EAAI,KACxBI,EAAQD,EAAO1G,MAAM,GAAb,EACVwG,EAAS,GACTG,EAAMzH,OAAS,MAGTyH,EAAM,GAAK,MACXA,EAAM,MAGPD,EAAOE,QAAQlB,EAAiB,GAAhC,MACHmB,EAASH,EAAO1G,MAAM,GAAb,EACT8G,EAAUT,GAAIQ,EAAQN,CAAZ,EAAgBjH,KAAK,GAArB,SACTkH,EAASM,EAgBjB,SAASC,GAAWL,EAAQ,SACrBM,EAAS,CAAA,EACXC,EAAU,EACR/H,EAASwH,EAAOxH,OACf+H,EAAU/H,GAAQ,KAClBgI,EAAQR,EAAOS,WAAWF,GAAlB,KACVC,GAAS,OAAUA,GAAS,OAAUD,EAAU/H,EAAQ,KAErDkI,EAAQV,EAAOS,WAAWF,GAAlB,GACTG,EAAQ,QAAW,QAChBC,OAAOH,EAAQ,OAAU,KAAOE,EAAQ,MAAS,KAAxD,KAIOC,KAAKH,CAAZ,cAIMG,KAAKH,CAAZ,SAGKF,EAWR,IAAMM,GAAa,SAAAhB,EAAA,QAASN,OAAOuB,cAAP,MAAA,OAAAC,EAAwBlB,CAAxB,CAAA,GAWtBmB,GAAe,SAASC,EAAW,QACpCA,EAAY,GAAO,GACfA,EAAY,GAEhBA,EAAY,GAAO,GACfA,EAAY,GAEhBA,EAAY,GAAO,GACfA,EAAY,GAEb1C,GAcF2C,GAAe,SAASC,EAAOC,EAAM,QAGnCD,EAAQ,GAAK,IAAMA,EAAQ,MAAQC,GAAQ,IAAM,IAQnDC,GAAQ,SAASC,EAAOC,EAAWC,EAAW,KAC/CC,EAAI,QACAD,EAAYpC,GAAMkC,EAAQ3C,CAAd,EAAsB2C,GAAS,KAC1ClC,GAAMkC,EAAQC,CAAd,EACqBD,EAAQnC,GAAgBV,GAAQ,EAAGgD,GAAKlD,IAC7Da,GAAMkC,EAAQnC,EAAd,SAEFC,GAAMqC,GAAKtC,GAAgB,GAAKmC,GAASA,EAAQ5C,EAAjD,GAUFgD,GAAS,SAASC,EAAO,KAExBpB,EAAS,CAAA,EACTqB,EAAcD,EAAMlJ,OACtBoJ,EAAI,EACJC,EAAIjD,EACJkD,EAAOnD,EAMPoD,GAAQL,EAAMM,YAAYnD,EAAlB,EACRkD,GAAQ,OACH,WAGAE,GAAI,EAAGA,GAAIF,GAAO,EAAEE,GAExBP,EAAMjB,WAAWwB,EAAjB,GAAuB,QACpB,WAAN,IAEMtB,KAAKe,EAAMjB,WAAWwB,EAAjB,CAAZ,UAMQC,GAAQH,GAAQ,EAAIA,GAAQ,EAAI,EAAGG,GAAQP,GAAwC,SAOvFQ,GAAOP,EACFQ,GAAI,EAAGZ,GAAIlD,GAA0BkD,IAAKlD,EAAM,CAEpD4D,IAASP,MACN,eAAN,MAGKT,GAAQH,GAAaW,EAAMjB,WAAWyB,IAAjB,CAAb,GAEVhB,IAAS5C,GAAQ4C,GAAQ/B,IAAOd,EAASuD,GAAKQ,EAArB,OACtB,UAAN,KAGIlB,GAAQkB,OACPC,GAAIb,IAAKM,EAAOvD,EAAQiD,IAAKM,EAAOtD,EAAOA,EAAOgD,GAAIM,KAExDZ,GAAQmB,aAINC,GAAahE,EAAO+D,GACtBD,GAAIjD,GAAMd,EAASiE,EAAf,MACD,UAAN,MAGIA,OAIAC,GAAMjC,EAAO9H,OAAS,IACrB4I,GAAMQ,EAAIO,GAAMI,GAAKJ,IAAQ,CAA7B,EAIHhD,GAAMyC,EAAIW,EAAV,EAAiBlE,EAASwD,MACvB,UAAN,KAGI1C,GAAMyC,EAAIW,EAAV,KACAA,KAGEC,OAAOZ,IAAK,EAAGC,CAAtB,SAIMvC,OAAOuB,cAAP,MAAA,OAAwBP,CAAxB,GAUFmC,GAAS,SAASf,EAAO,KACxBpB,EAAS,CAAA,IAGPD,GAAWqB,CAAX,MAGJC,EAAcD,EAAMlJ,OAGpBqJ,EAAIjD,EACJyC,EAAQ,EACRS,EAAOnD,uCAGgB+C,EAA3B,OAAA,UAAA,EAAAgB,GAAA,EAAAC,IAAAD,GAAAE,GAAA,KAAA,GAAA,MAAAD,GAAA,GAAkC,KAAvBE,GAAuBH,GAAA,MAC7BG,GAAe,OACXlC,KAAKtB,GAAmBwD,EAAnB,CAAZ,2FAIEC,GAAcxC,EAAO9H,OACrBuK,GAAiBD,OAMjBA,MACInC,KAAK9B,EAAZ,EAIMkE,GAAiBpB,GAAa,KAIhCqB,GAAI3E,uCACmBqD,EAA3B,OAAA,UAAA,EAAAuB,GAAA,EAAAC,IAAAD,GAAAE,GAAA,KAAA,GAAA,MAAAD,GAAA,GAAkC,KAAvBL,GAAuBI,GAAA,MAC7BJ,IAAgBhB,GAAKgB,GAAeG,QACnCH,6FAMAO,GAAwBL,GAAiB,EAC3CC,GAAInB,EAAI1C,IAAOd,EAASgD,GAAS+B,EAAzB,MACL,UAAN,MAGSJ,GAAInB,GAAKuB,KACfJ,4CAEuBtB,EAA3B,OAAA,UAAA,EAAA2B,GAAA,EAAAC,IAAAD,GAAAE,GAAA,KAAA,GAAA,MAAAD,GAAA,GAAkC,KAAvBT,GAAuBQ,GAAA,SAC7BR,GAAehB,GAAK,EAAER,EAAQhD,MAC3B,UAAN,EAEGwE,IAAgBhB,EAAG,SAElB2B,GAAInC,EACCG,EAAIlD,GAA0BkD,GAAKlD,EAAM,KAC3C+D,EAAIb,GAAKM,EAAOvD,EAAQiD,GAAKM,EAAOtD,EAAOA,EAAOgD,EAAIM,KACxD0B,GAAInB,YAGFoB,EAAUD,GAAInB,EACdC,EAAahE,EAAO+D,IACnB1B,KACNtB,GAAmB4B,GAAaoB,EAAIoB,EAAUnB,EAAY,CAAvC,CAAnB,CADD,KAGInD,GAAMsE,EAAUnB,CAAhB,IAGE3B,KAAKtB,GAAmB4B,GAAauC,GAAG,CAAhB,CAAnB,CAAZ,IACOpC,GAAMC,EAAO+B,GAAuBL,IAAkBD,EAAtD,IACC,IACNC,2FAIF1B,IACAQ,SAGIvB,EAAO1H,KAAK,EAAZ,GAcF8K,GAAY,SAAShC,EAAO,QAC1B3B,GAAU2B,EAAO,SAAS1B,EAAQ,QACjClB,EAAc6E,KAAK3D,CAAnB,EACJyB,GAAOzB,EAAOvH,MAAM,CAAb,EAAgBgB,YAAhB,CAAP,EACAuG,EAHG,GAkBF4D,GAAU,SAASlC,EAAO,QACxB3B,GAAU2B,EAAO,SAAS1B,EAAQ,QACjCjB,EAAc4E,KAAK3D,CAAnB,EACJ,OAASyC,GAAOzC,CAAP,EACTA,EAHG,GAUF6D,GAAW,SAML,aAQH,QACGxD,UACAO,WAEDa,UACAgB,WACCmB,aACEF,ID5VDI,GAA6C,CAAA,EAE1D,SAAAC,GAA2BC,EAA3B,KACOC,EAAID,EAAIvD,WAAW,CAAf,EACNyD,EAAAA,cAEAD,EAAI,GAAIC,EAAI,KAAOD,EAAE7K,SAAS,EAAX,EAAeM,YAAf,EACduK,EAAI,IAAKC,EAAI,IAAMD,EAAE7K,SAAS,EAAX,EAAeM,YAAf,EACnBuK,EAAI,KAAMC,EAAI,KAAQD,GAAK,EAAK,KAAK7K,SAAS,EAA1B,EAA8BM,YAA9B,EAA8C,KAAQuK,EAAI,GAAM,KAAK7K,SAAS,EAA1B,EAA8BM,YAA9B,EAC5EwK,EAAI,KAAQD,GAAK,GAAM,KAAK7K,SAAS,EAA3B,EAA+BM,YAA/B,EAA+C,KAASuK,GAAK,EAAK,GAAM,KAAK7K,SAAS,EAAjC,EAAqCM,YAArC,EAAqD,KAAQuK,EAAI,GAAM,KAAK7K,SAAS,EAA1B,EAA8BM,YAA9B,EAExHwK,EAGR,SAAAC,GAA4BrL,EAA5B,SACKsL,EAAS,GACTxC,EAAI,EACFyC,EAAKvL,EAAIN,OAERoJ,EAAIyC,GAAI,KACRJ,EAAIK,SAASxL,EAAIyL,OAAO3C,EAAI,EAAG,CAAlB,EAAsB,EAA/B,KAENqC,EAAI,OACG3E,OAAOC,aAAa0E,CAApB,KACL,UAEGA,GAAK,KAAOA,EAAI,IAAK,IACxBI,EAAKzC,GAAM,EAAG,KACZ4C,EAAKF,SAASxL,EAAIyL,OAAO3C,EAAI,EAAG,CAAlB,EAAsB,EAA/B,KACDtC,OAAOC,cAAe0E,EAAI,KAAO,EAAMO,EAAK,EAA5C,UAEA1L,EAAIyL,OAAO3C,EAAG,CAAd,KAEN,UAEGqC,GAAK,IAAK,IACbI,EAAKzC,GAAM,EAAG,KACZ4C,EAAKF,SAASxL,EAAIyL,OAAO3C,EAAI,EAAG,CAAlB,EAAsB,EAA/B,EACL6C,GAAKH,SAASxL,EAAIyL,OAAO3C,EAAI,EAAG,CAAlB,EAAsB,EAA/B,KACDtC,OAAOC,cAAe0E,EAAI,KAAO,IAAQO,EAAK,KAAO,EAAMC,GAAK,EAAhE,UAEA3L,EAAIyL,OAAO3C,EAAG,CAAd,KAEN,UAGK9I,EAAIyL,OAAO3C,EAAG,CAAd,KACL,SAIAwC,EAGR,SAAAM,GAAqCC,EAA0BC,EAA/D,UACAC,EAA2B/L,EAA3B,KACQgM,EAASX,GAAYrL,CAAZ,SACNgM,EAAOC,MAAMH,EAASI,UAAtB,EAA0CF,EAANhM,SAG1C6L,EAAWM,SAAQN,EAAWM,OAAS3F,OAAOqF,EAAWM,MAAlB,EAA0B/E,QAAQ0E,EAASM,YAAaL,CAAxD,EAA0EpL,YAA1E,EAAwFyG,QAAQ0E,EAASO,WAAY,EAArH,GACvCR,EAAWS,WAAanM,SAAW0L,EAAWS,SAAW9F,OAAOqF,EAAWS,QAAlB,EAA4BlF,QAAQ0E,EAASM,YAAaL,CAA1D,EAA4E3E,QAAQ0E,EAASS,aAActB,EAA3G,EAAuH7D,QAAQ0E,EAASM,YAAaxL,CAArJ,GACzDiL,EAAWW,OAASrM,SAAW0L,EAAWW,KAAOhG,OAAOqF,EAAWW,IAAlB,EAAwBpF,QAAQ0E,EAASM,YAAaL,CAAtD,EAAwEpL,YAAxE,EAAsFyG,QAAQ0E,EAASW,SAAUxB,EAAjH,EAA6H7D,QAAQ0E,EAASM,YAAaxL,CAA3J,GACjDiL,EAAWa,OAASvM,SAAW0L,EAAWa,KAAOlG,OAAOqF,EAAWa,IAAlB,EAAwBtF,QAAQ0E,EAASM,YAAaL,CAAtD,EAAwE3E,QAASyE,EAAWM,OAASL,EAASa,SAAWb,EAASc,kBAAoB3B,EAAtJ,EAAkK7D,QAAQ0E,EAASM,YAAaxL,CAAhM,GACjDiL,EAAWgB,QAAU1M,SAAW0L,EAAWgB,MAAQrG,OAAOqF,EAAWgB,KAAlB,EAAyBzF,QAAQ0E,EAASM,YAAaL,CAAvD,EAAyE3E,QAAQ0E,EAASgB,UAAW7B,EAArG,EAAiH7D,QAAQ0E,EAASM,YAAaxL,CAA/I,GACnDiL,EAAWkB,WAAa5M,SAAW0L,EAAWkB,SAAWvG,OAAOqF,EAAWkB,QAAlB,EAA4B3F,QAAQ0E,EAASM,YAAaL,CAA1D,EAA4E3E,QAAQ0E,EAASkB,aAAc/B,EAA3G,EAAuH7D,QAAQ0E,EAASM,YAAaxL,CAArJ,GAEtDiL,EAGR,SAAAoB,GAA4BjN,EAA5B,QACQA,EAAIoH,QAAQ,UAAW,IAAvB,GAAgC,IAGxC,SAAA8F,GAAwBV,EAAaV,EAArC,KACOqB,EAAUX,EAAKP,MAAMH,EAASsB,WAApB,GAAoC,CAAA,MAChCD,EAFrB,CAAA,EAEUE,EAFVC,EAAA,UAIKD,EACIA,EAAQ7M,MAAM,GAAd,EAAmBqG,IAAIoG,EAAvB,EAA2CnN,KAAK,GAAhD,EAEA0M,EAIT,SAAAe,GAAwBf,EAAaV,EAArC,KACOqB,EAAUX,EAAKP,MAAMH,EAAS0B,WAApB,GAAoC,CAAA,MAC1BL,EAF3B,CAAA,EAEUE,EAFVI,EAAA,GAEmBC,EAFnBD,EAAA,MAIKJ,EAAS,WACUA,EAAQ1M,YAAR,EAAsBH,MAAM,IAA5B,EAAkCmN,QAAlC,YAAfC,GADKC,GAAA,GACCC,GADDD,GAAA,GAENE,GAAcD,GAAQA,GAAMtN,MAAM,GAAZ,EAAiBqG,IAAIoG,EAArB,EAA2C,CAAA,EACjEe,GAAaJ,GAAKpN,MAAM,GAAX,EAAgBqG,IAAIoG,EAApB,EACbgB,GAAyBnC,EAASsB,YAAYvC,KAAKmD,GAAWA,GAAWtO,OAAS,EAAzD,EACzBwO,GAAaD,GAAyB,EAAI,EAC1CE,GAAkBH,GAAWtO,OAASwO,GACtCE,GAASrN,MAAcmN,EAAd,EAENrO,GAAI,EAAGA,GAAIqO,GAAY,EAAErO,MAC1BA,IAAKkO,GAAYlO,KAAMmO,GAAWG,GAAkBtO,KAAM,GAG9DoO,QACIC,GAAa,GAAKhB,GAAekB,GAAOF,GAAa,GAAIpC,CAAvC,OAGpBuC,GAAgBD,GAAOE,OAA4C,SAACC,GAAKC,GAAOpF,GAAxF,IACO,CAACoF,IAASA,KAAU,IAAK,KACtBC,GAAcF,GAAIA,GAAI7O,OAAS,GACjC+O,IAAeA,GAAYrF,MAAQqF,GAAY/O,SAAW0J,MACjD1J,YAERmI,KAAK,CAAEuB,MAAAA,GAAO1J,OAAS,CAAlB,CAAT,SAGK6O,IACL,CAAA,CAVmB,EAYhBG,GAAoBL,GAAcM,KAAK,SAACC,GAAGC,GAAJ,QAAUA,GAAEnP,OAASkP,GAAElP,OAA1C,EAAkD,GAExEoP,GAAAA,UACAJ,IAAqBA,GAAkBhP,OAAS,EAAG,KAChDqP,GAAWX,GAAOzO,MAAM,EAAG+O,GAAkBtF,KAAlC,EACX4F,GAAUZ,GAAOzO,MAAM+O,GAAkBtF,MAAQsF,GAAkBhP,MAAzD,KACNqP,GAASjP,KAAK,GAAd,EAAqB,KAAOkP,GAAQlP,KAAK,GAAb,UAE5BsO,GAAOtO,KAAK,GAAZ,SAGP4N,QACQ,IAAMA,GAGXoB,eAEAtC,EAIT,IAAMyC,GAAY,kIACZC,GAA4C,GAAIjD,MAAM,OAAX,EAAqB,KAAO9L,OAE7E,SAAAgP,GAAsBC,EAAtB,KAAwCC,EAAxC,UAAA,OAAA,GAAA,UAAA,KAAA,OAAA,UAAA,GAA6D,CAAA,EACtDxD,EAA2B,CAAA,EAC3BC,EAAYuD,EAAQC,MAAQ,GAAQhK,EAAeD,EAErDgK,EAAQE,YAAc,WAAUH,GAAaC,EAAQlD,OAASkD,EAAQlD,OAAS,IAAM,IAAM,KAAOiD,OAEhGjC,EAAUiC,EAAUnD,MAAMgD,EAAhB,KAEZ9B,EAAS,CACR+B,MAEQ/C,OAASgB,EAAQ,KACjBb,SAAWa,EAAQ,KACnBX,KAAOW,EAAQ,KACfqC,KAAOhE,SAAS2B,EAAQ,GAAI,EAArB,IACPT,KAAOS,EAAQ,IAAM,KACrBN,MAAQM,EAAQ,KAChBJ,SAAWI,EAAQ,GAG1BsC,MAAM5D,EAAW2D,IAAjB,MACQA,KAAOrC,EAAQ,QAIhBhB,OAASgB,EAAQ,IAAMhN,SACvBmM,SAAY8C,EAAUM,QAAQ,GAAlB,IAA2B,GAAKvC,EAAQ,GAAKhN,SACzDqM,KAAQ4C,EAAUM,QAAQ,IAAlB,IAA4B,GAAKvC,EAAQ,GAAKhN,SACtDqP,KAAOhE,SAAS2B,EAAQ,GAAI,EAArB,IACPT,KAAOS,EAAQ,IAAM,KACrBN,MAASuC,EAAUM,QAAQ,GAAlB,IAA2B,GAAKvC,EAAQ,GAAKhN,SACtD4M,SAAYqC,EAAUM,QAAQ,GAAlB,IAA2B,GAAKvC,EAAQ,GAAKhN,OAGhEsP,MAAM5D,EAAW2D,IAAjB,MACQA,KAAQJ,EAAUnD,MAAM,+BAAhB,EAAmDkB,EAAQ,GAAKhN,SAIjF0L,EAAWW,SAEHA,KAAOe,GAAeL,GAAerB,EAAWW,KAAMV,CAAhC,EAA2CA,CAA1D,GAIfD,EAAWM,SAAWhM,QAAa0L,EAAWS,WAAanM,QAAa0L,EAAWW,OAASrM,QAAa0L,EAAW2D,OAASrP,QAAa,CAAC0L,EAAWa,MAAQb,EAAWgB,QAAU1M,SAC3KoP,UAAY,gBACb1D,EAAWM,SAAWhM,SACrBoP,UAAY,WACb1D,EAAWkB,WAAa5M,SACvBoP,UAAY,aAEZA,UAAY,MAIpBF,EAAQE,WAAaF,EAAQE,YAAc,UAAYF,EAAQE,YAAc1D,EAAW0D,cAChF7I,MAAQmF,EAAWnF,OAAS,gBAAkB2I,EAAQE,UAAY,mBAIxEI,EAAgB3E,IAASqE,EAAQlD,QAAUN,EAAWM,QAAU,IAAIxL,YAA5C,MAG1B,CAAC0O,EAAQO,iBAAmB,CAACD,GAAiB,CAACA,EAAcC,gBAAiB,IAE7E/D,EAAWW,OAAS6C,EAAQQ,YAAeF,GAAiBA,EAAcE,eAEzE,GACQrD,KAAOzB,GAASD,QAAQe,EAAWW,KAAKpF,QAAQ0E,EAASM,YAAaf,EAA9C,EAA2D1K,YAA3D,CAAjB,QACVyK,EAAP,GACU1E,MAAQmF,EAAWnF,OAAS,kEAAoE0E,KAIjFS,EAAYxG,CAAxC,UAG4BwG,EAAYC,CAAxC,EAIG6D,GAAiBA,EAAcR,SACpBA,MAAMtD,EAAYwD,CAAhC,SAGU3I,MAAQmF,EAAWnF,OAAS,gCAGjCmF,EAGR,SAAAiE,GAA6BjE,EAA0BwD,EAAvD,KACOvD,EAAYuD,EAAQC,MAAQ,GAAQhK,EAAeD,EACnD0K,EAA0B,CAAA,SAE5BlE,EAAWS,WAAanM,WACjB0H,KAAKgE,EAAWS,QAA1B,IACUzE,KAAK,GAAf,GAGGgE,EAAWW,OAASrM,UAEb0H,KAAK0F,GAAeL,GAAe1G,OAAOqF,EAAWW,IAAlB,EAAyBV,CAAxC,EAAmDA,CAAlE,EAA4E1E,QAAQ0E,EAAS0B,YAAa,SAACwC,EAAGC,EAAIC,EAAR,OAAe,IAAMD,GAAMC,EAAK,MAAQA,EAAK,IAAM,IAA7J,CAAf,GAGG,OAAOrE,EAAW2D,MAAS,UAAY,OAAO3D,EAAW2D,MAAS,cAC3D3H,KAAK,GAAf,IACUA,KAAKrB,OAAOqF,EAAW2D,IAAlB,CAAf,GAGMO,EAAUrQ,OAASqQ,EAAUjQ,KAAK,EAAf,EAAqBK,OAGhD,IAAMgQ,GAAO,WACPC,GAAO,cACPC,GAAO,gBAEPC,GAAO,yBAEb,SAAAC,GAAkC3H,EAAlC,SACOpB,EAAuB,CAAA,EAEtBoB,EAAMlJ,WACRkJ,EAAMqD,MAAMkE,EAAZ,IACKvH,EAAMxB,QAAQ+I,GAAM,EAApB,UACEvH,EAAMqD,MAAMmE,EAAZ,IACFxH,EAAMxB,QAAQgJ,GAAM,GAApB,UACExH,EAAMqD,MAAMoE,EAAZ,IACFzH,EAAMxB,QAAQiJ,GAAM,GAApB,IACD5P,IAAP,UACUmI,IAAU,KAAOA,IAAU,OAC7B,OACF,KACA4H,EAAK5H,EAAMqD,MAAMqE,EAAZ,KACPE,EAAI,KACDC,EAAID,EAAG,KACL5H,EAAMjJ,MAAM8Q,EAAE/Q,MAAd,IACDmI,KAAK4I,CAAZ,aAEM,IAAIC,MAAM,kCAAV,SAKFlJ,EAAO1H,KAAK,EAAZ,EAGR,SAAA6Q,GAA0B9E,EAA1B,KAAoDwD,EAApD,UAAA,OAAA,GAAA,UAAA,KAAA,OAAA,UAAA,GAAyE,CAAA,EAClEvD,EAAYuD,EAAQC,IAAMhK,EAAeD,EACzC0K,EAA0B,CAAA,EAG1BJ,EAAgB3E,IAASqE,EAAQlD,QAAUN,EAAWM,QAAU,IAAIxL,YAA5C,MAG1BgP,GAAiBA,EAAcgB,WAAWhB,EAAcgB,UAAU9E,EAAYwD,CAApC,EAE1CxD,EAAWW,MAEVV,CAAAA,EAAS0B,YAAY3C,KAAKgB,EAAWW,IAArC,GAKC,GAAI6C,EAAQQ,YAAeF,GAAiBA,EAAcE,cAE1D,GACQrD,KAAS6C,EAAQC,IAAmGvE,GAASH,UAAUiB,EAAWW,IAA9B,EAA7FzB,GAASD,QAAQe,EAAWW,KAAKpF,QAAQ0E,EAASM,YAAaf,EAA9C,EAA2D1K,YAA3D,CAAjB,QAC1ByK,GAAP,GACU1E,MAAQmF,EAAWnF,OAAS,+CAAkD2I,EAAQC,IAAgB,UAAV,SAAuB,kBAAoBlE,OAMzHS,EAAYC,CAAxC,EAEIuD,EAAQE,YAAc,UAAY1D,EAAWM,WACtCtE,KAAKgE,EAAWM,MAA1B,IACUtE,KAAK,GAAf,OAGK+I,EAAYd,GAAoBjE,EAAYwD,CAAhC,KACduB,IAAczQ,SACbkP,EAAQE,YAAc,YACf1H,KAAK,IAAf,IAGSA,KAAK+I,CAAf,EAEI/E,EAAWa,MAAQb,EAAWa,KAAKmE,OAAO,CAAvB,IAA8B,OAC1ChJ,KAAK,GAAf,GAIEgE,EAAWa,OAASvM,OAAW,KAC9BsQ,EAAI5E,EAAWa,KAEf,CAAC2C,EAAQyB,eAAiB,CAACnB,GAAiB,CAACA,EAAcmB,kBAC1DP,GAAkBE,CAAlB,GAGDG,IAAczQ,WACbsQ,EAAErJ,QAAQ,QAAS,MAAnB,KAGKS,KAAK4I,CAAf,SAGG5E,EAAWgB,QAAU1M,WACd0H,KAAK,GAAf,IACUA,KAAKgE,EAAWgB,KAA1B,GAGGhB,EAAWkB,WAAa5M,WACjB0H,KAAK,GAAf,IACUA,KAAKgE,EAAWkB,QAA1B,GAGMgD,EAAUjQ,KAAK,EAAf,EAGR,SAAAiR,GAAkCvL,EAAoBwL,EAAtD,KAA8E3B,EAA9E,UAAA,OAAA,GAAA,UAAA,KAAA,OAAA,UAAA,GAAmG,CAAA,EAAI4B,EAAvG,UAAA,GACO/P,EAAuB,CAAA,SAExB+P,MACG9B,GAAMwB,GAAUnL,EAAM6J,CAAhB,EAA0BA,CAAhC,IACIF,GAAMwB,GAAUK,EAAU3B,CAApB,EAA8BA,CAApC,KAEFA,GAAW,CAAA,EAEjB,CAACA,EAAQ6B,UAAYF,EAAS7E,UAC1BA,OAAS6E,EAAS7E,SAElBG,SAAW0E,EAAS1E,WACpBE,KAAOwE,EAASxE,OAChBgD,KAAOwB,EAASxB,OAChB9C,KAAO6D,GAAkBS,EAAStE,MAAQ,EAAnC,IACPG,MAAQmE,EAASnE,QAEpBmE,EAAS1E,WAAanM,QAAa6Q,EAASxE,OAASrM,QAAa6Q,EAASxB,OAASrP,UAEhFmM,SAAW0E,EAAS1E,WACpBE,KAAOwE,EAASxE,OAChBgD,KAAOwB,EAASxB,OAChB9C,KAAO6D,GAAkBS,EAAStE,MAAQ,EAAnC,IACPG,MAAQmE,EAASnE,QAEnBmE,EAAStE,MAQTsE,EAAStE,KAAKmE,OAAO,CAArB,IAA4B,MACxBnE,KAAO6D,GAAkBS,EAAStE,IAA3B,IAETlH,EAAK8G,WAAanM,QAAaqF,EAAKgH,OAASrM,QAAaqF,EAAKgK,OAASrP,SAAc,CAACqF,EAAKkH,OACzFA,KAAO,IAAMsE,EAAStE,KAClBlH,EAAKkH,OAGTA,KAAOlH,EAAKkH,KAAK/M,MAAM,EAAG6F,EAAKkH,KAAKxD,YAAY,GAAtB,EAA6B,CAAhD,EAAqD8H,EAAStE,OAFrEA,KAAOsE,EAAStE,OAIjBA,KAAO6D,GAAkBrP,EAAOwL,IAAzB,KAERG,MAAQmE,EAASnE,UAnBjBH,KAAOlH,EAAKkH,KACfsE,EAASnE,QAAU1M,SACf0M,MAAQmE,EAASnE,QAEjBA,MAAQrH,EAAKqH,SAkBfP,SAAW9G,EAAK8G,WAChBE,KAAOhH,EAAKgH,OACZgD,KAAOhK,EAAKgK,QAEbrD,OAAS3G,EAAK2G,UAGfY,SAAWiE,EAASjE,SAEpB7L,EAGR,SAAAiQ,GAAwBC,EAAgBC,EAAoBhC,EAA5D,KACOiC,EAAoBrQ,EAAO,CAAEkL,OAAS,MAAX,EAAqBkD,CAA5B,SACnBsB,GAAUI,GAAkB5B,GAAMiC,EAASE,CAAf,EAAmCnC,GAAMkC,EAAaC,CAAnB,EAAuCA,EAAmB,EAA/G,EAAsHA,CAAhI,EAKR,SAAAC,GAA0BC,EAASnC,EAAnC,QACK,OAAOmC,GAAQ,WACZb,GAAUxB,GAAMqC,EAAKnC,CAAX,EAAqBA,CAA/B,EACIpP,EAAOuR,CAAP,IAAgB,aACpBrC,GAAMwB,GAAyBa,EAAKnC,CAA9B,EAAwCA,CAA9C,GAGAmC,EAKR,SAAAC,GAAsBC,EAAUC,EAAUtC,EAA1C,QACK,OAAOqC,GAAS,WACZf,GAAUxB,GAAMuC,EAAMrC,CAAZ,EAAsBA,CAAhC,EACGpP,EAAOyR,CAAP,IAAiB,aACpBf,GAAyBe,EAAMrC,CAA/B,GAGJ,OAAOsC,GAAS,WACZhB,GAAUxB,GAAMwC,EAAMtC,CAAZ,EAAsBA,CAAhC,EACGpP,EAAO0R,CAAP,IAAiB,aACpBhB,GAAyBgB,EAAMtC,CAA/B,GAGDqC,IAASC,EAGjB,SAAAC,GAAgC5R,EAAYqP,EAA5C,QACQrP,GAAOA,EAAIM,SAAJ,EAAe8G,QAAS,CAACiI,GAAW,CAACA,EAAQC,IAAMjK,EAAawM,OAASvM,EAAauM,OAAS5G,EAA/F,EAGf,SAAA6G,GAAkC9R,EAAYqP,EAA9C,QACQrP,GAAOA,EAAIM,SAAJ,EAAe8G,QAAS,CAACiI,GAAW,CAACA,EAAQC,IAAMjK,EAAa+G,YAAc9G,EAAa8G,YAAcf,EAAzG,EDxiBf,IAAM0G,GAA2B,QACvB,kBAEI,SAEL,SAAUlG,EAA0BwD,EAA7C,QAEOxD,EAAWW,SACJ9F,MAAQmF,EAAWnF,OAAS,+BAGjCmF,aAGI,SAAUA,EAA0BwD,EAAjD,KACQ2C,EAASxL,OAAOqF,EAAWM,MAAlB,EAA0BxL,YAA1B,IAA4C,eAGvDkL,EAAW2D,QAAUwC,EAAS,IAAM,KAAOnG,EAAW2D,OAAS,QACvDA,KAAOrP,QAId0L,EAAWa,SACJA,KAAO,KAOZb,ID9BHkG,GAA2B,QACvB,mBACIE,GAAKpC,iBACVoC,GAAK9C,gBACD8C,GAAKtB,WDAlB,SAAAuB,GAAkBC,EAAlB,QACQ,OAAOA,EAAaH,QAAW,UAAYG,EAAaH,OAASxL,OAAO2L,EAAahG,MAApB,EAA4BxL,YAA5B,IAA8C,MAIvH,IAAMoR,GAA2B,QACvB,gBAEI,SAEL,SAAUlG,EAA0BwD,EAA7C,KACQ8C,EAAetG,WAGRmG,OAASE,GAASC,CAAT,IAGTC,cAAgBD,EAAazF,MAAQ,MAAQyF,EAAatF,MAAQ,IAAMsF,EAAatF,MAAQ,MAC7FH,KAAOvM,SACP0M,MAAQ1M,OAEdgS,aAGI,SAAUA,EAA2B9C,EAAlD,KAEM8C,EAAa3C,QAAU0C,GAASC,CAAT,EAAyB,IAAM,KAAOA,EAAa3C,OAAS,QACzEA,KAAOrP,QAIjB,OAAOgS,EAAaH,QAAW,cACrB7F,OAAUgG,EAAaH,OAAS,MAAQ,OACxCA,OAAS7R,QAInBgS,EAAaC,aAAc,OACRD,EAAaC,aAAa5R,MAAM,GAAhC,WAAfkM,EADuB2F,EAAA,GACjBxF,EADiBwF,EAAA,KAEjB3F,KAAQA,GAAQA,IAAS,IAAMA,EAAOvM,SACtC0M,MAAQA,IACRuF,aAAejS,gBAIhB4M,SAAW5M,OAEjBgS,IDnDHJ,GAA2B,QACvB,iBACIO,GAAGzC,iBACRyC,GAAGnD,gBACCmD,GAAG3B,WDSV4B,GAAkB,CAAA,EAClBjR,GAAQ,GAGRc,GAAe,0BAA4Bd,GAAQ,4EAA8E,IAAM,IACvIK,GAAW,cACXE,GAAe9B,EAAOA,EAAO,UAAY4B,GAAW,IAAMA,GAAWA,GAAW,IAAMA,GAAWA,EAA3E,EAAuF,IAAM5B,EAAO,cAAgB4B,GAAW,IAAMA,GAAWA,EAAnD,EAA+D,IAAM5B,EAAO,IAAM4B,GAAWA,EAAxB,CAAzK,EAaf6Q,GAAU,wDACVC,GAAU,6DACVC,GAAUpT,EAAMmT,GAAS,WAAf,EAQVE,GAAgB,sCAahBzG,GAAa,IAAI9G,OAAOhD,GAAc,GAAzB,EACbgK,GAAc,IAAIhH,OAAOvD,GAAc,GAAzB,EACd+Q,GAAiB,IAAIxN,OAAO9F,EAAM,MAAOkT,GAAS,QAAS,QAASE,EAAxC,EAAkD,GAA7D,EAEjBG,GAAa,IAAIzN,OAAO9F,EAAM,MAAO8C,GAAcuQ,EAA3B,EAA2C,GAAtD,EACbG,GAAcD,GAIpB,SAAA9G,GAA0B/L,EAA1B,KACOgM,EAASX,GAAYrL,CAAZ,SACNgM,EAAOC,MAAMC,EAAb,EAAiCF,EAANhM,EAGrC,IAAM+R,GAA8C,QAC1C,eAED,SAAUlG,EAA0BwD,EAA7C,KACQ0D,EAAmBlH,EACnBmH,EAAKD,EAAiBC,GAAMD,EAAiBrG,KAAOqG,EAAiBrG,KAAKlM,MAAM,GAA5B,EAAmC,CAAA,OAC5EkM,KAAOvM,OAEpB4S,EAAiBlG,MAAO,SACvBoG,EAAiB,GACfC,EAAwB,CAAA,EACxBC,GAAUJ,EAAiBlG,MAAMrM,MAAM,GAA7B,EAEPX,GAAI,EAAGD,GAAKuT,GAAQzT,OAAQG,GAAID,GAAI,EAAEC,GAAG,KAC3CuT,GAASD,GAAQtT,IAAGW,MAAM,GAAjB,SAEP4S,GAAO,GAAf,KACM,aACEC,GAAUD,GAAO,GAAG5S,MAAM,GAAhB,EACPX,GAAI,EAAGD,GAAKyT,GAAQ3T,OAAQG,GAAID,GAAI,EAAEC,KAC3CgI,KAAKwL,GAAQxT,GAAhB,YAGG,YACayT,QAAUxB,GAAkBsB,GAAO,GAAI/D,CAA7B,YAEvB,SACakE,KAAOzB,GAAkBsB,GAAO,GAAI/D,CAA7B,kBAGP,KACTyC,GAAkBsB,GAAO,GAAI/D,CAA7B,GAAyCyC,GAAkBsB,GAAO,GAAI/D,CAA7B,SAKhD4D,IAAgBF,EAAiBG,QAAUA,KAG/BrG,MAAQ1M,eAEhBN,GAAI,EAAGD,GAAKoT,EAAGtT,OAAQG,GAAID,GAAI,EAAEC,GAAG,KACtC2T,GAAOR,EAAGnT,IAAGW,MAAM,GAAZ,QAER,GAAKsR,GAAkB0B,GAAK,EAAvB,EAELnE,EAAQO,kBAQP,GAAKkC,GAAkB0B,GAAK,GAAInE,CAA3B,EAAoC1O,YAApC,UANN,IACE,GAAKoK,GAASD,QAAQgH,GAAkB0B,GAAK,GAAInE,CAA3B,EAAoC1O,YAApC,CAAjB,QACFyK,GAAP,GACgB1E,MAAQqM,EAAiBrM,OAAS,2EAA6E0E,KAM/HvL,IAAK2T,GAAK1T,KAAK,GAAV,SAGFiT,aAGI,SAAUA,EAAmC1D,EAA1D,KACQxD,EAAakH,EACbC,EAAKnS,EAAQkS,EAAiBC,EAAzB,KACPA,EAAI,SACEnT,EAAI,EAAGD,EAAKoT,EAAGtT,OAAQG,EAAID,EAAI,EAAEC,EAAG,KACtC4T,GAASjN,OAAOwM,EAAGnT,EAAV,EACT6T,GAAQD,GAAOvK,YAAY,GAAnB,EACRyK,GAAaF,GAAO9T,MAAM,EAAG+T,EAAhB,EAAwBtM,QAAQgF,GAAaL,EAA9C,EAAgE3E,QAAQgF,GAAaxL,CAArF,EAAkGwG,QAAQwL,GAAgB3H,EAA1H,EACd2I,GAASH,GAAO9T,MAAM+T,GAAQ,CAArB,KAGT,IACQrE,EAAQC,IAA2EvE,GAASH,UAAUgJ,EAAnB,EAArE7I,GAASD,QAAQgH,GAAkB8B,GAAQvE,CAA1B,EAAmC1O,YAAnC,CAAjB,QACjByK,GAAP,GACU1E,MAAQmF,EAAWnF,OAAS,wDAA2D2I,EAAQC,IAAgB,UAAV,SAAuB,kBAAoBlE,KAGzJvL,GAAK8T,GAAY,IAAMC,KAGhBlH,KAAOsG,EAAGlT,KAAK,GAAR,MAGboT,GAAUH,EAAiBG,QAAUH,EAAiBG,SAAW,CAAA,EAEnEH,EAAiBO,UAASJ,GAAQ,QAAaH,EAAiBO,SAChEP,EAAiBQ,OAAML,GAAQ,KAAUH,EAAiBQ,UAExDnF,GAAS,CAAA,UACJyF,MAAQX,GACdA,GAAQW,MAAUtB,GAAEsB,QAChBhM,KACNgM,GAAKzM,QAAQgF,GAAaL,EAA1B,EAA4C3E,QAAQgF,GAAaxL,CAAjE,EAA8EwG,QAAQyL,GAAY5H,EAAlG,EACA,IACAiI,GAAQW,IAAMzM,QAAQgF,GAAaL,EAAnC,EAAqD3E,QAAQgF,GAAaxL,CAA1E,EAAuFwG,QAAQ0L,GAAa7H,EAA5G,CAHD,SAOEmD,GAAO1O,WACCmN,MAAQuB,GAAOtO,KAAK,GAAZ,GAGb+L,ID/JHiI,GAAY,kBAIZ/B,GAAqD,QACjD,YAED,SAAUlG,EAA0BwD,EAA7C,KACQlC,EAAUtB,EAAWa,MAAQb,EAAWa,KAAKT,MAAM6H,EAAtB,EAC/BC,EAAgBlI,KAEhBsB,EAAS,KACNhB,EAASkD,EAAQlD,QAAU4H,EAAc5H,QAAU,MACnD6H,EAAM7G,EAAQ,GAAGxM,YAAX,EACNsT,GAAM9G,EAAQ,GACd+G,GAAe/H,EAAf,KAAyBkD,EAAQ2E,KAAOA,GACxCrE,GAAgB3E,GAAQkJ,MAEhBF,IAAMA,IACNC,IAAMA,KACNvH,KAAOvM,OAEjBwP,OACaA,GAAcR,MAAM4E,EAAe1E,CAAnC,UAGH3I,MAAQqN,EAAcrN,OAAS,gCAGvCqN,aAGI,SAAUA,EAA6B1E,EAApD,KACQlD,EAASkD,EAAQlD,QAAU4H,EAAc5H,QAAU,MACnD6H,EAAMD,EAAcC,IACpBE,EAAe/H,EAAf,KAAyBkD,EAAQ2E,KAAOA,GACxCrE,EAAgB3E,GAAQkJ,GAE1BvE,MACaA,EAAcgB,UAAUoD,EAAe1E,CAAvC,OAGX8E,GAAgBJ,EAChBE,GAAMF,EAAcE,cACZvH,MAAUsH,GAAO3E,EAAQ2E,KAAvC,IAA8CC,GAEvCE,KDxDHC,GAAO,2DAIPrC,GAAsE,QAClE,iBAED,SAAUgC,EAA6B1E,EAAhD,KACQgF,EAAiBN,WACRO,KAAOD,EAAeJ,MACtBA,IAAM9T,OAEjB,CAACkP,EAAQ6B,WAAa,CAACmD,EAAeC,MAAQ,CAACD,EAAeC,KAAKrI,MAAMmI,EAA1B,OACnC1N,MAAQ2N,EAAe3N,OAAS,sBAGzC2N,aAGI,SAAUA,EAA+BhF,EAAtD,KACQ0E,EAAgBM,WAERJ,KAAOI,EAAeC,MAAQ,IAAI3T,YAA5B,EACboT,ID5BT/I,GAAQiH,GAAK9F,QAAU8F,GAGvBjH,GAAQuJ,GAAMpI,QAAUoI,GAGxBvJ,GAAQsH,GAAGnG,QAAUmG,GAGrBtH,GAAQwJ,GAAIrI,QAAUqI,GAGtBxJ,GAAQyJ,GAAOtI,QAAUsI,GAGzBzJ,GAAQ0J,GAAIvI,QAAUuI,GAGtB1J,GAAQsJ,GAAKnI,QAAUmI,8UarBvB,IAAAK,GAAA,KAGEA,GAAY,KAAO,0CAErBC,GAAA,QAAeD,0JCuBf,IAAAE,GAAA,KAAQ,OAAA,eAAAC,GAAA,aAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAD,GAAA,UAAU,CAAA,CAAA,EAKlB,IAAAE,GAAA,IAAQ,OAAA,eAAAD,GAAA,IAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAC,GAAA,CAAC,CAAA,CAAA,EAAE,OAAA,eAAAD,GAAA,MAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAC,GAAA,GAAG,CAAA,CAAA,EAAE,OAAA,eAAAD,GAAA,YAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAC,GAAA,SAAS,CAAA,CAAA,EAAE,OAAA,eAAAD,GAAA,MAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAC,GAAA,GAAG,CAAA,CAAA,EAAE,OAAA,eAAAD,GAAA,OAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAC,GAAA,IAAI,CAAA,CAAA,EAAQ,OAAA,eAAAD,GAAA,UAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAC,GAAA,OAAO,CAAA,CAAA,EAsBnD,IAAAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAEAC,GAAA,KAEMC,GAA8B,CAACC,EAAKC,IAAU,IAAI,OAAOD,EAAKC,CAAK,EACzEF,GAAc,KAAO,aAErB,IAAMG,GAAyC,CAAC,mBAAoB,cAAe,aAAa,EAC1FC,GAAkB,IAAI,IAAI,CAC9B,WACA,YACA,QACA,UACA,OACA,SACA,UACA,UACA,UACA,gBACA,OACA,MACA,QACD,EAyGKC,GAA8C,CAClD,cAAe,GACf,OAAQ,gDACR,SAAU,8CACV,aAAc,mDACd,WAAY,wDACZ,YAAa,sEACb,YAAa,oEACb,WAAY,oCACZ,eAAgB,0CAChB,eAAgB,0CAChB,YAAa,6CACb,eAAgB,+EAChB,MAAO,8CACP,UAAW,8CACX,UAAW,sBAGPC,GAAoD,CACxD,sBAAuB,GACvB,iBAAkB,GAClB,QAAS,sEA0BLC,GAAiB,IAGvB,SAASC,GAAgBC,EAAU,yDACjC,IAAMC,GAAID,EAAE,OACNE,IAAQC,EAAAH,EAAE,QAAI,MAAAG,IAAA,OAAA,OAAAA,EAAE,SAChBC,GAAWF,KAAU,IAAQA,KAAU,OAAY,EAAIA,IAAS,EAChEG,IAASC,GAAAC,EAAAP,EAAE,QAAI,MAAAO,IAAA,OAAA,OAAAA,EAAE,UAAM,MAAAD,IAAA,OAAAA,EAAIf,GAC3BiB,IAAcC,EAAAT,EAAE,eAAW,MAAAS,IAAA,OAAAA,EAAInB,GAAA,QACrC,MAAO,CACL,cAAcoB,GAAAC,EAAAX,EAAE,gBAAY,MAAAW,IAAA,OAAAA,EAAIV,MAAC,MAAAS,IAAA,OAAAA,EAAI,GACrC,eAAeE,GAAAC,EAAAb,EAAE,iBAAa,MAAAa,IAAA,OAAAA,EAAIZ,MAAC,MAAAW,IAAA,OAAAA,EAAI,GACvC,aAAaE,GAAAC,EAAAf,EAAE,eAAW,MAAAe,IAAA,OAAAA,EAAId,MAAC,MAAAa,IAAA,OAAAA,EAAI,MACnC,cAAcE,GAAAC,EAAAjB,EAAE,gBAAY,MAAAiB,IAAA,OAAAA,EAAIhB,MAAC,MAAAe,IAAA,OAAAA,EAAI,MACrC,gBAAgBE,GAAAC,EAAAnB,EAAE,kBAAc,MAAAmB,IAAA,OAAAA,EAAIlB,MAAC,MAAAiB,IAAA,OAAAA,EAAI,GACzC,KAAMlB,EAAE,KAAOoB,GAAAC,GAAA,GAAIrB,EAAE,MAAN,CAAY,SAAAI,GAAU,OAAAC,EAAM,GAAI,CAAC,SAAAD,GAAU,OAAAC,EAAM,EAChE,cAAciB,EAAAtB,EAAE,gBAAY,MAAAsB,IAAA,OAAAA,EAAIxB,GAChC,UAAUyB,EAAAvB,EAAE,YAAQ,MAAAuB,IAAA,OAAAA,EAAIzB,GACxB,MAAM0B,EAAAxB,EAAE,QAAI,MAAAwB,IAAA,OAAAA,EAAI,GAChB,UAAUC,EAAAzB,EAAE,YAAQ,MAAAyB,IAAA,OAAAA,EAAI,GACxB,YAAYC,EAAA1B,EAAE,cAAU,MAAA0B,IAAA,OAAAA,EAAI,GAC5B,UAAUC,GAAA3B,EAAE,YAAQ,MAAA2B,KAAA,OAAAA,GAAI,MACxB,eAAeC,EAAA5B,EAAE,iBAAa,MAAA4B,IAAA,OAAAA,EAAI,GAClC,gBAAgBC,EAAA7B,EAAE,kBAAc,MAAA6B,IAAA,OAAAA,EAAI,GACpC,iBAAiBC,EAAA9B,EAAE,mBAAe,MAAA8B,IAAA,OAAAA,EAAI,GACtC,eAAeC,EAAA/B,EAAE,iBAAa,MAAA+B,IAAA,OAAAA,EAAI,GAClC,YAAYC,GAAAhC,EAAE,cAAU,MAAAgC,KAAA,OAAAA,GAAI,GAC5B,YAAaxB,GAEjB,CAQA,IAAqByB,GAArB,KAAwB,CAkBtB,YAAYC,EAAgB,CAAA,EAAE,CAZrB,KAAA,QAAyC,CAAA,EACzC,KAAA,KAA+C,CAAA,EAC/C,KAAA,QAA4C,CAAA,EAE5C,KAAA,cAAgC,IAAI,IAC5B,KAAA,SAAyD,CAAA,EACzD,KAAA,OAAoC,IAAI,IAOvDA,EAAO,KAAK,KAAOb,MAAA,GAAIa,GAASnC,GAAgBmC,CAAI,GACpD,GAAM,CAAC,IAAAC,EAAK,MAAAC,CAAK,EAAI,KAAK,KAAK,KAE/B,KAAK,MAAQ,IAAInD,GAAA,WAAW,CAAC,MAAO,CAAA,EAAI,SAAUU,GAAiB,IAAAwC,EAAK,MAAAC,CAAK,CAAC,EAC9E,KAAK,OAASC,GAAUH,EAAK,MAAM,EACnC,IAAMI,EAAYJ,EAAK,gBACvBA,EAAK,gBAAkB,GAEvB,KAAK,SAAQnD,GAAA,UAAQ,EACrBwD,GAAa,KAAK,KAAM3C,GAAgBsC,EAAM,eAAe,EAC7DK,GAAa,KAAK,KAAM1C,GAAmBqC,EAAM,aAAc,MAAM,EACrE,KAAK,UAAYM,GAAqB,KAAK,IAAI,EAE3CN,EAAK,SAASO,GAAkB,KAAK,IAAI,EAC7C,KAAK,iBAAgB,EACrB,KAAK,sBAAqB,EACtBP,EAAK,UAAUQ,GAAmB,KAAK,KAAMR,EAAK,QAAQ,EAC1D,OAAOA,EAAK,MAAQ,UAAU,KAAK,cAAcA,EAAK,IAAI,EAC9DS,GAAkB,KAAK,IAAI,EAC3BT,EAAK,gBAAkBI,CACzB,CAEA,kBAAgB,CACd,KAAK,WAAW,QAAQ,CAC1B,CAEA,uBAAqB,CACnB,GAAM,CAAC,MAAAM,EAAO,KAAAC,EAAM,SAAAC,CAAQ,EAAI,KAAK,KACjCC,EAA+B1D,GAC/ByD,IAAa,OACfC,EAAiB1B,GAAA,GAAIhC,IACrB0D,EAAe,GAAKA,EAAe,IACnC,OAAOA,EAAe,KAEpBF,GAAQD,GAAO,KAAK,cAAcG,EAAgBA,EAAeD,GAAW,EAAK,CACvF,CAEA,aAAW,CACT,GAAM,CAAC,KAAAD,EAAM,SAAAC,CAAQ,EAAI,KAAK,KAC9B,OAAQ,KAAK,KAAK,YAAc,OAAOD,GAAQ,SAAWA,EAAKC,IAAaD,EAAO,MACrF,CAkBA,SACEG,EACAC,GAEA,IAAIC,EACJ,GAAI,OAAOF,GAAgB,UAEzB,GADAE,EAAI,KAAK,UAAaF,CAAY,EAC9B,CAACE,EAAG,MAAM,IAAI,MAAM,8BAA8BF,IAAe,OAErEE,EAAI,KAAK,QAAWF,CAAY,EAGlC,IAAMG,EAAQD,EAAED,CAAI,EACpB,MAAM,WAAYC,IAAI,KAAK,OAASA,EAAE,QAC/BC,CACT,CAgBA,QAAqBC,EAAmBC,EAAe,CACrD,IAAMC,EAAM,KAAK,WAAWF,EAAQC,CAAK,EACzC,OAAQC,EAAI,UAAY,KAAK,kBAAkBA,CAAG,CACpD,CAmBA,aACEF,EACAP,EAAc,CAEd,GAAI,OAAO,KAAK,KAAK,YAAc,WACjC,MAAM,IAAI,MAAM,yCAAyC,EAE3D,GAAM,CAAC,WAAAU,CAAU,EAAI,KAAK,KAC1B,OAAOC,EAAgB,KAAK,KAAMJ,EAAQP,CAAI,EAE9C,eAAeW,EAEbC,EACAJ,EAAe,CAEf,MAAMK,EAAe,KAAK,KAAMD,EAAQ,OAAO,EAC/C,IAAMH,EAAM,KAAK,WAAWG,EAASJ,CAAK,EAC1C,OAAOC,EAAI,UAAYK,EAAc,KAAK,KAAML,CAAG,CACrD,CAEA,eAAeI,EAA0BE,EAAa,CAChDA,GAAQ,CAAC,KAAK,UAAUA,CAAI,GAC9B,MAAMJ,EAAgB,KAAK,KAAM,CAAC,KAAAI,CAAI,EAAG,EAAI,CAEjD,CAEA,eAAeD,EAAyBL,EAAc,CACpD,GAAI,CACF,OAAO,KAAK,kBAAkBA,CAAG,QAC1BO,EAAP,CACA,GAAI,EAAEA,aAAa/E,GAAA,SAAkB,MAAM+E,EAC3C,OAAAC,EAAY,KAAK,KAAMD,CAAC,EACxB,MAAME,EAAkB,KAAK,KAAMF,EAAE,aAAa,EAC3CF,EAAc,KAAK,KAAML,CAAG,EAEvC,CAEA,SAASQ,EAAuB,CAAC,cAAeE,EAAK,WAAAC,CAAU,EAAkB,CAC/E,GAAI,KAAK,KAAKD,GACZ,MAAM,IAAI,MAAM,aAAaA,mBAAqBC,sBAA+B,CAErF,CAEA,eAAeF,EAA6BC,EAAW,CACrD,IAAMP,EAAU,MAAMS,EAAY,KAAK,KAAMF,CAAG,EAC3C,KAAK,KAAKA,IAAM,MAAMN,EAAe,KAAK,KAAMD,EAAQ,OAAO,EAC/D,KAAK,KAAKO,IAAM,KAAK,UAAUP,EAASO,EAAKnB,CAAI,CACxD,CAEA,eAAeqB,EAAuBF,EAAW,CAC/C,IAAMG,EAAI,KAAK,SAASH,GACxB,GAAIG,EAAG,OAAOA,EACd,GAAI,CACF,OAAO,MAAO,KAAK,SAASH,GAAOT,EAAWS,CAAG,WAEjD,OAAO,KAAK,SAASA,GAEzB,CACF,CAGA,UACEZ,EACAgB,EACAf,EACAgB,EAAkB,KAAK,KAAK,gBAE5B,GAAI,MAAM,QAAQjB,CAAM,EAAG,CACzB,QAAWE,KAAOF,EAAQ,KAAK,UAAUE,EAAK,OAAWD,EAAOgB,CAAe,EAC/E,OAAO,KAET,IAAIC,EACJ,GAAI,OAAOlB,GAAW,SAAU,CAC9B,GAAM,CAAC,SAAAN,CAAQ,EAAI,KAAK,KAExB,GADAwB,EAAKlB,EAAON,GACRwB,IAAO,QAAa,OAAOA,GAAM,SACnC,MAAM,IAAI,MAAM,UAAUxB,kBAAyB,EAGvD,OAAAsB,KAAMlF,GAAA,aAAYkF,GAAOE,CAAE,EAC3B,KAAK,aAAaF,CAAG,EACrB,KAAK,QAAQA,GAAO,KAAK,WAAWhB,EAAQC,EAAOe,EAAKC,EAAiB,EAAI,EACtE,IACT,CAIA,cACEjB,EACAgB,EACAC,EAAkB,KAAK,KAAK,gBAE5B,YAAK,UAAUjB,EAAQgB,EAAK,GAAMC,CAAe,EAC1C,IACT,CAGA,eAAejB,EAAmBmB,EAAyB,CACzD,GAAI,OAAOnB,GAAU,UAAW,MAAO,GACvC,IAAIoB,EAEJ,GADAA,EAAUpB,EAAO,QACboB,IAAY,QAAa,OAAOA,GAAW,SAC7C,MAAM,IAAI,MAAM,0BAA0B,EAG5C,GADAA,EAAUA,GAAW,KAAK,KAAK,aAAe,KAAK,YAAW,EAC1D,CAACA,EACH,YAAK,OAAO,KAAK,2BAA2B,EAC5C,KAAK,OAAS,KACP,GAET,IAAMrB,EAAQ,KAAK,SAASqB,EAASpB,CAAM,EAC3C,GAAI,CAACD,GAASoB,EAAiB,CAC7B,IAAME,EAAU,sBAAwB,KAAK,WAAU,EACvD,GAAI,KAAK,KAAK,iBAAmB,MAAO,KAAK,OAAO,MAAMA,CAAO,MAC5D,OAAM,IAAI,MAAMA,CAAO,EAE9B,OAAOtB,CACT,CAIA,UAAuBuB,EAAc,CACnC,IAAIpB,EACJ,KAAO,OAAQA,EAAMqB,GAAU,KAAK,KAAMD,CAAM,IAAM,UAAUA,EAASpB,EACzE,GAAIA,IAAQ,OAAW,CACrB,GAAM,CAAC,SAAAR,CAAQ,EAAI,KAAK,KAClB8B,EAAO,IAAI5F,GAAA,UAAU,CAAC,OAAQ,CAAA,EAAI,SAAA8D,CAAQ,CAAC,EAEjD,GADAQ,EAAMtE,GAAA,cAAc,KAAK,KAAM4F,EAAMF,CAAM,EACvC,CAACpB,EAAK,OACV,KAAK,KAAKoB,GAAUpB,EAEtB,OAAQA,EAAI,UAAY,KAAK,kBAAkBA,CAAG,CACpD,CAMA,aAAaN,EAA0C,CACrD,GAAIA,aAAwB,OAC1B,YAAK,kBAAkB,KAAK,QAASA,CAAY,EACjD,KAAK,kBAAkB,KAAK,KAAMA,CAAY,EACvC,KAET,OAAQ,OAAOA,EAAc,CAC3B,IAAK,YACH,YAAK,kBAAkB,KAAK,OAAO,EACnC,KAAK,kBAAkB,KAAK,IAAI,EAChC,KAAK,OAAO,MAAK,EACV,KACT,IAAK,SAAU,CACb,IAAMM,EAAMqB,GAAU,KAAK,KAAM3B,CAAY,EAC7C,OAAI,OAAOM,GAAO,UAAU,KAAK,OAAO,OAAOA,EAAI,MAAM,EACzD,OAAO,KAAK,QAAQN,GACpB,OAAO,KAAK,KAAKA,GACV,KAET,IAAK,SAAU,CACb,IAAM6B,EAAW7B,EACjB,KAAK,OAAO,OAAO6B,CAAQ,EAC3B,IAAIP,EAAKtB,EAAa,KAAK,KAAK,UAChC,OAAIsB,IACFA,KAAKpF,GAAA,aAAYoF,CAAE,EACnB,OAAO,KAAK,QAAQA,GACpB,OAAO,KAAK,KAAKA,IAEZ,KAET,QACE,MAAM,IAAI,MAAM,qCAAqC,EAE3D,CAGA,cAAcQ,EAAuB,CACnC,QAAWC,KAAOD,EAAa,KAAK,WAAWC,CAAG,EAClD,OAAO,IACT,CAEA,WACEC,EACAD,GAEA,IAAIE,EACJ,GAAI,OAAOD,GAAY,SACrBC,EAAUD,EACN,OAAOD,GAAO,WAChB,KAAK,OAAO,KAAK,0DAA0D,EAC3EA,EAAI,QAAUE,WAEP,OAAOD,GAAY,UAAYD,IAAQ,QAGhD,GAFAA,EAAMC,EACNC,EAAUF,EAAI,QACV,MAAM,QAAQE,CAAO,GAAK,CAACA,EAAQ,OACrC,MAAM,IAAI,MAAM,wDAAwD,MAG1E,OAAM,IAAI,MAAM,gCAAgC,EAIlD,GADAC,GAAa,KAAK,KAAMD,EAASF,CAAG,EAChC,CAACA,EACH,SAAA3F,GAAA,UAAS6F,EAAUE,GAAQC,GAAQ,KAAK,KAAMD,CAAG,CAAC,EAC3C,KAETE,GAAkB,KAAK,KAAMN,CAAG,EAChC,IAAMO,EAAqClE,GAAAC,GAAA,GACtC0D,GADsC,CAEzC,QAAM5F,GAAA,cAAa4F,EAAI,IAAI,EAC3B,cAAY5F,GAAA,cAAa4F,EAAI,UAAU,IAEzC,SAAA3F,GAAA,UACE6F,EACAK,EAAW,KAAK,SAAW,EACtBC,GAAMH,GAAQ,KAAK,KAAMG,EAAGD,CAAU,EACtCC,GAAMD,EAAW,KAAK,QAASE,GAAMJ,GAAQ,KAAK,KAAMG,EAAGD,EAAYE,CAAC,CAAC,CAAC,EAE1E,IACT,CAEA,WAAWP,EAAe,CACxB,IAAMQ,EAAO,KAAK,MAAM,IAAIR,GAC5B,OAAO,OAAOQ,GAAQ,SAAWA,EAAK,WAAa,CAAC,CAACA,CACvD,CAGA,cAAcR,EAAe,CAE3B,GAAM,CAAC,MAAAS,CAAK,EAAI,KAChB,OAAOA,EAAM,SAAST,GACtB,OAAOS,EAAM,IAAIT,GACjB,QAAWU,KAASD,EAAM,MAAO,CAC/B,IAAME,EAAID,EAAM,MAAM,UAAWF,GAASA,EAAK,UAAYR,CAAO,EAC9DW,GAAK,GAAGD,EAAM,MAAM,OAAOC,EAAG,CAAC,EAErC,OAAO,IACT,CAGA,UAAUC,EAAcC,EAAc,CACpC,OAAI,OAAOA,GAAU,WAAUA,EAAS,IAAI,OAAOA,CAAM,GACzD,KAAK,QAAQD,GAAQC,EACd,IACT,CAEA,WACEC,EAA2C,KAAK,OAChD,CAAC,UAAAC,EAAY,KAAM,QAAAC,EAAU,MAAM,EAAuB,CAAA,GAE1D,MAAI,CAACF,GAAUA,EAAO,SAAW,EAAU,YACpCA,EACJ,IAAKlC,GAAM,GAAGoC,IAAUpC,EAAE,gBAAgBA,EAAE,SAAS,EACrD,OAAO,CAACqC,EAAMC,IAAQD,EAAOF,EAAYG,CAAG,CACjD,CAEA,gBAAgBC,EAA6BC,EAA8B,CACzE,IAAMC,EAAQ,KAAK,MAAM,IACzBF,EAAa,KAAK,MAAM,KAAK,UAAUA,CAAU,CAAC,EAClD,QAAWG,KAAeF,EAAsB,CAC9C,IAAMG,EAAWD,EAAY,MAAM,GAAG,EAAE,MAAM,CAAC,EAC3CE,EAAWL,EACf,QAAWM,KAAOF,EAAUC,EAAWA,EAASC,GAEhD,QAAWtC,KAAOkC,EAAO,CACvB,IAAMb,EAAOa,EAAMlC,GACnB,GAAI,OAAOqB,GAAQ,SAAU,SAC7B,GAAM,CAAC,MAAA7C,CAAK,EAAI6C,EAAK,WACfrC,EAASqD,EAASrC,GACpBxB,GAASQ,IAAQqD,EAASrC,GAAOuC,GAAavD,CAAM,IAI5D,OAAOgD,CACT,CAEQ,kBAAkBQ,EAAiDC,EAAc,CACvF,QAAWnC,KAAUkC,EAAS,CAC5B,IAAMtD,EAAMsD,EAAQlC,IAChB,CAACmC,GAASA,EAAM,KAAKnC,CAAM,KACzB,OAAOpB,GAAO,SAChB,OAAOsD,EAAQlC,GACNpB,GAAO,CAACA,EAAI,OACrB,KAAK,OAAO,OAAOA,EAAI,MAAM,EAC7B,OAAOsD,EAAQlC,KAIvB,CAEA,WACEtB,EACAP,EACAiE,EACAC,EAAiB,KAAK,KAAK,eAC3BC,EAAY,KAAK,KAAK,cAAa,CAEnC,IAAI1C,EACE,CAAC,SAAAxB,CAAQ,EAAI,KAAK,KACxB,GAAI,OAAOM,GAAU,SACnBkB,EAAKlB,EAAON,OACP,CACL,GAAI,KAAK,KAAK,IAAK,MAAM,IAAI,MAAM,uBAAuB,EACrD,GAAI,OAAOM,GAAU,UAAW,MAAM,IAAI,MAAM,kCAAkC,EAEzF,IAAIE,EAAM,KAAK,OAAO,IAAIF,CAAM,EAChC,GAAIE,IAAQ,OAAW,OAAOA,EAE9BwD,KAAS5H,GAAA,aAAYoF,GAAMwC,CAAM,EACjC,IAAMG,EAAY/H,GAAA,cAAc,KAAK,KAAMkE,EAAQ0D,CAAM,EACzD,OAAAxD,EAAM,IAAItE,GAAA,UAAU,CAAC,OAAAoE,EAAQ,SAAAN,EAAU,KAAAD,EAAM,OAAAiE,EAAQ,UAAAG,CAAS,CAAC,EAC/D,KAAK,OAAO,IAAI3D,EAAI,OAAQA,CAAG,EAC3B0D,GAAa,CAACF,EAAO,WAAW,GAAG,IAEjCA,GAAQ,KAAK,aAAaA,CAAM,EACpC,KAAK,KAAKA,GAAUxD,GAElByD,GAAgB,KAAK,eAAe3D,EAAQ,EAAI,EAC7CE,CACT,CAEQ,aAAagB,EAAU,CAC7B,GAAI,KAAK,QAAQA,IAAO,KAAK,KAAKA,GAChC,MAAM,IAAI,MAAM,0BAA0BA,mBAAoB,CAElE,CAEQ,kBAAkBhB,EAAc,CAKtC,GAJIA,EAAI,KAAM,KAAK,mBAAmBA,CAAG,EACpCtE,GAAA,cAAc,KAAK,KAAMsE,CAAG,EAG7B,CAACA,EAAI,SAAU,MAAM,IAAI,MAAM,0BAA0B,EAC7D,OAAOA,EAAI,QACb,CAEQ,mBAAmBA,EAAc,CACvC,IAAM4D,EAAc,KAAK,KACzB,KAAK,KAAO,KAAK,UACjB,GAAI,CACFlI,GAAA,cAAc,KAAK,KAAMsE,CAAG,UAE5B,KAAK,KAAO4D,EAEhB,GAzdFvI,GAAA,QAAAsD,GAeSA,GAAA,gBAAkBpD,GAAA,QAClBoD,GAAA,gBAAkBnD,GAAA,QAid3B,SAASyD,GAEP4E,EACAC,EACAjB,EACAkB,EAAwB,QAAO,CAE/B,QAAWjD,KAAO+C,EAAW,CAC3B,IAAMG,EAAMlD,EACRkD,KAAOF,GAAS,KAAK,OAAOC,GAAK,GAAGlB,aAAe/B,MAAQ+C,EAAUG,IAAM,EAEnF,CAEA,SAAS3C,GAAqBD,EAAc,CAC1C,OAAAA,KAASxF,GAAA,aAAYwF,CAAM,EACpB,KAAK,QAAQA,IAAW,KAAK,KAAKA,EAC3C,CAEA,SAAS/B,IAAiB,CACxB,IAAM4E,EAAc,KAAK,KAAK,QAC9B,GAAI,EAACA,EACL,GAAI,MAAM,QAAQA,CAAW,EAAG,KAAK,UAAUA,CAAW,MACrD,SAAWnD,KAAOmD,EAAa,KAAK,UAAUA,EAAYnD,GAAmBA,CAAG,CACvF,CAEA,SAAS3B,IAAiB,CACxB,QAAWoD,KAAQ,KAAK,KAAK,QAAS,CACpC,IAAMC,EAAS,KAAK,KAAK,QAAQD,GAC7BC,GAAQ,KAAK,UAAUD,EAAMC,CAAM,EAE3C,CAEA,SAASpD,GAEP8E,EAAsD,CAEtD,GAAI,MAAM,QAAQA,CAAI,EAAG,CACvB,KAAK,cAAcA,CAAI,EACvB,OAEF,KAAK,OAAO,KAAK,kDAAkD,EACnE,QAAWvC,KAAWuC,EAAM,CAC1B,IAAMzC,EAAMyC,EAAKvC,GACZF,EAAI,UAASA,EAAI,QAAUE,GAChC,KAAK,WAAWF,CAAG,EAEvB,CAEA,SAASvC,IAAoB,CAC3B,IAAMiF,EAAWpG,GAAA,GAAI,KAAK,MAC1B,QAAWiG,KAAO5H,GAAqB,OAAO+H,EAASH,GACvD,OAAOG,CACT,CAEA,IAAMC,GAAS,CAAC,KAAG,CAAI,EAAG,MAAI,CAAI,EAAG,OAAK,CAAI,CAAC,EAE/C,SAASrF,GAAUsF,EAAgC,CACjD,GAAIA,IAAW,GAAO,OAAOD,GAC7B,GAAIC,IAAW,OAAW,OAAO,QACjC,GAAIA,EAAO,KAAOA,EAAO,MAAQA,EAAO,MAAO,OAAOA,EACtD,MAAM,IAAI,MAAM,mDAAmD,CACrE,CAEA,IAAMC,GAAe,0BAErB,SAAS1C,GAAwBD,EAA4BF,EAAuB,CAClF,GAAM,CAAC,MAAAW,CAAK,EAAI,KAKhB,MAJAtG,GAAA,UAAS6F,EAAUE,GAAO,CACxB,GAAIO,EAAM,SAASP,GAAM,MAAM,IAAI,MAAM,WAAWA,sBAAwB,EAC5E,GAAI,CAACyC,GAAa,KAAKzC,CAAG,EAAG,MAAM,IAAI,MAAM,WAAWA,oBAAsB,CAChF,CAAC,EACG,EAACJ,GACDA,EAAI,OAAS,EAAE,SAAUA,GAAO,aAAcA,GAChD,MAAM,IAAI,MAAM,uDAAuD,CAE3E,CAEA,SAASK,GAEPH,EACAK,EACAuC,EAAmB,OAEnB,IAAMC,EAAOxC,GAAU,KAAA,OAAVA,EAAY,KACzB,GAAIuC,GAAYC,EAAM,MAAM,IAAI,MAAM,6CAA6C,EACnF,GAAM,CAAC,MAAApC,CAAK,EAAI,KACZqC,EAAYD,EAAOpC,EAAM,KAAOA,EAAM,MAAM,KAAK,CAAC,CAAC,KAAMF,CAAC,IAAMA,IAAMqC,CAAQ,EAMlF,GALKE,IACHA,EAAY,CAAC,KAAMF,EAAU,MAAO,CAAA,CAAE,EACtCnC,EAAM,MAAM,KAAKqC,CAAS,GAE5BrC,EAAM,SAAST,GAAW,GACtB,CAACK,EAAY,OAEjB,IAAMG,EAAa,CACjB,QAAAR,EACA,WAAY7D,GAAAC,GAAA,GACPiE,GADO,CAEV,QAAMnG,GAAA,cAAamG,EAAW,IAAI,EAClC,cAAYnG,GAAA,cAAamG,EAAW,UAAU,KAG9CA,EAAW,OAAQ0C,GAAc,KAAK,KAAMD,EAAWtC,EAAMH,EAAW,MAAM,EAC7EyC,EAAU,MAAM,KAAKtC,CAAI,EAC9BC,EAAM,IAAIT,GAAWQ,GACrBtF,EAAAmF,EAAW,cAAU,MAAAnF,IAAA,QAAAA,EAAE,QAASgF,GAAQ,KAAK,WAAWA,CAAG,CAAC,CAC9D,CAEA,SAAS6C,GAAyBD,EAAsBtC,EAAYwC,EAAc,CAChF,IAAMrC,EAAImC,EAAU,MAAM,UAAWG,GAAUA,EAAM,UAAYD,CAAM,EACnErC,GAAK,EACPmC,EAAU,MAAM,OAAOnC,EAAG,EAAGH,CAAI,GAEjCsC,EAAU,MAAM,KAAKtC,CAAI,EACzB,KAAK,OAAO,KAAK,QAAQwC,kBAAuB,EAEpD,CAEA,SAAS5C,GAA6BN,EAAsB,CAC1D,GAAI,CAAC,WAAAqB,CAAU,EAAIrB,EACfqB,IAAe,SACfrB,EAAI,OAAS,KAAK,KAAK,QAAOqB,EAAaO,GAAaP,CAAU,GACtErB,EAAI,eAAiB,KAAK,QAAQqB,EAAY,EAAI,EACpD,CAEA,IAAM+B,GAAW,CACf,KAAM,kFAGR,SAASxB,GAAavD,EAAiB,CACrC,MAAO,CAAC,MAAO,CAACA,EAAQ+E,EAAQ,CAAC,CACnC,iFCp3BA,IAAMC,GAA6B,CACjC,QAAS,KACT,MAAI,CACF,MAAM,IAAI,MAAM,sDAAsD,CACxE,GAGFC,GAAA,QAAeD,mHCPf,IAAAE,GAAA,KACAC,GAAA,KACAC,GAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAEMC,GAA6B,CACjC,QAAS,OACT,WAAY,SACZ,KAAKC,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,OAAQC,EAAM,GAAAC,CAAE,EAAIH,EAC1B,CAAC,OAAAI,EAAQ,UAAWC,EAAK,aAAAC,EAAc,KAAAC,EAAM,KAAAC,CAAI,EAAIL,EACrD,CAAC,KAAAM,CAAI,EAAIJ,EACf,IAAKH,IAAS,KAAOA,IAAS,OAASE,IAAWK,EAAK,OAAQ,OAAOC,EAAW,EACjF,IAAMC,EAAWd,GAAA,WAAW,KAAKW,EAAMC,EAAML,EAAQF,CAAI,EACzD,GAAIS,IAAa,OAAW,MAAM,IAAIlB,GAAA,QAAgBU,EAAG,KAAK,YAAaC,EAAQF,CAAI,EACvF,GAAIS,aAAoBd,GAAA,UAAW,OAAOe,EAAaD,CAAQ,EAC/D,OAAOE,EAAgBF,CAAQ,EAE/B,SAASD,GAAW,CAClB,GAAIL,IAAQI,EAAM,OAAOK,GAAQd,EAAKM,EAAcD,EAAKA,EAAI,MAAM,EACnE,IAAMU,EAAWd,EAAI,WAAW,OAAQ,CAAC,IAAKQ,CAAI,CAAC,EACnD,OAAOK,GAAQd,KAAKL,GAAA,KAAIoB,aAAqBN,EAAMA,EAAK,MAAM,CAChE,CAEA,SAASG,EAAaI,EAAc,CAClC,IAAMC,EAAIC,GAAYlB,EAAKgB,CAAG,EAC9BF,GAAQd,EAAKiB,EAAGD,EAAKA,EAAI,MAAM,CACjC,CAEA,SAASH,EAAgBG,EAAc,CACrC,IAAMG,EAAUlB,EAAI,WAClB,SACAM,EAAK,KAAK,SAAW,GAAO,CAAC,IAAKS,EAAK,QAAMrB,GAAA,WAAUqB,CAAG,CAAC,EAAI,CAAC,IAAKA,CAAG,CAAC,EAErEI,EAAQnB,EAAI,KAAK,OAAO,EACxBoB,EAASrB,EAAI,UACjB,CACE,OAAQgB,EACR,UAAW,CAAA,EACX,WAAYrB,GAAA,IACZ,aAAcwB,EACd,cAAejB,GAEjBkB,CAAK,EAEPpB,EAAI,eAAeqB,CAAM,EACzBrB,EAAI,GAAGoB,CAAK,CACd,CACF,GAGF,SAAgBF,GAAYlB,EAAiBgB,EAAc,CACzD,GAAM,CAAC,IAAAf,CAAG,EAAID,EACd,OAAOgB,EAAI,SACPf,EAAI,WAAW,WAAY,CAAC,IAAKe,EAAI,QAAQ,CAAC,KAC9CrB,GAAA,KAAIM,EAAI,WAAW,UAAW,CAAC,IAAKe,CAAG,CAAC,YAC9C,CALAM,GAAA,YAAAJ,GAOA,SAAgBJ,GAAQd,EAAiBiB,EAASD,EAAiBO,EAAgB,CACjF,GAAM,CAAC,IAAAtB,EAAK,GAAAE,CAAE,EAAIH,EACZ,CAAC,UAAAwB,EAAW,UAAWnB,EAAK,KAAAE,CAAI,EAAIJ,EACpCsB,EAAUlB,EAAK,YAAcX,GAAA,QAAE,KAAOD,GAAA,IACxC4B,EAAQG,EAAY,EACnBC,EAAW,EAEhB,SAASD,GAAY,CACnB,GAAI,CAACrB,EAAI,OAAQ,MAAM,IAAI,MAAM,wCAAwC,EACzE,IAAMe,EAAQnB,EAAI,IAAI,OAAO,EAC7BA,EAAI,IACF,IAAK,CACHA,EAAI,QAAKN,GAAA,cAAUD,GAAA,kBAAiBM,EAAKiB,EAAGQ,CAAO,GAAG,EACtDG,EAAiBX,CAAC,EACbO,GAAWvB,EAAI,OAAOmB,EAAO,EAAI,CACxC,EACCS,GAAK,CACJ5B,EAAI,MAAGN,GAAA,OAAMkC,gBAAgB1B,EAAG,mBAA4B,IAAMF,EAAI,MAAM4B,CAAC,CAAC,EAC9EC,EAAcD,CAAC,EACVL,GAAWvB,EAAI,OAAOmB,EAAO,EAAK,CACzC,CAAC,EAEHpB,EAAI,GAAGoB,CAAK,CACd,CAEA,SAASO,GAAW,CAClB3B,EAAI,UACFN,GAAA,kBAAiBM,EAAKiB,EAAGQ,CAAO,EAChC,IAAMG,EAAiBX,CAAC,EACxB,IAAMa,EAAcb,CAAC,CAAC,CAE1B,CAEA,SAASa,EAAcC,EAAY,CACjC,IAAMC,KAAOrC,GAAA,KAAIoC,WACjB9B,EAAI,OAAOL,GAAA,QAAE,WAASD,GAAA,KAAIC,GAAA,QAAE,sBAAsBoC,OAAUpC,GAAA,QAAE,kBAAkBoC,IAAO,EACvF/B,EAAI,OAAOL,GAAA,QAAE,UAAQD,GAAA,KAAIC,GAAA,QAAE,gBAAgB,CAC7C,CAEA,SAASgC,EAAiBG,EAAY,OACpC,GAAI,CAAC5B,EAAG,KAAK,YAAa,OAC1B,IAAM8B,GAAeC,EAAAlB,GAAG,KAAA,OAAHA,EAAK,YAAQ,MAAAkB,IAAA,OAAA,OAAAA,EAAE,UAEpC,GAAI/B,EAAG,QAAU,GACf,GAAI8B,GAAgB,CAACA,EAAa,aAC5BA,EAAa,QAAU,SACzB9B,EAAG,MAAQL,GAAA,eAAe,MAAMG,EAAKgC,EAAa,MAAO9B,EAAG,KAAK,OAE9D,CACL,IAAMgC,EAAQlC,EAAI,IAAI,WAASN,GAAA,KAAIoC,mBAAwB,EAC3D5B,EAAG,MAAQL,GAAA,eAAe,MAAMG,EAAKkC,EAAOhC,EAAG,MAAOR,GAAA,IAAI,EAG9D,GAAIQ,EAAG,QAAU,GACf,GAAI8B,GAAgB,CAACA,EAAa,aAC5BA,EAAa,QAAU,SACzB9B,EAAG,MAAQL,GAAA,eAAe,MAAMG,EAAKgC,EAAa,MAAO9B,EAAG,KAAK,OAE9D,CACL,IAAMiC,EAAQnC,EAAI,IAAI,WAASN,GAAA,KAAIoC,mBAAwB,EAC3D5B,EAAG,MAAQL,GAAA,eAAe,MAAMG,EAAKmC,EAAOjC,EAAG,MAAOR,GAAA,IAAI,EAGhE,CACF,CAhEA2B,GAAA,QAAAR,GAkEAQ,GAAA,QAAevB,kFC/Hf,IAAAsC,GAAA,KACAC,GAAA,KAEMC,GAAmB,CACvB,UACA,MACA,QACA,cACA,CAAC,QAAS,UAAU,EACpB,cACAF,GAAA,QACAC,GAAA,SAGFE,GAAA,QAAeD,kFCbf,IAAAE,GAAA,IAEMC,GAAMD,GAAA,UAMNE,GAAgE,CACpE,QAAS,CAAC,MAAO,KAAM,GAAID,GAAI,IAAK,KAAMA,GAAI,EAAE,EAChD,QAAS,CAAC,MAAO,KAAM,GAAIA,GAAI,IAAK,KAAMA,GAAI,EAAE,EAChD,iBAAkB,CAAC,MAAO,IAAK,GAAIA,GAAI,GAAI,KAAMA,GAAI,GAAG,EACxD,iBAAkB,CAAC,MAAO,IAAK,GAAIA,GAAI,GAAI,KAAMA,GAAI,GAAG,GASpDE,GAAgC,CACpC,QAAS,CAAC,CAAC,QAAAC,EAAS,WAAAC,CAAU,OAAML,GAAA,eAAcE,GAAKE,GAAgB,SAASC,IAChF,OAAQ,CAAC,CAAC,QAAAD,EAAS,WAAAC,CAAU,OAC3BL,GAAA,kBAAiBE,GAAKE,GAAgB,iBAAiBC,MAGrDC,GAA6B,CACjC,QAAS,OAAO,KAAKJ,EAAI,EACzB,KAAM,SACN,WAAY,SACZ,MAAO,GACP,MAAAC,GACA,KAAKI,EAAe,CAClB,GAAM,CAAC,QAAAH,EAAS,KAAAI,EAAM,WAAAH,CAAU,EAAIE,EACpCA,EAAI,aAAUP,GAAA,KAAIQ,KAAQN,GAAKE,GAAgB,QAAQC,cAAuBG,IAAO,CACvF,GAGFC,GAAA,QAAeH,kFCvCf,IAAAI,GAAA,IAQMC,GAAgC,CACpC,QAAS,CAAC,CAAC,WAAAC,CAAU,OAAMF,GAAA,2BAA0BE,IACrD,OAAQ,CAAC,CAAC,WAAAA,CAAU,OAAMF,GAAA,kBAAiBE,MAGvCC,GAA6B,CACjC,QAAS,aACT,KAAM,SACN,WAAY,SACZ,MAAO,GACP,MAAAF,GACA,KAAKG,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,KAAAC,EAAM,WAAAJ,EAAY,GAAAK,CAAE,EAAIH,EAE9BI,EAAOD,EAAG,KAAK,oBACfE,EAAMJ,EAAI,IAAI,KAAK,EACnBK,EAAUF,KACZR,GAAA,yBAAwBS,QAAUA,WAAaD,OAC/CR,GAAA,KAAIS,kBAAoBA,KAC5BL,EAAI,aAAUJ,GAAA,MAAKE,eAAwBO,OAASH,KAAQJ,MAAeQ,KAAW,CACxF,GAGFC,GAAA,QAAeR,kFC/Bf,SAAwBS,GAAWC,EAAW,CAC5C,IAAMC,EAAMD,EAAI,OACZE,EAAS,EACTC,EAAM,EACNC,EACJ,KAAOD,EAAMF,GACXC,IACAE,EAAQJ,EAAI,WAAWG,GAAK,EACxBC,GAAS,OAAUA,GAAS,OAAUD,EAAMF,IAE9CG,EAAQJ,EAAI,WAAWG,CAAG,GACrBC,EAAQ,SAAY,OAAQD,KAGrC,OAAOD,CACT,CAfAG,GAAA,QAAAN,GAiBAA,GAAW,KAAO,gICjBlB,IAAAO,GAAA,IACAC,GAAA,KACAC,GAAA,KAEMC,GAAgC,CACpC,QAAQ,CAAC,QAAAC,EAAS,WAAAC,CAAU,EAAC,CAC3B,IAAMC,EAAOF,IAAY,YAAc,OAAS,QAChD,SAAOJ,GAAA,qBAAoBM,UAAaD,cAC1C,EACA,OAAQ,CAAC,CAAC,WAAAA,CAAU,OAAML,GAAA,aAAYK,MAGlCE,GAA6B,CACjC,QAAS,CAAC,YAAa,WAAW,EAClC,KAAM,SACN,WAAY,SACZ,MAAO,GACP,MAAAJ,GACA,KAAKK,EAAe,CAClB,GAAM,CAAC,QAAAJ,EAAS,KAAAK,EAAM,WAAAJ,EAAY,GAAAK,CAAE,EAAIF,EAClCG,EAAKP,IAAY,YAAcJ,GAAA,UAAU,GAAKA,GAAA,UAAU,GACxDY,EACJF,EAAG,KAAK,UAAY,MAAQV,GAAA,KAAIS,cAAgBT,GAAA,QAAIC,GAAA,SAAQO,EAAI,IAAKN,GAAA,OAAU,KAAKO,KACtFD,EAAI,aAAUR,GAAA,KAAIY,KAAOD,KAAMN,GAAY,CAC7C,GAGFQ,GAAA,QAAeN,kFC3Bf,IAAAO,GAAA,KACAC,GAAA,IAIMC,GAAgC,CACpC,QAAS,CAAC,CAAC,WAAAC,CAAU,OAAMF,GAAA,2BAA0BE,KACrD,OAAQ,CAAC,CAAC,WAAAA,CAAU,OAAMF,GAAA,eAAcE,MAGpCC,GAA6B,CACjC,QAAS,UACT,KAAM,SACN,WAAY,SACZ,MAAO,GACP,MAAAF,GACA,KAAKG,EAAe,CAClB,GAAM,CAAC,KAAAC,EAAM,MAAAC,EAAO,OAAAC,EAAQ,WAAAL,EAAY,GAAAM,CAAE,EAAIJ,EAExCK,EAAID,EAAG,KAAK,cAAgB,IAAM,GAClCE,EAASJ,KAAQN,GAAA,iBAAgBE,MAAeO,SAAQV,GAAA,YAAWK,EAAKG,CAAM,EACpFH,EAAI,aAAUJ,GAAA,MAAKU,UAAeL,IAAO,CAC3C,GAGFM,GAAA,QAAeR,kFCzBf,IAAAS,GAAA,IAEMC,GAAgC,CACpC,QAAQ,CAAC,QAAAC,EAAS,WAAAC,CAAU,EAAC,CAC3B,IAAMC,EAAOF,IAAY,gBAAkB,OAAS,QACpD,SAAOF,GAAA,qBAAoBI,UAAaD,cAC1C,EACA,OAAQ,CAAC,CAAC,WAAAA,CAAU,OAAMH,GAAA,aAAYG,MAGlCE,GAA6B,CACjC,QAAS,CAAC,gBAAiB,eAAe,EAC1C,KAAM,SACN,WAAY,SACZ,MAAO,GACP,MAAAJ,GACA,KAAKK,EAAe,CAClB,GAAM,CAAC,QAAAJ,EAAS,KAAAK,EAAM,WAAAJ,CAAU,EAAIG,EAC9BE,EAAKN,IAAY,gBAAkBF,GAAA,UAAU,GAAKA,GAAA,UAAU,GAClEM,EAAI,aAAUN,GAAA,iBAAgBO,aAAgBC,KAAML,GAAY,CAClE,GAGFM,GAAA,QAAeJ,kFCvBf,IAAAK,GAAA,KAOAC,GAAA,IACAC,GAAA,KAQMC,GAAgC,CACpC,QAAS,CAAC,CAAC,OAAQ,CAAC,gBAAAC,CAAe,CAAC,OAAMH,GAAA,oCAAmCG,KAC7E,OAAQ,CAAC,CAAC,OAAQ,CAAC,gBAAAA,CAAe,CAAC,OAAMH,GAAA,uBAAsBG,MAG3DC,GAA6B,CACjC,QAAS,WACT,KAAM,SACN,WAAY,QACZ,MAAO,GACP,MAAAF,GACA,KAAKG,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,OAAAC,EAAQ,WAAAC,EAAY,KAAAC,EAAM,MAAAC,EAAO,GAAAC,CAAE,EAAIN,EAC7C,CAAC,KAAAO,CAAI,EAAID,EACf,GAAI,CAACD,GAASH,EAAO,SAAW,EAAG,OACnC,IAAMM,EAAUN,EAAO,QAAUK,EAAK,aAItC,GAHID,EAAG,UAAWG,EAAa,EAC1BC,EAAe,EAEhBH,EAAK,eAAgB,CACvB,IAAMI,EAAQX,EAAI,aAAa,WACzB,CAAC,kBAAAY,CAAiB,EAAIZ,EAAI,GAChC,QAAWa,KAAeX,EACxB,IAAIS,GAAK,KAAA,OAALA,EAAQE,MAAiB,QAAa,CAACD,EAAkB,IAAIC,CAAW,EAAG,CAC7E,IAAMC,EAAaR,EAAG,UAAU,OAASA,EAAG,cACtCS,EAAM,sBAAsBF,yBAAmCC,yBACrElB,GAAA,iBAAgBU,EAAIS,EAAKT,EAAG,KAAK,cAAc,GAKrD,SAASG,GAAa,CACpB,GAAID,GAAWH,EACbL,EAAI,WAAWL,GAAA,IAAKqB,CAAe,MAEnC,SAAWC,KAAQf,KACjBR,GAAA,wBAAuBM,EAAKiB,CAAI,CAGtC,CAEA,SAASP,GAAe,CACtB,IAAMQ,EAAUjB,EAAI,IAAI,SAAS,EACjC,GAAIO,GAAWH,EAAO,CACpB,IAAMc,EAAQlB,EAAI,IAAI,QAAS,EAAI,EACnCD,EAAI,WAAWmB,EAAO,IAAMC,EAAiBF,EAASC,CAAK,CAAC,EAC5DnB,EAAI,GAAGmB,CAAK,OAEZlB,EAAI,MAAGP,GAAA,kBAAiBM,EAAKE,EAAQgB,CAAO,CAAC,KAC7CxB,GAAA,mBAAkBM,EAAKkB,CAAO,EAC9BjB,EAAI,KAAI,CAEZ,CAEA,SAASe,GAAe,CACtBf,EAAI,MAAM,OAAQE,EAAqBc,GAAQ,CAC7CjB,EAAI,UAAU,CAAC,gBAAiBiB,CAAI,CAAC,EACrChB,EAAI,MAAGP,GAAA,kBAAiBO,EAAKG,EAAMa,EAAMV,EAAK,aAAa,EAAG,IAAMP,EAAI,MAAK,CAAE,CACjF,CAAC,CACH,CAEA,SAASoB,EAAiBF,EAAeC,EAAW,CAClDnB,EAAI,UAAU,CAAC,gBAAiBkB,CAAO,CAAC,EACxCjB,EAAI,MACFiB,EACAf,EACA,IAAK,CACHF,EAAI,OAAOkB,KAAOzB,GAAA,gBAAeO,EAAKG,EAAMc,EAASX,EAAK,aAAa,CAAC,EACxEN,EAAI,MAAGN,GAAA,KAAIwB,CAAK,EAAG,IAAK,CACtBnB,EAAI,MAAK,EACTC,EAAI,MAAK,CACX,CAAC,CACH,EACAN,GAAA,GAAG,CAEP,CACF,GAGF0B,GAAA,QAAetB,kFC/Ff,IAAAuB,GAAA,IAEMC,GAAgC,CACpC,QAAQ,CAAC,QAAAC,EAAS,WAAAC,CAAU,EAAC,CAC3B,IAAMC,EAAOF,IAAY,WAAa,OAAS,QAC/C,SAAOF,GAAA,qBAAoBI,UAAaD,SAC1C,EACA,OAAQ,CAAC,CAAC,WAAAA,CAAU,OAAMH,GAAA,aAAYG,MAGlCE,GAA6B,CACjC,QAAS,CAAC,WAAY,UAAU,EAChC,KAAM,QACN,WAAY,SACZ,MAAO,GACP,MAAAJ,GACA,KAAKK,EAAe,CAClB,GAAM,CAAC,QAAAJ,EAAS,KAAAK,EAAM,WAAAJ,CAAU,EAAIG,EAC9BE,EAAKN,IAAY,WAAaF,GAAA,UAAU,GAAKA,GAAA,UAAU,GAC7DM,EAAI,aAAUN,GAAA,KAAIO,YAAeC,KAAML,GAAY,CACrD,GAGFM,GAAA,QAAeJ,kFCxBf,IAAAK,GAAA,KAGEA,GAAgB,KAAO,4CAEzBC,GAAA,QAAeD,kFCJf,IAAAE,GAAA,KACAC,GAAA,IACAC,GAAA,KACAC,GAAA,KAQMC,GAAgC,CACpC,QAAS,CAAC,CAAC,OAAQ,CAAC,EAAAC,EAAG,EAAAC,CAAC,CAAC,OACvBL,GAAA,+CAA8CK,SAASD,mBACzD,OAAQ,CAAC,CAAC,OAAQ,CAAC,EAAAA,EAAG,EAAAC,CAAC,CAAC,OAAML,GAAA,SAAQI,SAASC,MAG3CC,GAA6B,CACjC,QAAS,cACT,KAAM,QACN,WAAY,UACZ,MAAO,GACP,MAAAH,GACA,KAAKI,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,KAAAC,EAAM,MAAAC,EAAO,OAAAC,EAAQ,aAAAC,EAAc,WAAAC,EAAY,GAAAC,CAAE,EAAIP,EACjE,GAAI,CAACG,GAAS,CAACC,EAAQ,OACvB,IAAMI,EAAQP,EAAI,IAAI,OAAO,EACvBQ,EAAYJ,EAAa,SAAQb,GAAA,gBAAea,EAAa,KAAK,EAAI,CAAA,EAC5EL,EAAI,WAAWQ,EAAOE,KAAqBjB,GAAA,KAAIa,aAAsB,EACrEN,EAAI,GAAGQ,CAAK,EAEZ,SAASE,GAAmB,CAC1B,IAAMb,EAAII,EAAI,IAAI,OAAKR,GAAA,KAAIS,UAAa,EAClCJ,EAAIG,EAAI,IAAI,GAAG,EACrBD,EAAI,UAAU,CAAC,EAAAH,EAAG,EAAAC,CAAC,CAAC,EACpBG,EAAI,OAAOO,EAAO,EAAI,EACtBP,EAAI,MAAGR,GAAA,KAAII,QAAS,KAAOc,EAAW,EAAKC,EAAQC,GAAQhB,EAAGC,CAAC,CAAC,CAClE,CAEA,SAASa,GAAW,CAClB,OAAOF,EAAU,OAAS,GAAK,CAACA,EAAU,KAAMK,GAAMA,IAAM,UAAYA,IAAM,OAAO,CACvF,CAEA,SAASF,EAAMf,EAASC,EAAO,CAC7B,IAAMiB,EAAOd,EAAI,KAAK,MAAM,EACtBe,KAAYxB,GAAA,gBAAeiB,EAAWM,EAAMR,EAAG,KAAK,cAAef,GAAA,SAAS,KAAK,EACjFyB,EAAUhB,EAAI,MAAM,aAAWR,GAAA,MAAK,EAC1CQ,EAAI,OAAIR,GAAA,MAAKI,OAAQ,IAAK,CACxBI,EAAI,IAAIc,KAAMtB,GAAA,KAAIS,KAAQL,IAAI,EAC9BI,EAAI,GAAGe,KAAWvB,GAAA,YAAW,EACzBgB,EAAU,OAAS,GAAGR,EAAI,MAAGR,GAAA,YAAWsB,mBAAoBtB,GAAA,KAAIsB,UAAa,EACjFd,EACG,MAAGR,GAAA,YAAWwB,KAAWF,iBAAqB,IAAK,CAClDd,EAAI,OAAOH,KAAGL,GAAA,KAAIwB,KAAWF,IAAO,EACpCf,EAAI,MAAK,EACTC,EAAI,OAAOO,EAAO,EAAK,EAAE,MAAK,CAChC,CAAC,EACA,QAAKf,GAAA,KAAIwB,KAAWF,QAAWlB,GAAG,CACvC,CAAC,CACH,CAEA,SAASgB,EAAOhB,EAASC,EAAO,CAC9B,IAAMoB,KAAMxB,GAAA,SAAQO,EAAKN,GAAA,OAAK,EACxBwB,EAAQlB,EAAI,KAAK,OAAO,EAC9BA,EAAI,MAAMkB,CAAK,EAAE,OAAI1B,GAAA,MAAKI,OAAQ,IAChCI,EAAI,OAAIR,GAAA,KAAIK,OAAOD,MAAMC,OAAQ,IAC/BG,EAAI,MAAGR,GAAA,KAAIyB,KAAOhB,KAAQL,OAAOK,KAAQJ,MAAO,IAAK,CACnDE,EAAI,MAAK,EACTC,EAAI,OAAOO,EAAO,EAAK,EAAE,MAAMW,CAAK,CACtC,CAAC,CAAC,CACH,CAEL,CACF,GAGFC,GAAA,QAAerB,kFC5Ef,IAAAsB,GAAA,IACAC,GAAA,KACAC,GAAA,KAIMC,GAAgC,CACpC,QAAS,4BACT,OAAQ,CAAC,CAAC,WAAAC,CAAU,OAAMJ,GAAA,oBAAmBI,MAGzCC,GAA6B,CACjC,QAAS,QACT,MAAO,GACP,MAAAF,GACA,KAAKG,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,KAAAC,EAAM,MAAAC,EAAO,WAAAL,EAAY,OAAAM,CAAM,EAAIJ,EAC3CG,GAAUC,GAAU,OAAOA,GAAU,SACvCJ,EAAI,aAAUN,GAAA,SAAKC,GAAA,SAAQM,EAAKL,GAAA,OAAK,KAAKM,MAASJ,IAAa,EAEhEE,EAAI,QAAKN,GAAA,KAAIU,SAAcF,GAAM,CAErC,GAGFG,GAAA,QAAeN,kFCzBf,IAAAO,GAAA,IACAC,GAAA,KACAC,GAAA,KAIMC,GAAgC,CACpC,QAAS,6CACT,OAAQ,CAAC,CAAC,WAAAC,CAAU,OAAMJ,GAAA,qBAAoBI,MAG1CC,GAA6B,CACjC,QAAS,OACT,WAAY,QACZ,MAAO,GACP,MAAAF,GACA,KAAKG,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,KAAAC,EAAM,MAAAC,EAAO,OAAAC,EAAQ,WAAAN,EAAY,GAAAO,CAAE,EAAIL,EACnD,GAAI,CAACG,GAASC,EAAO,SAAW,EAAG,MAAM,IAAI,MAAM,gCAAgC,EACnF,IAAME,EAAUF,EAAO,QAAUC,EAAG,KAAK,SACrCE,EACEC,EAAS,IAAaD,GAAG,KAAHA,EAAAA,KAAQZ,GAAA,SAAQM,EAAKL,GAAA,OAAK,EAElDa,EACJ,GAAIH,GAAWH,EACbM,EAAQR,EAAI,IAAI,OAAO,EACvBD,EAAI,WAAWS,EAAOC,CAAQ,MACzB,CAEL,GAAI,CAAC,MAAM,QAAQN,CAAM,EAAG,MAAM,IAAI,MAAM,0BAA0B,EACtE,IAAMO,EAAUV,EAAI,MAAM,UAAWH,CAAU,EAC/CW,KAAQf,GAAA,IAAG,GAAGU,EAAO,IAAI,CAACQ,EAAaC,IAAcC,EAAUH,EAASE,CAAC,CAAC,CAAC,EAE7Eb,EAAI,KAAKS,CAAK,EAEd,SAASC,GAAQ,CACfT,EAAI,OAAOQ,EAAO,EAAK,EACvBR,EAAI,MAAM,IAAKH,EAAqBiB,GAClCd,EAAI,MAAGP,GAAA,KAAIc,EAAM,KAAMN,MAASa,KAAM,IAAMd,EAAI,OAAOQ,EAAO,EAAI,EAAE,MAAK,CAAE,CAAC,CAEhF,CAEA,SAASK,EAAUH,EAAeE,EAAS,CACzC,IAAMG,EAAMZ,EAAOS,GACnB,OAAO,OAAOG,GAAQ,UAAYA,IAAQ,QACtCtB,GAAA,KAAIc,EAAM,KAAMN,MAASS,KAAWE,SACpCnB,GAAA,KAAIQ,SAAYc,GACtB,CACF,GAGFC,GAAA,QAAelB,kFCpDf,IAAAmB,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAEMC,GAAyB,CAE7BV,GAAA,QACAC,GAAA,QAEAC,GAAA,QACAC,GAAA,QAEAC,GAAA,QACAC,GAAA,QAEAC,GAAA,QACAC,GAAA,QAEA,CAAC,QAAS,OAAQ,WAAY,CAAC,SAAU,OAAO,CAAC,EACjD,CAAC,QAAS,WAAY,WAAY,SAAS,EAC3CC,GAAA,QACAC,GAAA,SAGFE,GAAA,QAAeD,oHCzBf,IAAAE,GAAA,IACAC,GAAA,KAIMC,GAAgC,CACpC,QAAS,CAAC,CAAC,OAAQ,CAAC,IAAAC,CAAG,CAAC,OAAMH,GAAA,+BAA8BG,UAC5D,OAAQ,CAAC,CAAC,OAAQ,CAAC,IAAAA,CAAG,CAAC,OAAMH,GAAA,aAAYG,MAGrCC,GAA6B,CACjC,QAAS,kBACT,KAAM,QACN,WAAY,CAAC,UAAW,QAAQ,EAChC,OAAQ,cACR,MAAAF,GACA,KAAKG,EAAe,CAClB,GAAM,CAAC,aAAAC,EAAc,GAAAC,CAAE,EAAIF,EACrB,CAAC,MAAAG,CAAK,EAAIF,EAChB,GAAI,CAAC,MAAM,QAAQE,CAAK,EAAG,IACzBP,GAAA,iBAAgBM,EAAI,sEAAsE,EAC1F,OAEFE,GAAwBJ,EAAKG,CAAK,CACpC,GAGF,SAAgBC,GAAwBJ,EAAiBG,EAAkB,CACzE,GAAM,CAAC,IAAAE,EAAK,OAAAC,EAAQ,KAAAC,EAAM,QAAAC,EAAS,GAAAN,CAAE,EAAIF,EACzCE,EAAG,MAAQ,GACX,IAAMJ,EAAMO,EAAI,MAAM,SAAOV,GAAA,KAAIY,UAAa,EAC9C,GAAID,IAAW,GACbN,EAAI,UAAU,CAAC,IAAKG,EAAM,MAAM,CAAC,EACjCH,EAAI,QAAKL,GAAA,KAAIG,QAAUK,EAAM,QAAQ,UAC5B,OAAOG,GAAU,UAAY,IAACV,GAAA,mBAAkBM,EAAII,CAAM,EAAG,CACtE,IAAMG,EAAQJ,EAAI,IAAI,WAASV,GAAA,KAAIG,QAAUK,EAAM,QAAQ,EAC3DE,EAAI,MAAGV,GAAA,KAAIc,CAAK,EAAG,IAAMC,EAAcD,CAAK,CAAC,EAC7CT,EAAI,GAAGS,CAAK,EAGd,SAASC,EAAcD,EAAW,CAChCJ,EAAI,SAAS,IAAKF,EAAM,OAAQL,EAAMa,GAAK,CACzCX,EAAI,UAAU,CAAC,QAAAQ,EAAS,SAAUG,EAAG,aAAcf,GAAA,KAAK,GAAG,EAAGa,CAAK,EAC9DP,EAAG,WAAWG,EAAI,MAAGV,GAAA,KAAIc,CAAK,EAAG,IAAMJ,EAAI,MAAK,CAAE,CACzD,CAAC,CACH,CACF,CAnBAO,GAAA,wBAAAR,GAqBAQ,GAAA,QAAeb,0GCrDf,IAAAc,GAAA,IACAC,GAAA,KACAC,GAAA,KAEMC,GAA6B,CACjC,QAAS,QACT,KAAM,QACN,WAAY,CAAC,SAAU,QAAS,SAAS,EACzC,OAAQ,cACR,KAAKC,EAAe,CAClB,GAAM,CAAC,OAAAC,EAAQ,GAAAC,CAAE,EAAIF,EACrB,GAAI,MAAM,QAAQC,CAAM,EAAG,OAAOE,GAAcH,EAAK,kBAAmBC,CAAM,EAC9EC,EAAG,MAAQ,GACP,IAAAL,GAAA,mBAAkBK,EAAID,CAAM,GAChCD,EAAI,MAAGF,GAAA,eAAcE,CAAG,CAAC,CAC3B,GAGF,SAAgBG,GACdH,EACAI,EACAC,EAAsBL,EAAI,OAAM,CAEhC,GAAM,CAAC,IAAAM,EAAK,aAAAC,EAAc,KAAAC,EAAM,QAAAC,EAAS,GAAAP,CAAE,EAAIF,EAC/CU,EAAiBH,CAAY,EACzBL,EAAG,KAAK,aAAeG,EAAO,QAAUH,EAAG,QAAU,KACvDA,EAAG,MAAQL,GAAA,eAAe,MAAMS,EAAKD,EAAO,OAAQH,EAAG,KAAK,GAE9D,IAAMS,EAAQL,EAAI,KAAK,OAAO,EACxBM,EAAMN,EAAI,MAAM,SAAOV,GAAA,KAAIY,UAAa,EAC9CH,EAAO,QAAQ,CAACQ,EAAgBC,IAAa,IACvCjB,GAAA,mBAAkBK,EAAIW,CAAG,IAC7BP,EAAI,MAAGV,GAAA,KAAIgB,OAASE,IAAK,IACvBd,EAAI,UACF,CACE,QAAAS,EACA,WAAYK,EACZ,SAAUA,GAEZH,CAAK,CACN,EAEHX,EAAI,GAAGW,CAAK,EACd,CAAC,EAED,SAASD,EAAiBG,EAAoB,CAC5C,GAAM,CAAC,KAAAE,EAAM,cAAAC,CAAa,EAAId,EACxBe,EAAIZ,EAAO,OACXa,EAAYD,IAAMJ,EAAI,WAAaI,IAAMJ,EAAI,UAAYA,EAAIT,KAAgB,IACnF,GAAIW,EAAK,cAAgB,CAACG,EAAW,CACnC,IAAMC,EAAM,IAAIV,SAAeQ,qCAAqCb,6CAAsDY,QAC1HnB,GAAA,iBAAgBK,EAAIiB,EAAKJ,EAAK,YAAY,EAE9C,CACF,CApCAK,GAAA,cAAAjB,GAsCAiB,GAAA,QAAerB,kFCzDf,IAAAsB,GAAA,KAEMC,GAA6B,CACjC,QAAS,cACT,KAAM,QACN,WAAY,CAAC,OAAO,EACpB,OAAQ,cACR,KAAOC,MAAQF,GAAA,eAAcE,EAAK,OAAO,GAG3CC,GAAA,QAAeF,kFCJf,IAAAG,GAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAIMC,GAAgC,CACpC,QAAS,CAAC,CAAC,OAAQ,CAAC,IAAAC,CAAG,CAAC,OAAML,GAAA,+BAA8BK,UAC5D,OAAQ,CAAC,CAAC,OAAQ,CAAC,IAAAA,CAAG,CAAC,OAAML,GAAA,aAAYK,MAGrCC,GAA6B,CACjC,QAAS,QACT,KAAM,QACN,WAAY,CAAC,SAAU,SAAS,EAChC,OAAQ,cACR,MAAAF,GACA,KAAKG,EAAe,CAClB,GAAM,CAAC,OAAAC,EAAQ,aAAAC,EAAc,GAAAC,CAAE,EAAIH,EAC7B,CAAC,YAAAI,CAAW,EAAIF,EACtBC,EAAG,MAAQ,GACP,IAAAT,GAAA,mBAAkBS,EAAIF,CAAM,IAC5BG,KAAaR,GAAA,yBAAwBI,EAAKI,CAAW,EACpDJ,EAAI,MAAGL,GAAA,eAAcK,CAAG,CAAC,EAChC,GAGFK,GAAA,QAAeN,kFC5Bf,IAAAO,GAAA,IACAC,GAAA,KAQMC,GAAgC,CACpC,QAAS,CAAC,CAAC,OAAQ,CAAC,IAAAC,EAAK,IAAAC,CAAG,CAAC,IAC3BA,IAAQ,UACJJ,GAAA,6BAA4BG,qBAC5BH,GAAA,6BAA4BG,sBAAwBC,kBAC1D,OAAQ,CAAC,CAAC,OAAQ,CAAC,IAAAD,EAAK,IAAAC,CAAG,CAAC,IAC1BA,IAAQ,UAAYJ,GAAA,mBAAkBG,QAASH,GAAA,mBAAkBG,mBAAqBC,MAGpFC,GAA6B,CACjC,QAAS,WACT,KAAM,QACN,WAAY,CAAC,SAAU,SAAS,EAChC,OAAQ,cACR,YAAa,GACb,MAAAH,GACA,KAAKI,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,OAAAC,EAAQ,aAAAC,EAAc,KAAAC,EAAM,GAAAC,CAAE,EAAIL,EAC1CH,EACAC,EACE,CAAC,YAAAQ,EAAa,YAAAC,CAAW,EAAIJ,EAC/BE,EAAG,KAAK,MACVR,EAAMS,IAAgB,OAAY,EAAIA,EACtCR,EAAMS,GAENV,EAAM,EAER,IAAMW,EAAMP,EAAI,MAAM,SAAOP,GAAA,KAAIU,UAAa,EAE9C,GADAJ,EAAI,UAAU,CAAC,IAAAH,EAAK,IAAAC,CAAG,CAAC,EACpBA,IAAQ,QAAaD,IAAQ,EAAG,IAClCF,GAAA,iBAAgBU,EAAI,sEAAsE,EAC1F,OAEF,GAAIP,IAAQ,QAAaD,EAAMC,EAAK,IAClCH,GAAA,iBAAgBU,EAAI,iDAAiD,EACrEL,EAAI,KAAI,EACR,OAEF,MAAIL,GAAA,mBAAkBU,EAAIH,CAAM,EAAG,CACjC,IAAIO,KAAOf,GAAA,KAAIc,QAAUX,IACrBC,IAAQ,SAAWW,KAAOf,GAAA,KAAIe,QAAWD,QAAUV,KACvDE,EAAI,KAAKS,CAAI,EACb,OAGFJ,EAAG,MAAQ,GACX,IAAMK,EAAQT,EAAI,KAAK,OAAO,EAC1BH,IAAQ,QAAaD,IAAQ,EAC/Bc,EAAcD,EAAO,IAAMT,EAAI,GAAGS,EAAO,IAAMT,EAAI,MAAK,CAAE,CAAC,EAClDJ,IAAQ,GACjBI,EAAI,IAAIS,EAAO,EAAI,EACfZ,IAAQ,QAAWG,EAAI,MAAGP,GAAA,KAAIU,eAAmBQ,CAAsB,IAE3EX,EAAI,IAAIS,EAAO,EAAK,EACpBE,EAAsB,GAExBZ,EAAI,OAAOU,EAAO,IAAMV,EAAI,MAAK,CAAE,EAEnC,SAASY,GAAsB,CAC7B,IAAMC,EAAWZ,EAAI,KAAK,QAAQ,EAC5Ba,EAAQb,EAAI,IAAI,QAAS,CAAC,EAChCU,EAAcE,EAAU,IAAMZ,EAAI,GAAGY,EAAU,IAAME,EAAYD,CAAK,CAAC,CAAC,CAC1E,CAEA,SAASH,EAAcK,EAAcC,EAAiB,CACpDhB,EAAI,SAAS,IAAK,EAAGO,EAAMU,GAAK,CAC9BlB,EAAI,UACF,CACE,QAAS,WACT,SAAUkB,EACV,aAAcvB,GAAA,KAAK,IACnB,cAAe,IAEjBqB,CAAM,EAERC,EAAK,CACP,CAAC,CACH,CAEA,SAASF,EAAYD,EAAW,CAC9Bb,EAAI,QAAKP,GAAA,KAAIoB,KAAS,EAClBhB,IAAQ,OACVG,EAAI,MAAGP,GAAA,KAAIoB,QAAYjB,IAAO,IAAMI,EAAI,OAAOS,EAAO,EAAI,EAAE,MAAK,CAAE,GAEnET,EAAI,MAAGP,GAAA,KAAIoB,OAAWhB,IAAO,IAAMG,EAAI,OAAOS,EAAO,EAAK,EAAE,MAAK,CAAE,EAC/Db,IAAQ,EAAGI,EAAI,OAAOS,EAAO,EAAI,EAChCT,EAAI,MAAGP,GAAA,KAAIoB,QAAYjB,IAAO,IAAMI,EAAI,OAAOS,EAAO,EAAI,CAAC,EAEpE,CACF,GAGFS,GAAA,QAAepB,gJCpGf,IAAAqB,GAAA,IACAC,GAAA,KACAC,GAAA,KAmBaC,GAAA,MAAgC,CAC3C,QAAS,CAAC,CAAC,OAAQ,CAAC,SAAAC,EAAU,UAAAC,EAAW,KAAAC,CAAI,CAAC,IAAK,CACjD,IAAMC,EAAeF,IAAc,EAAI,WAAa,aACpD,SAAOL,GAAA,iBAAgBO,KAAgBD,mBAAsBF,cAC/D,EACA,OAAQ,CAAC,CAAC,OAAQ,CAAC,SAAAA,EAAU,UAAAC,EAAW,KAAAC,EAAM,gBAAAE,CAAe,CAAC,OAC5DR,GAAA,gBAAeI;uBACII;iBACNH;YACLC,MAGZ,IAAMG,GAA6B,CACjC,QAAS,eACT,KAAM,SACN,WAAY,SACZ,MAAAN,GAAA,MACA,KAAKO,EAAe,CAClB,GAAM,CAACC,EAAUC,CAAO,EAAIC,GAAkBH,CAAG,EACjDI,GAAqBJ,EAAKC,CAAQ,EAClCI,GAAmBL,EAAKE,CAAO,CACjC,GAGF,SAASC,GAAkB,CAAC,OAAAG,CAAM,EAAa,CAC7C,IAAMC,EAAqC,CAAA,EACrCC,EAAiC,CAAA,EACvC,QAAWC,KAAOH,EAAQ,CACxB,GAAIG,IAAQ,YAAa,SACzB,IAAMb,EAAO,MAAM,QAAQU,EAAOG,EAAI,EAAIF,EAAeC,EACzDZ,EAAKa,GAAOH,EAAOG,GAErB,MAAO,CAACF,EAAcC,CAAU,CAClC,CAEA,SAAgBJ,GACdJ,EACAO,EAA2CP,EAAI,OAAM,CAErD,GAAM,CAAC,IAAAU,EAAK,KAAAC,EAAM,GAAAC,CAAE,EAAIZ,EACxB,GAAI,OAAO,KAAKO,CAAY,EAAE,SAAW,EAAG,OAC5C,IAAMM,EAAUH,EAAI,IAAI,SAAS,EACjC,QAAWI,KAAQP,EAAc,CAC/B,IAAMX,EAAOW,EAAaO,GAC1B,GAAIlB,EAAK,SAAW,EAAG,SACvB,IAAMmB,KAAcvB,GAAA,gBAAekB,EAAKC,EAAMG,EAAMF,EAAG,KAAK,aAAa,EACzEZ,EAAI,UAAU,CACZ,SAAUc,EACV,UAAWlB,EAAK,OAChB,KAAMA,EAAK,KAAK,IAAI,EACrB,EACGgB,EAAG,UACLF,EAAI,GAAGK,EAAa,IAAK,CACvB,QAAWC,KAAWpB,KACpBJ,GAAA,wBAAuBQ,EAAKgB,CAAO,CAEvC,CAAC,GAEDN,EAAI,MAAGpB,GAAA,KAAIyB,YAAmBvB,GAAA,kBAAiBQ,EAAKJ,EAAMiB,CAAO,IAAI,KACrErB,GAAA,mBAAkBQ,EAAKa,CAAO,EAC9BH,EAAI,KAAI,GAGd,CA5BAjB,GAAA,qBAAAW,GA8BA,SAAgBC,GAAmBL,EAAiBQ,EAAwBR,EAAI,OAAM,CACpF,GAAM,CAAC,IAAAU,EAAK,KAAAC,EAAM,QAAAM,EAAS,GAAAL,CAAE,EAAIZ,EAC3BkB,EAAQR,EAAI,KAAK,OAAO,EAC9B,QAAWI,KAAQN,KACbjB,GAAA,mBAAkBqB,EAAIJ,EAAWM,EAAkB,IACvDJ,EAAI,MACFlB,GAAA,gBAAekB,EAAKC,EAAMG,EAAMF,EAAG,KAAK,aAAa,EACrD,IAAK,CACH,IAAMO,EAASnB,EAAI,UAAU,CAAC,QAAAiB,EAAS,WAAYH,CAAI,EAAGI,CAAK,EAC/DlB,EAAI,oBAAoBmB,EAAQD,CAAK,CACvC,EACA,IAAMR,EAAI,IAAIQ,EAAO,EAAI,GAE3BlB,EAAI,GAAGkB,CAAK,EAEhB,CAfAzB,GAAA,mBAAAY,GAiBAZ,GAAA,QAAeM,kFCxGf,IAAAqB,GAAA,IACAC,GAAA,KAIMC,GAAgC,CACpC,QAAS,8BACT,OAAQ,CAAC,CAAC,OAAAC,CAAM,OAAMH,GAAA,oBAAmBG,EAAO,iBAG5CC,GAA6B,CACjC,QAAS,gBACT,KAAM,SACN,WAAY,CAAC,SAAU,SAAS,EAChC,MAAAF,GACA,KAAKG,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,OAAAC,EAAQ,KAAAC,EAAM,GAAAC,CAAE,EAAIJ,EAChC,MAAIJ,GAAA,mBAAkBQ,EAAIF,CAAM,EAAG,OACnC,IAAMG,EAAQJ,EAAI,KAAK,OAAO,EAE9BA,EAAI,MAAM,MAAOE,EAAOG,GAAO,CAC7BN,EAAI,UAAU,CAAC,aAAcM,CAAG,CAAC,EACjCN,EAAI,UACF,CACE,QAAS,gBACT,KAAMM,EACN,UAAW,CAAC,QAAQ,EACpB,aAAcA,EACd,cAAe,IAEjBD,CAAK,EAEPJ,EAAI,MAAGN,GAAA,KAAIU,CAAK,EAAG,IAAK,CACtBL,EAAI,MAAM,EAAI,EACTI,EAAG,WAAWH,EAAI,MAAK,CAC9B,CAAC,CACH,CAAC,EAEDD,EAAI,GAAGK,CAAK,CACd,GAGFE,GAAA,QAAeR,kFC1Cf,IAAAS,GAAA,KACAC,GAAA,IACAC,GAAA,KAEAC,GAAA,KAQMC,GAAgC,CACpC,QAAS,sCACT,OAAQ,CAAC,CAAC,OAAAC,CAAM,OAAMJ,GAAA,0BAAyBI,EAAO,uBAGlDC,GAAsD,CAC1D,QAAS,uBACT,KAAM,CAAC,QAAQ,EACf,WAAY,CAAC,UAAW,QAAQ,EAChC,eAAgB,GAChB,YAAa,GACb,MAAAF,GACA,KAAKG,EAAG,CACN,GAAM,CAAC,IAAAC,EAAK,OAAAC,EAAQ,aAAAC,EAAc,KAAAC,EAAM,UAAAC,EAAW,GAAAC,CAAE,EAAIN,EAEzD,GAAI,CAACK,EAAW,MAAM,IAAI,MAAM,0BAA0B,EAC1D,GAAM,CAAC,UAAAE,EAAW,KAAAC,CAAI,EAAIF,EAE1B,GADAA,EAAG,MAAQ,GACPE,EAAK,mBAAqB,UAASZ,GAAA,mBAAkBU,EAAIJ,CAAM,EAAG,OACtE,IAAMO,KAAQhB,GAAA,qBAAoBU,EAAa,UAAU,EACnDO,KAAWjB,GAAA,qBAAoBU,EAAa,iBAAiB,EACnEQ,EAAyB,EACzBX,EAAI,MAAGN,GAAA,KAAIW,SAAiBV,GAAA,QAAE,QAAQ,EAEtC,SAASgB,GAAyB,CAChCV,EAAI,MAAM,MAAOG,EAAOQ,GAAa,CAC/B,CAACH,EAAM,QAAU,CAACC,EAAS,OAAQG,EAAuBD,CAAG,EAC5DX,EAAI,GAAGa,EAAaF,CAAG,EAAG,IAAMC,EAAuBD,CAAG,CAAC,CAClE,CAAC,CACH,CAEA,SAASE,EAAaF,EAAS,CAC7B,IAAIG,EACJ,GAAIN,EAAM,OAAS,EAAG,CAEpB,IAAMO,KAAcpB,GAAA,gBAAeU,EAAIH,EAAa,WAAY,YAAY,EAC5EY,KAActB,GAAA,eAAcQ,EAAKe,EAAqBJ,CAAG,OAChDH,EAAM,OACfM,KAAcrB,GAAA,IAAG,GAAGe,EAAM,IAAKQ,MAAMvB,GAAA,KAAIkB,SAAWK,GAAG,CAAC,EAExDF,EAAcrB,GAAA,IAEhB,OAAIgB,EAAS,SACXK,KAAcrB,GAAA,IAAGqB,EAAa,GAAGL,EAAS,IAAKO,MAAMvB,GAAA,QAAID,GAAA,YAAWO,EAAKiB,CAAC,UAAUL,IAAM,CAAC,MAEtFlB,GAAA,KAAIqB,CAAW,CACxB,CAEA,SAASG,EAAiBN,EAAS,CACjCX,EAAI,QAAKP,GAAA,YAAWU,KAAQQ,IAAM,CACpC,CAEA,SAASC,EAAuBD,EAAS,CACvC,GAAIJ,EAAK,mBAAqB,OAAUA,EAAK,kBAAoBN,IAAW,GAAQ,CAClFgB,EAAiBN,CAAG,EACpB,OAGF,GAAIV,IAAW,GAAO,CACpBF,EAAI,UAAU,CAAC,mBAAoBY,CAAG,CAAC,EACvCZ,EAAI,MAAK,EACJO,GAAWN,EAAI,MAAK,EACzB,OAGF,GAAI,OAAOC,GAAU,UAAY,IAACN,GAAA,mBAAkBU,EAAIJ,CAAM,EAAG,CAC/D,IAAMiB,EAAQlB,EAAI,KAAK,OAAO,EAC1BO,EAAK,mBAAqB,WAC5BY,EAAsBR,EAAKO,EAAO,EAAK,EACvClB,EAAI,MAAGP,GAAA,KAAIyB,CAAK,EAAG,IAAK,CACtBnB,EAAI,MAAK,EACTkB,EAAiBN,CAAG,CACtB,CAAC,IAEDQ,EAAsBR,EAAKO,CAAK,EAC3BZ,GAAWN,EAAI,MAAGP,GAAA,KAAIyB,CAAK,EAAG,IAAMlB,EAAI,MAAK,CAAE,GAG1D,CAEA,SAASmB,EAAsBR,EAAWO,EAAaE,EAAc,CACnE,IAAMC,EAA2B,CAC/B,QAAS,uBACT,SAAUV,EACV,aAAchB,GAAA,KAAK,KAEjByB,IAAW,IACb,OAAO,OAAOC,EAAW,CACvB,cAAe,GACf,aAAc,GACd,UAAW,GACZ,EAEHtB,EAAI,UAAUsB,EAAWH,CAAK,CAChC,CACF,GAGFI,GAAA,QAAexB,kFCpHf,IAAAyB,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAEMC,GAA6B,CACjC,QAAS,aACT,KAAM,SACN,WAAY,SACZ,KAAKC,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,OAAAC,EAAQ,aAAAC,EAAc,KAAAC,EAAM,GAAAC,CAAE,EAAIL,EAC1CK,EAAG,KAAK,mBAAqB,OAASF,EAAa,uBAAyB,QAC9EL,GAAA,QAAM,KAAK,IAAIH,GAAA,WAAWU,EAAIP,GAAA,QAAO,sBAAsB,CAAC,EAE9D,IAAMQ,KAAWV,GAAA,qBAAoBM,CAAM,EAC3C,QAAWK,KAAQD,EACjBD,EAAG,kBAAkB,IAAIE,CAAI,EAE3BF,EAAG,KAAK,aAAeC,EAAS,QAAUD,EAAG,QAAU,KACzDA,EAAG,MAAQR,GAAA,eAAe,MAAMI,KAAKJ,GAAA,QAAOS,CAAQ,EAAGD,EAAG,KAAK,GAEjE,IAAMG,EAAaF,EAAS,OAAQG,GAAM,IAACZ,GAAA,mBAAkBQ,EAAIH,EAAOO,EAAE,CAAC,EAC3E,GAAID,EAAW,SAAW,EAAG,OAC7B,IAAME,EAAQT,EAAI,KAAK,OAAO,EAE9B,QAAWM,KAAQC,EACbG,EAAWJ,CAAI,EACjBK,EAAoBL,CAAI,GAExBN,EAAI,MAAGL,GAAA,gBAAeK,EAAKG,EAAMG,EAAMF,EAAG,KAAK,aAAa,CAAC,EAC7DO,EAAoBL,CAAI,EACnBF,EAAG,WAAWJ,EAAI,KAAI,EAAG,IAAIS,EAAO,EAAI,EAC7CT,EAAI,MAAK,GAEXD,EAAI,GAAG,kBAAkB,IAAIO,CAAI,EACjCP,EAAI,GAAGU,CAAK,EAGd,SAASC,EAAWJ,EAAY,CAC9B,OAAOF,EAAG,KAAK,aAAe,CAACA,EAAG,eAAiBH,EAAOK,GAAM,UAAY,MAC9E,CAEA,SAASK,EAAoBL,EAAY,CACvCP,EAAI,UACF,CACE,QAAS,aACT,WAAYO,EACZ,SAAUA,GAEZG,CAAK,CAET,CACF,GAGFG,GAAA,QAAed,kFCtDf,IAAAe,GAAA,KACAC,GAAA,IACAC,GAAA,KACAC,GAAA,KAGMC,GAA6B,CACjC,QAAS,oBACT,KAAM,SACN,WAAY,SACZ,KAAKC,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,OAAAC,EAAQ,KAAAC,EAAM,aAAAC,EAAc,GAAAC,CAAE,EAAIL,EACxC,CAAC,KAAAM,CAAI,EAAID,EACTE,KAAWZ,GAAA,qBAAoBO,CAAM,EACrCM,EAAsBD,EAAS,OAAQE,MAC3CZ,GAAA,mBAAkBQ,EAAIH,EAAOO,EAAe,CAAC,EAG/C,GACEF,EAAS,SAAW,GACnBC,EAAoB,SAAWD,EAAS,SACtC,CAACF,EAAG,KAAK,aAAeA,EAAG,QAAU,IAExC,OAGF,IAAMK,EACJJ,EAAK,cAAgB,CAACA,EAAK,yBAA2BF,EAAa,WAC/DO,EAAQV,EAAI,KAAK,OAAO,EAC1BI,EAAG,QAAU,IAAQ,EAAEA,EAAG,iBAAiBT,GAAA,QAC7CS,EAAG,SAAQP,GAAA,sBAAqBG,EAAKI,EAAG,KAAK,GAE/C,GAAM,CAAC,MAAAO,CAAK,EAAIP,EAChBQ,EAAyB,EAEzB,SAASA,GAAyB,CAChC,QAAWC,KAAOP,EACZG,GAAiBK,EAAwBD,CAAG,EAC5CT,EAAG,UACLW,EAAmBF,CAAG,GAEtBb,EAAI,IAAIU,EAAO,EAAI,EACnBK,EAAmBF,CAAG,EACtBb,EAAI,GAAGU,CAAK,EAGlB,CAEA,SAASI,EAAwBD,EAAW,CAC1C,QAAWG,KAAQP,EACb,IAAI,OAAOI,CAAG,EAAE,KAAKG,CAAI,MAC3BpB,GAAA,iBACEQ,EACA,YAAYY,qBAAwBH,iCAAmC,CAI/E,CAEA,SAASE,EAAmBF,EAAW,CACrCb,EAAI,MAAM,MAAOE,EAAOe,GAAO,CAC7BjB,EAAI,MAAGL,GAAA,QAAID,GAAA,YAAWK,EAAKc,CAAG,UAAUI,KAAQ,IAAK,CACnD,IAAMC,EAAcX,EAAoB,SAASM,CAAG,EAC/CK,GACHnB,EAAI,UACF,CACE,QAAS,oBACT,WAAYc,EACZ,SAAUI,EACV,aAAcpB,GAAA,KAAK,KAErBa,CAAK,EAILN,EAAG,KAAK,aAAeO,IAAU,GACnCX,EAAI,UAAOL,GAAA,KAAIgB,KAASM,KAAQ,EAAI,EAC3B,CAACC,GAAe,CAACd,EAAG,WAG7BJ,EAAI,MAAGL,GAAA,KAAIe,CAAK,EAAG,IAAMV,EAAI,MAAK,CAAE,CAExC,CAAC,CACH,CAAC,CACH,CACF,GAGFmB,GAAA,QAAerB,kFCxFf,IAAAsB,GAAA,KAIMC,GAA6B,CACjC,QAAS,MACT,WAAY,CAAC,SAAU,SAAS,EAChC,YAAa,GACb,KAAKC,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,OAAAC,EAAQ,GAAAC,CAAE,EAAIH,EAC1B,MAAIF,GAAA,mBAAkBK,EAAID,CAAM,EAAG,CACjCF,EAAI,KAAI,EACR,OAGF,IAAMI,EAAQH,EAAI,KAAK,OAAO,EAC9BD,EAAI,UACF,CACE,QAAS,MACT,cAAe,GACf,aAAc,GACd,UAAW,IAEbI,CAAK,EAGPJ,EAAI,WACFI,EACA,IAAMJ,EAAI,MAAK,EACf,IAAMA,EAAI,MAAK,CAAE,CAErB,EACA,MAAO,CAAC,QAAS,mBAAmB,GAGtCK,GAAA,QAAeN,kFCpCf,IAAAO,GAAA,KAIMC,GAA6B,CACjC,QAAS,QACT,WAAY,QACZ,YAAa,GACb,KAAMD,GAAA,cACN,MAAO,CAAC,QAAS,8BAA8B,GAGjDE,GAAA,QAAeD,kFCNf,IAAAE,GAAA,IACAC,GAAA,KASMC,GAAgC,CACpC,QAAS,yCACT,OAAQ,CAAC,CAAC,OAAAC,CAAM,OAAMH,GAAA,sBAAqBG,EAAO,YAG9CC,GAA6B,CACjC,QAAS,QACT,WAAY,QACZ,YAAa,GACb,MAAAF,GACA,KAAKG,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,OAAAC,EAAQ,aAAAC,EAAc,GAAAC,CAAE,EAAIJ,EAExC,GAAI,CAAC,MAAM,QAAQE,CAAM,EAAG,MAAM,IAAI,MAAM,0BAA0B,EACtE,GAAIE,EAAG,KAAK,eAAiBD,EAAa,cAAe,OACzD,IAAME,EAAsBH,EACtBI,EAAQL,EAAI,IAAI,QAAS,EAAK,EAC9BM,EAAUN,EAAI,IAAI,UAAW,IAAI,EACjCO,EAAWP,EAAI,KAAK,QAAQ,EAClCD,EAAI,UAAU,CAAC,QAAAO,CAAO,CAAC,EAGvBN,EAAI,MAAMQ,CAAa,EAEvBT,EAAI,OACFM,EACA,IAAMN,EAAI,MAAK,EACf,IAAMA,EAAI,MAAM,EAAI,CAAC,EAGvB,SAASS,GAAa,CACpBJ,EAAO,QAAQ,CAACK,EAAgBC,IAAa,CAC3C,IAAIC,KACAhB,GAAA,mBAAkBQ,EAAIM,CAAG,EAC3BT,EAAI,IAAIO,EAAU,EAAI,EAEtBI,EAASZ,EAAI,UACX,CACE,QAAS,QACT,WAAYW,EACZ,cAAe,IAEjBH,CAAQ,EAIRG,EAAI,GACNV,EACG,MAAGN,GAAA,KAAIa,QAAeF,GAAO,EAC7B,OAAOA,EAAO,EAAK,EACnB,OAAOC,KAASZ,GAAA,MAAKY,MAAYI,IAAI,EACrC,KAAI,EAGTV,EAAI,GAAGO,EAAU,IAAK,CACpBP,EAAI,OAAOK,EAAO,EAAI,EACtBL,EAAI,OAAOM,EAASI,CAAC,EACjBC,GAAQZ,EAAI,eAAeY,EAAQjB,GAAA,IAAI,CAC7C,CAAC,CACH,CAAC,CACH,CACF,GAGFkB,GAAA,QAAed,kFC/Ef,IAAAe,GAAA,KAEMC,GAA6B,CACjC,QAAS,QACT,WAAY,QACZ,KAAKC,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,OAAAC,EAAQ,GAAAC,CAAE,EAAIH,EAE1B,GAAI,CAAC,MAAM,QAAQE,CAAM,EAAG,MAAM,IAAI,MAAM,0BAA0B,EACtE,IAAME,EAAQH,EAAI,KAAK,OAAO,EAC9BC,EAAO,QAAQ,CAACG,EAAgB,IAAa,CAC3C,MAAIP,GAAA,mBAAkBK,EAAIE,CAAG,EAAG,OAChC,IAAMC,EAASN,EAAI,UAAU,CAAC,QAAS,QAAS,WAAY,CAAC,EAAGI,CAAK,EACrEJ,EAAI,GAAGI,CAAK,EACZJ,EAAI,eAAeM,CAAM,CAC3B,CAAC,CACH,GAGFC,GAAA,QAAeR,kFCbf,IAAAS,GAAA,IACAC,GAAA,KAIMC,GAAgC,CACpC,QAAS,CAAC,CAAC,OAAAC,CAAM,OAAMH,GAAA,mBAAkBG,EAAO,mBAChD,OAAQ,CAAC,CAAC,OAAAA,CAAM,OAAMH,GAAA,sBAAqBG,EAAO,aAG9CC,GAA6B,CACjC,QAAS,KACT,WAAY,CAAC,SAAU,SAAS,EAChC,YAAa,GACb,MAAAF,GACA,KAAKG,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,aAAAC,EAAc,GAAAC,CAAE,EAAIH,EAC5BE,EAAa,OAAS,QAAaA,EAAa,OAAS,WAC3DN,GAAA,iBAAgBO,EAAI,2CAA2C,EAEjE,IAAMC,EAAUC,GAAUF,EAAI,MAAM,EAC9BG,EAAUD,GAAUF,EAAI,MAAM,EACpC,GAAI,CAACC,GAAW,CAACE,EAAS,OAE1B,IAAMC,EAAQN,EAAI,IAAI,QAAS,EAAI,EAC7BO,EAAWP,EAAI,KAAK,QAAQ,EAIlC,GAHAQ,EAAU,EACVT,EAAI,MAAK,EAELI,GAAWE,EAAS,CACtB,IAAMI,EAAWT,EAAI,IAAI,UAAU,EACnCD,EAAI,UAAU,CAAC,SAAAU,CAAQ,CAAC,EACxBT,EAAI,GAAGO,EAAUG,EAAe,OAAQD,CAAQ,EAAGC,EAAe,OAAQD,CAAQ,CAAC,OAC1EN,EACTH,EAAI,GAAGO,EAAUG,EAAe,MAAM,CAAC,EAEvCV,EAAI,MAAGN,GAAA,KAAIa,CAAQ,EAAGG,EAAe,MAAM,CAAC,EAG9CX,EAAI,KAAKO,EAAO,IAAMP,EAAI,MAAM,EAAI,CAAC,EAErC,SAASS,GAAU,CACjB,IAAMG,EAASZ,EAAI,UACjB,CACE,QAAS,KACT,cAAe,GACf,aAAc,GACd,UAAW,IAEbQ,CAAQ,EAEVR,EAAI,eAAeY,CAAM,CAC3B,CAEA,SAASD,EAAeE,EAAiBH,EAAe,CACtD,MAAO,IAAK,CACV,IAAME,EAASZ,EAAI,UAAU,CAAC,QAAAa,CAAO,EAAGL,CAAQ,EAChDP,EAAI,OAAOM,EAAOC,CAAQ,EAC1BR,EAAI,oBAAoBY,EAAQL,CAAK,EACjCG,EAAUT,EAAI,OAAOS,KAAUf,GAAA,KAAIkB,GAAS,EAC3Cb,EAAI,UAAU,CAAC,SAAUa,CAAO,CAAC,CACxC,CACF,CACF,GAGF,SAASR,GAAUF,EAAkBU,EAAe,CAClD,IAAMC,EAASX,EAAG,OAAOU,GACzB,OAAOC,IAAW,QAAa,IAAClB,GAAA,mBAAkBO,EAAIW,CAAM,CAC9D,CAEAC,GAAA,QAAehB,kFC7Ef,IAAAiB,GAAA,KAEMC,GAA6B,CACjC,QAAS,CAAC,OAAQ,MAAM,EACxB,WAAY,CAAC,SAAU,SAAS,EAChC,KAAK,CAAC,QAAAC,EAAS,aAAAC,EAAc,GAAAC,CAAE,EAAa,CACtCD,EAAa,KAAO,WAAWH,GAAA,iBAAgBI,EAAI,IAAIF,4BAAkC,CAC/F,GAGFG,GAAA,QAAeJ,kFCXf,IAAAK,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAEA,SAAwBC,GAAcC,EAAY,GAAK,CACrD,IAAMC,EAAa,CAEjBR,GAAA,QACAC,GAAA,QACAC,GAAA,QACAC,GAAA,QACAC,GAAA,QACAC,GAAA,QAEAT,GAAA,QACAC,GAAA,QACAF,GAAA,QACAG,GAAA,QACAC,GAAA,SAGF,OAAIQ,EAAWC,EAAW,KAAKjB,GAAA,QAAaE,GAAA,OAAS,EAChDe,EAAW,KAAKlB,GAAA,QAAiBE,GAAA,OAAK,EAC3CgB,EAAW,KAAKd,GAAA,OAAQ,EACjBc,CACT,CArBAC,GAAA,QAAAH,kFCTA,IAAAI,GAAA,IAaMC,GAAgC,CACpC,QAAS,CAAC,CAAC,WAAAC,CAAU,OAAMF,GAAA,0BAAyBE,KACpD,OAAQ,CAAC,CAAC,WAAAA,CAAU,OAAMF,GAAA,cAAaE,MAGnCC,GAA6B,CACjC,QAAS,SACT,KAAM,CAAC,SAAU,QAAQ,EACzB,WAAY,SACZ,MAAO,GACP,MAAAF,GACA,KAAKG,EAAiBC,EAAiB,CACrC,GAAM,CAAC,IAAAC,EAAK,KAAAC,EAAM,MAAAC,EAAO,OAAAC,EAAQ,WAAAP,EAAY,GAAAQ,CAAE,EAAIN,EAC7C,CAAC,KAAAO,EAAM,cAAAC,EAAe,UAAAC,EAAW,KAAAC,CAAI,EAAIJ,EAC/C,GAAI,CAACC,EAAK,gBAAiB,OAEvBH,EAAOO,EAAmB,EACzBC,EAAc,EAEnB,SAASD,GAAmB,CAC1B,IAAME,EAAOX,EAAI,WAAW,UAAW,CACrC,IAAKQ,EAAK,QACV,KAAMH,EAAK,KAAK,QACjB,EACKO,EAAOZ,EAAI,MAAM,UAAQN,GAAA,KAAIiB,KAAQf,IAAa,EAClDiB,EAAQb,EAAI,IAAI,OAAO,EACvBc,EAASd,EAAI,IAAI,QAAQ,EAE/BA,EAAI,MACFN,GAAA,YAAWkB,sBAAyBA,uBACpC,IAAMZ,EAAI,OAAOa,KAAOnB,GAAA,KAAIkB,oBAAuB,EAAE,OAAOE,KAAQpB,GAAA,KAAIkB,YAAe,EACvF,IAAMZ,EAAI,OAAOa,KAAOnB,GAAA,YAAW,EAAE,OAAOoB,EAAQF,CAAI,CAAC,EAE3Dd,EAAI,aAAUJ,GAAA,IAAGqB,EAAU,EAAIC,EAAU,CAAE,CAAC,EAE5C,SAASD,GAAU,CACjB,OAAIV,EAAK,eAAiB,GAAcX,GAAA,OACjCA,GAAA,KAAIE,SAAkBkB,GAC/B,CAEA,SAASE,GAAU,CACjB,IAAMC,GAAaV,EAAU,UACzBb,GAAA,MAAKkB,mBAAsBE,KAAUb,QAAWa,KAAUb,SAC1DP,GAAA,KAAIoB,KAAUb,KACZiB,KAAYxB,GAAA,aAAYoB,qBAA0BG,QAAgBH,UAAeb,MACvF,SAAOP,GAAA,KAAIoB,QAAaA,iBAAsBD,SAAad,SAAgBmB,GAC7E,CACF,CAEA,SAASR,GAAc,CACrB,IAAMS,EAAqCX,EAAK,QAAQL,GACxD,GAAI,CAACgB,EAAW,CACdC,EAAa,EACb,OAEF,GAAID,IAAc,GAAM,OACxB,GAAM,CAACE,EAASP,EAAQQ,CAAM,EAAIC,EAAUJ,CAAS,EACjDE,IAAYtB,GAAUD,EAAI,KAAK0B,GAAc,CAAE,EAEnD,SAASJ,GAAa,CACpB,GAAIf,EAAK,eAAiB,GAAO,CAC/BG,EAAK,OAAO,KAAKiB,EAAU,CAAE,EAC7B,OAEF,MAAM,IAAI,MAAMA,EAAU,CAAE,EAE5B,SAASA,GAAU,CACjB,MAAO,mBAAmBtB,iCAAgDG,IAC5E,CACF,CAEA,SAASiB,EAAUG,EAAmB,CACpC,IAAMC,EACJD,aAAkB,UACdhC,GAAA,YAAWgC,CAAM,EACjBrB,EAAK,KAAK,WACVX,GAAA,KAAIW,EAAK,KAAK,aAAUX,GAAA,aAAYS,CAAM,IAC1C,OACAyB,EAAM5B,EAAI,WAAW,UAAW,CAAC,IAAKG,EAAQ,IAAKuB,EAAQ,KAAAC,CAAI,CAAC,EACtE,OAAI,OAAOD,GAAU,UAAY,EAAEA,aAAkB,QAC5C,CAACA,EAAO,MAAQ,SAAUA,EAAO,YAAUhC,GAAA,KAAIkC,YAAc,EAG/D,CAAC,SAAUF,EAAQE,CAAG,CAC/B,CAEA,SAASJ,IAAc,CACrB,GAAI,OAAOL,GAAa,UAAY,EAAEA,aAAqB,SAAWA,EAAU,MAAO,CACrF,GAAI,CAACZ,EAAU,OAAQ,MAAM,IAAI,MAAM,6BAA6B,EACpE,SAAOb,GAAA,WAAU4B,KAAUrB,KAE7B,OAAO,OAAOa,GAAU,cAAapB,GAAA,KAAI4B,KAAUrB,QAAUP,GAAA,KAAI4B,UAAerB,IAClF,CACF,CACF,GAGF4B,GAAA,QAAehC,kFCtHf,IAAAiC,GAAA,KAEMC,GAAqB,CAACD,GAAA,OAAa,EAEzCE,GAAA,QAAeD,oICHFE,GAAA,mBAAiC,CAC5C,QACA,cACA,UACA,aACA,WACA,YACA,YAGWA,GAAA,kBAAgC,CAC3C,mBACA,kBACA,gGCdF,IAAAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAEMC,GAAmC,CACvCL,GAAA,QACAC,GAAA,WACAC,GAAA,SAAuB,EACvBC,GAAA,QACAC,GAAA,mBACAA,GAAA,mBAGFE,GAAA,QAAeD,uGCdf,IAAYE,IAAZ,SAAYA,EAAU,CACpBA,EAAA,IAAA,MACAA,EAAA,QAAA,SACF,GAHYA,GAAAC,GAAA,aAAAA,GAAA,WAAU,CAAA,EAAA,iFCAtB,IAAAC,GAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAIMC,GAAgC,CACpC,QAAS,CAAC,CAAC,OAAQ,CAAC,WAAAC,EAAY,QAAAC,CAAO,CAAC,IACtCD,IAAeJ,GAAA,WAAW,IACtB,QAAQK,oBACR,iBAAiBA,sBACvB,OAAQ,CAAC,CAAC,OAAQ,CAAC,WAAAD,EAAY,IAAAE,EAAK,QAAAD,CAAO,CAAC,OAC1CN,GAAA,aAAYK,WAAoBC,gBAAsBC,MAGpDC,GAA6B,CACjC,QAAS,gBACT,KAAM,SACN,WAAY,SACZ,MAAAJ,GACA,KAAKK,EAAe,CAClB,GAAM,CAAC,IAAAC,EAAK,KAAAC,EAAM,OAAAC,EAAQ,aAAAC,EAAc,GAAAC,CAAE,EAAIL,EACxC,CAAC,MAAAM,CAAK,EAAIF,EAChB,GAAI,CAACC,EAAG,KAAK,cACX,MAAM,IAAI,MAAM,8CAA8C,EAEhE,IAAMR,EAAUM,EAAO,aACvB,GAAI,OAAON,GAAW,SAAU,MAAM,IAAI,MAAM,sCAAsC,EACtF,GAAIM,EAAO,QAAS,MAAM,IAAI,MAAM,yCAAyC,EAC7E,GAAI,CAACG,EAAO,MAAM,IAAI,MAAM,uCAAuC,EACnE,IAAMC,EAAQN,EAAI,IAAI,QAAS,EAAK,EAC9BH,EAAMG,EAAI,MAAM,SAAOV,GAAA,KAAIW,OAAOX,GAAA,aAAYM,CAAO,GAAG,EAC9DI,EAAI,MACFV,GAAA,YAAWO,gBACX,IAAMU,EAAe,EACrB,IAAMR,EAAI,MAAM,GAAO,CAAC,WAAYR,GAAA,WAAW,IAAK,IAAAM,EAAK,QAAAD,CAAO,CAAC,CAAC,EAEpEG,EAAI,GAAGO,CAAK,EAEZ,SAASC,GAAe,CACtB,IAAMC,EAAUC,EAAU,EAC1BT,EAAI,GAAG,EAAK,EACZ,QAAWU,KAAYF,EACrBR,EAAI,UAAOV,GAAA,KAAIO,SAAWa,GAAU,EACpCV,EAAI,OAAOM,EAAOK,EAAeH,EAAQE,EAAS,CAAC,EAErDV,EAAI,KAAI,EACRD,EAAI,MAAM,GAAO,CAAC,WAAYR,GAAA,WAAW,QAAS,IAAAM,EAAK,QAAAD,CAAO,CAAC,EAC/DI,EAAI,MAAK,CACX,CAEA,SAASW,EAAeC,EAAmB,CACzC,IAAMC,EAASb,EAAI,KAAK,OAAO,EACzBc,EAASf,EAAI,UAAU,CAAC,QAAS,QAAS,WAAAa,CAAU,EAAGC,CAAM,EACnE,OAAAd,EAAI,eAAee,EAAQxB,GAAA,IAAI,EACxBuB,CACT,CAEA,SAASJ,GAAU,OACjB,IAAMM,EAAyC,CAAA,EACzCC,EAAcC,EAAYd,CAAY,EACxCe,EAAc,GAClB,QAASC,GAAI,EAAGA,GAAId,EAAM,OAAQc,KAAK,CACrC,IAAIC,EAAMf,EAAMc,KACZC,GAAG,KAAA,OAAHA,EAAK,OAAQ,IAAC3B,GAAA,sBAAqB2B,EAAKhB,EAAG,KAAK,KAAK,IACvDgB,EAAM5B,GAAA,WAAW,KAAKY,EAAG,KAAMA,EAAG,UAAU,KAAMA,EAAG,OAAQgB,GAAG,KAAA,OAAHA,EAAK,IAAI,EAClEA,aAAe5B,GAAA,YAAW4B,EAAMA,EAAI,SAE1C,IAAMC,GAAUC,EAAAF,GAAG,KAAA,OAAHA,EAAK,cAAU,MAAAE,IAAA,OAAA,OAAAA,EAAG1B,GAClC,GAAI,OAAOyB,GAAW,SACpB,MAAM,IAAI,MACR,iFAAiFzB,IAAU,EAG/FsB,EAAcA,IAAgBF,GAAeC,EAAYG,CAAG,GAC5DG,EAAYF,EAASF,EAAC,EAExB,GAAI,CAACD,EAAa,MAAM,IAAI,MAAM,mBAAmBtB,qBAA2B,EAChF,OAAOmB,EAEP,SAASE,EAAY,CAAC,SAAAO,EAAQ,EAAkB,CAC9C,OAAO,MAAM,QAAQA,EAAQ,GAAKA,GAAS,SAAS5B,CAAO,CAC7D,CAEA,SAAS2B,EAAYH,GAAsBD,EAAS,CAClD,GAAIC,GAAI,MACNK,EAAWL,GAAI,MAAOD,CAAC,UACdC,GAAI,KACb,QAAWV,KAAYU,GAAI,KACzBK,EAAWf,EAAUS,CAAC,MAGxB,OAAM,IAAI,MAAM,8BAA8BvB,gCAAsC,CAExF,CAEA,SAAS6B,EAAWf,GAAmBS,EAAS,CAC9C,GAAI,OAAOT,IAAY,UAAYA,MAAYK,EAC7C,MAAM,IAAI,MAAM,mBAAmBnB,kCAAwC,EAE7EmB,EAAaL,IAAYS,CAC3B,CACF,CACF,GAGFO,GAAA,QAAe5B,snFC5Gf,IAAA6B,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAEMC,GAAoB,CAAC,aAAa,EAElCC,GAAiB,yCAEjBC,GAAN,cAAkBN,GAAA,OAAO,CACvB,kBAAgB,CACd,MAAM,iBAAgB,EACtBC,GAAA,QAAmB,QAASM,GAAM,KAAK,cAAcA,CAAC,CAAC,EACnD,KAAK,KAAK,eAAe,KAAK,WAAWL,GAAA,OAAa,CAC5D,CAEA,uBAAqB,CAEnB,GADA,MAAM,sBAAqB,EACvB,CAAC,KAAK,KAAK,KAAM,OACrB,IAAMM,EAAa,KAAK,KAAK,MACzB,KAAK,gBAAgBL,GAAkBC,EAAiB,EACxDD,GACJ,KAAK,cAAcK,EAAYH,GAAgB,EAAK,EACpD,KAAK,KAAK,iCAAmCA,EAC/C,CAEA,aAAW,CACT,OAAQ,KAAK,KAAK,YAChB,MAAM,YAAW,IAAO,KAAK,UAAUA,EAAc,EAAIA,GAAiB,OAC9E,GAGFI,GAAO,QAAUC,GAAUJ,GAC3B,OAAO,eAAeI,GAAS,aAAc,CAAC,MAAO,EAAI,CAAC,EAE1DA,GAAA,QAAeJ,GA0Bf,IAAAK,GAAA,KAAQ,OAAA,eAAAD,GAAA,aAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAC,GAAA,UAAU,CAAA,CAAA,EAIlB,IAAAC,GAAA,IAAQ,OAAA,eAAAF,GAAA,IAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAE,GAAA,CAAC,CAAA,CAAA,EAAE,OAAA,eAAAF,GAAA,MAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAE,GAAA,GAAG,CAAA,CAAA,EAAE,OAAA,eAAAF,GAAA,YAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAE,GAAA,SAAS,CAAA,CAAA,EAAE,OAAA,eAAAF,GAAA,MAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAE,GAAA,GAAG,CAAA,CAAA,EAAE,OAAA,eAAAF,GAAA,OAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAE,GAAA,IAAI,CAAA,CAAA,EAAQ,OAAA,eAAAF,GAAA,UAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAE,GAAA,OAAO,CAAA,CAAA,EACnD,IAAAC,GAAA,KAAQ,OAAA,eAAAH,GAAA,kBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAG,GAAA,OAAO,CAAA,CAAA,EACf,IAAAC,GAAA,KAAQ,OAAA,eAAAJ,GAAA,kBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAI,GAAA,OAAO,CAAA,CAAA,ICjER,IAAMC,GAAM,CAACC,EAAWC,KAAeD,EAAIC,GAAK,EAC1CC,GAAc,CAACC,EAAaC,IAAgB,KAAK,OAAO,GAAKA,EAAMD,GAAOA,EAEhF,IAAME,GAAQ,CAACC,EAAeC,EAAaC,IAAgB,KAAK,IAAID,EAAK,KAAK,IAAID,EAAOE,CAAG,CAAC,EAE7F,IAAMC,GAAc,SAAS,WAAa,aAAe,SAAS,WAAa,aAAe,SAAS,KAAK,SAAW,GAAK,SAAS,WAAa,QAElJ,SAASC,EAAiCC,EAAmBC,EAAsB,CACtF,IAAMC,GAAWD,GAAU,UAAU,cAAiBD,CAAS,EAC/D,GAAI,CAACE,EACD,MAAM,MAAM,8BAA8BF,uBAA+B,EAE7E,OAAOE,CACX,CAqBO,SAASC,GAAaC,EAAyBC,EAA6BC,EAA4D,CAC3I,IAAMC,EAAO,CAAC,GAAGH,EAAW,iBAA8B,4BAA4B,CAAC,EACvF,QAAWI,KAAOD,EACdC,EAAI,iBAAiB,QAAS,IAAM,CAChCD,EAAK,QAAQE,GAAKA,EAAE,UAAU,OAAO,WAAYA,IAAMD,CAAG,CAAC,EAC3D,IAAME,EAAaF,EAAI,aAAa,iBAAiB,EAC/CG,EAASZ,EAAU,sBAAsBW,MAAgBL,CAAc,EAC7EC,EAASE,EAAKG,CAAM,CACxB,CAAC,CAET,CAEO,SAASC,GAAYJ,EAAkBK,EAAsB,CAjDpE,IAAAC,EAkDI,IAAMJ,EAAaF,EAAI,aAAa,iBAAiB,EACrD,CAAC,KAAGM,EAAAD,EAAQ,gBAAR,YAAAC,EAAuB,WAAY,CAAC,CAAC,EAAE,OAAOL,GAAKA,EAAE,aAAa,kBAAkB,CAAC,EAAE,QAAQA,GAAK,CACpGA,EAAE,UAAU,OAAO,SAAUA,EAAE,aAAa,kBAAkB,IAAMC,CAAU,CAClF,CAAC,CACL,CAGO,SAASK,GAAqBb,EAAsBc,EAAgC,CACvF,IAAMC,EAAO,8BACb,GAAIf,EAAQ,UAAU,SAAS,UAAU,EACrC,OAEJA,EAAQ,aAAae,EAAM,EAAE,EAC7B,IAAMC,EAAW,IAAM,CACnBhB,EAAQ,gBAAgBe,CAAI,EAC5Bf,EAAQ,oBAAoBc,EAASE,CAAQ,CACjD,EACAhB,EAAQ,iBAAiBc,EAASE,CAAQ,CAC9C,qLCpEA,IAAAC,GAAwB,WAIjBC,GAAQ,CAAE,KAAAC,GAAM,KAAAC,EAAK,EAE5B,eAAsBD,GAAKE,EAAgBC,EAAgB,CACvD,GAAI,CACA,OAAQD,EAAM,CACV,IAAK,OAAQ,OAAO,MAAME,GAAS,UAAWD,CAAM,CACxD,CACJ,OAASE,EAAP,CACE,QAAQ,MAAMA,CAAC,CACnB,CACJ,CAEA,eAAsBJ,GAAQC,EAAgB,CAC1C,GAAI,CACA,OAAQA,EAAM,CACV,IAAK,OACD,IAAMI,EAAO,MAAMC,GAAS,SAAS,EACrC,OAAID,GAGG,KACX,QAAS,OAAO,IACpB,CACJ,OAAS,EAAP,CACE,QAAQ,MAAM,CAAC,CACnB,CACJ,CAEA,eAAeF,GAASI,EAAaL,EAAgB,CACjD,IAAMM,EAAM,OAAO,KAAK,KAAK,UAAUN,CAAM,CAAC,EACxCG,EAAO,IAAI,KAAK,CAACG,CAAG,EAAG,CAAE,KAAM,YAAa,CAAC,EACnD,OAAO,MAAM,GAAAC,QAAY,QAAcF,EAAKF,CAAI,CACpD,CAEA,eAAeC,GAASC,EAAa,CACjC,IAAMF,EAAO,MAAM,GAAAI,QAAY,QAAcF,CAAG,EAChD,GAAI,CAACF,EACD,OAAOA,EAEX,IAAMG,EAAM,MAAMH,EAAK,KAAK,EAC5B,OAAO,KAAK,MAAM,OAAO,KAAKG,CAAG,CAAC,CACtC,CCtBA,IAAIE,GAESC,GAAN,KAAyB,CAI5B,aAAc,CAHdC,EAAA,eACAA,EAAA,KAAQ,qBAAqB,IAAIC,IACjCD,EAAA,KAAQ,oBAAoB,IAAIE,GAChB,CAEhB,gBAAiB,CACb,OAAOJ,EACX,CAEA,MAAM,qBAAqBK,EAAiB,CACxC,OAAQA,EAAM,CACV,IAAK,MAAO,OAAO,MAAM,KAAK,mBAAmB,qBAAqB,EACtE,IAAK,OAAQ,OAAO,MAAM,KAAK,kBAAkB,qBAAqB,CAC1E,CACJ,CACJ,EAEMF,GAAN,KAA8C,CAC1C,aAAc,CAAE,CAEhB,MAAM,YAAa,CACf,OAAOG,GAAW,KAAK,IAAiBC,GAAMC,GAAAC,GAAA,GAAKF,GAAL,CAAQ,GAAI,OAAO,WAAW,EAAG,KAAM,KAAM,EAAE,CACjG,CAGA,MAAM,sBAAuB,CACzB,IAAMG,EAAU,MAAM,KAAK,WAAW,EAChCC,EAAW,CAAC,EAClB,QAAWC,KAASF,EAAS,CACzB,IAAMG,EAAU,SAAS,cAAc,IAAI,EAC3CA,EAAQ,UAAU,IAAI,aAAa,EACnC,IAAMC,EAASF,EAAM,OAAO,WAAW,QAAQ,EAAI,GAAK,WACxDC,EAAQ,YAAcD,EAAM,KAAOE,EACnCD,EAAQ,iBAAiB,QAAS,IAAM,CACpCb,GAAcY,CAClB,CAAC,EACDD,EAAS,KAAKE,CAAO,CACzB,CACA,OAAOF,CACX,CACJ,EAEMP,GAAN,KAAgD,CAC5C,aAAc,CAAE,CAEhB,MAAM,YAAa,CACf,IAAMW,EAAO,MAAMC,GAAY,KAAK,MAAM,EAC1C,OAAKD,EAGO,OAAO,OAAOA,CAAI,EAAE,KAAK,CAACE,EAAGC,IAAMA,EAAE,KAAK,YAAcD,EAAE,KAAK,WAAW,EAC3E,IAAiBV,GAAMC,GAAAC,GAAA,GAAKF,EAAE,MAAP,CAAa,KAAM,MAAO,EAAE,EAHnD,CAAC,CAIhB,CAEA,MAAM,sBAAuB,CACzB,IAAMG,EAAU,MAAM,KAAK,WAAW,EAChCC,EAAW,CAAC,EAClB,QAAWC,KAASF,EAAQ,OAAOH,GAAKA,EAAE,MAAM,EAAG,CAC/C,IAAMM,EAAU,SAAS,cAAc,IAAI,EAC3CA,EAAQ,UAAU,IAAI,aAAa,EACnC,IAAMM,EAAW,KAAK,iBAAiBP,EAAM,WAAW,EACxDC,EAAQ,mBAAmB,YAAa,QAAQD,EAAM,uCAAuCO,SAAgB,EAC7GN,EAAQ,iBAAiB,QAAS,IAAM,CACpCb,GAAcY,EACdQ,EAAU,+CAA+C,EAAE,aAAa,UAAWR,EAAM,EAAE,CAC/F,CAAC,EACDD,EAAS,KAAKE,CAAO,CACzB,CACA,OAAOF,CACX,CAEQ,iBAAiBU,EAAY,EAAG,CACpC,IAAMC,EAAK,KAAK,IAAI,EAAID,EAElBE,EAAS,KAAK,MAAMD,EAAK,IAAO,EAAI,GACpCE,GAAQ,KAAK,MAAMF,EAAK,GAAK,EAAI,IAAI,QAAQ,EACnD,MAAO,gBAAgBC,EAAQ,EAAIA,EAAQ,KAAO,KAAKC,MAE3D,CAEJ,ECpGA,IAAqBC,GAArB,KAAoC,CAEhC,aAAc,CADdC,EAAA,KAAiB,YAAY,IAAI,IACjB,CAEhB,OAAOC,EAAuBC,EAAwB,CAClD,IAAMC,EAAW,CAAE,SAAAF,EAAU,KAAAC,CAAK,EAClC,KAAK,UAAU,IAAID,EAAUE,CAAQ,CACzC,CACA,eAAeF,EAAuB,CAClC,KAAK,UAAU,OAAOA,CAAQ,CAClC,CACA,oBAAqB,CACjB,KAAK,UAAU,MAAM,CACzB,CAEA,OAAOG,EAAS,CArBpB,IAAAC,EAsBQ,KAAK,UAAU,QAAQC,GAAK,CACxBA,EAAE,SAASF,CAAI,CACnB,CAAC,EACD,OAAW,CAACG,EAAKC,CAAK,IAAK,KAAK,UAAU,QAAQ,GAC3CH,EAAAG,EAAM,OAAN,MAAAH,EAAY,MACX,KAAK,UAAU,OAAOE,CAAG,CAGrC,CACJ,EC1BA,IAAqBE,GAArB,KAA0B,CAStB,YAAYC,EAAsB,CARlCC,EAAA,KAAiB,gBACjBA,EAAA,KAAQ,SACRA,EAAA,KAAiB,YAAY,IAAI,IAAqC,CAClE,CAAC,SAAU,IAAIC,EAAsB,EACrC,CAAC,MAAO,IAAIA,EAAsB,EAClC,CAAC,MAAO,IAAIA,EAAsB,EAClC,CAAC,WAAY,IAAIA,EAAsB,CAC3C,CAAC,GAEG,KAAK,aAAeF,EACpB,KAAK,MAAQA,CACjB,CAEA,IAAIG,EAAW,CAnBnB,IAAAC,EAAAC,EAoBQ,KAAK,MAAQF,GACbC,EAAA,KAAK,UAAU,IAAI,KAAK,IAAxB,MAAAA,EAA2B,OAAO,KAAK,QACvCC,EAAA,KAAK,UAAU,IAAI,QAAQ,IAA3B,MAAAA,EAA8B,OAAO,KAAK,MAC9C,CACA,KAAM,CACF,OAAO,KAAK,KAChB,CACA,IAAIF,EAAW,CA3BnB,IAAAC,EAAAC,EA4BQ,KAAK,OAASF,GACdC,EAAA,KAAK,UAAU,IAAI,KAAK,IAAxB,MAAAA,EAA2B,OAAO,KAAK,QACvCC,EAAA,KAAK,UAAU,IAAI,QAAQ,IAA3B,MAAAA,EAA8B,OAAO,KAAK,MAC9C,CACA,SAASF,EAAW,CAhCxB,IAAAC,EAAAC,EAiCQ,KAAK,OAASF,GACdC,EAAA,KAAK,UAAU,IAAI,UAAU,IAA7B,MAAAA,EAAgC,OAAO,KAAK,QAC5CC,EAAA,KAAK,UAAU,IAAI,QAAQ,IAA3B,MAAAA,EAA8B,OAAO,KAAK,MAC9C,CAEA,OAAQ,CACJ,KAAK,MAAQ,KAAK,aAClB,KAAK,UAAU,QAAQC,GAAKA,EAAE,mBAAmB,CAAC,CACtD,CAEA,YAAYC,EAAiBC,EAAoB,CA3CrD,IAAAJ,GA4CQA,EAAA,KAAK,UAAU,IAAIG,CAAI,IAAvB,MAAAH,EAA0B,OAAOI,EACrC,CAEA,eAAeD,EAAiBC,EAAoB,CA/CxD,IAAAJ,GAgDQA,EAAA,KAAK,UAAU,IAAIG,CAAI,IAAvB,MAAAH,EAA0B,eAAeI,EAC7C,CACJ,EC6BO,IAAMC,GAAoB,CAC7B,KAAM,GAAK,EACX,OAAQ,GAAK,EACb,SAAU,GAAK,EACf,UAAW,GAAK,EAChB,MAAO,GAAK,EACZ,MAAO,GAAK,CAChB,EAEaC,GAA8B,CACvC,CACI,KAAM,+BACN,KAAM,CAAC,UAAU,EACjB,MAAO,CAAC,CAAE,KAAM,SAAU,UAAW,MAAO,MAAOD,GAAkB,QAAS,CAAC,CACnF,EACA,CACI,KAAM,0BACN,KAAM,CAAC,UAAU,EACjB,MAAO,CAAC,CAAE,KAAM,SAAU,UAAW,OAAQ,MAAOA,GAAkB,QAAS,CAAC,CACpF,EACA,CACI,KAAM,iBACN,KAAM,CAAC,EACP,MAAO,CAAC,CAAE,KAAM,SAAU,UAAW,MAAO,CAAC,CACjD,EACA,CACI,KAAM,8BACN,KAAM,CAAC,UAAU,EACjB,MAAO,CAAC,CAAE,KAAM,YAAa,UAAW,OAAQ,MAAOA,GAAkB,QAAS,EAClF,CAAE,KAAM,YAAa,UAAW,OAAQ,MAAOA,GAAkB,QAAS,CAAC,CAC/E,EACA,CACI,KAAM,iBACN,KAAM,CAAC,EACP,MAAO,CAAC,CAAE,KAAM,YAAa,UAAW,MAAO,CAAC,CACpD,EACA,CACI,KAAM,4BACN,KAAM,CAAC,OAAO,EACd,MAAO,CAAC,CAAE,KAAM,cAAe,UAAW,KAAM,CAAC,CACrD,EACA,CACI,KAAM,uBACN,KAAM,CAAC,OAAO,EACd,MAAO,CAAC,CAAE,KAAM,cAAe,UAAW,MAAO,CAAC,CACtD,EACA,CACI,KAAM,4BACN,KAAM,CAAC,MAAM,EACb,MAAO,CAAC,CAAE,KAAM,UAAW,UAAW,KAAM,CAAC,CACjD,EACA,CACI,KAAM,kBACN,KAAM,CAAC,MAAM,EACb,MAAO,CAAC,CAAE,KAAM,UAAW,UAAW,MAAO,CAAC,CAClD,EACA,CACI,KAAM,uBACN,KAAM,CAAC,MAAM,EACb,MAAO,CAAC,CAAE,KAAM,YAAa,UAAW,MAAO,CAAC,CACpD,EACA,CACI,KAAM,0BACN,KAAM,CAAC,UAAU,EACjB,MAAO,CAAC,CAAE,KAAM,aAAc,UAAW,MAAO,CAAC,CACrD,EACA,CACI,KAAM,8BACN,KAAM,CAAC,UAAU,EACjB,MAAO,CAAC,CAAE,KAAM,YAAa,UAAW,MAAO,CAAC,CACpD,EACA,CACI,KAAM,qBACN,KAAM,CAAC,MAAM,EACb,MAAO,CAAC,CAAE,KAAM,gBAAiB,UAAW,MAAO,CAAC,CACxD,EACA,CACI,KAAM,+BACN,KAAM,CAAC,MAAM,EACb,MAAO,CAAC,CAAE,KAAM,gBAAiB,UAAW,KAAM,CAAC,CACvD,EACA,CACI,KAAM,8BACN,KAAM,CAAC,MAAM,EACb,MAAO,CAAC,CAAE,KAAM,WAAY,UAAW,MAAO,MAAOA,GAAkB,KAAM,CAAC,CAClF,CACJ,EAEaE,GAAN,KAAe,CAKlB,YAAYC,EAAW,CAJvBC,EAAA,KAAS,QACTA,EAAA,KAAS,YACTA,EAAA,KAAS,OAAsB,CAAC,GAChCA,EAAA,KAAS,QAAwB,CAAC,GAE9B,KAAK,KAAOD,EACZ,IAAME,EAAQ,CAAC,GAAGF,EAAK,SAAS,WAAC,qDAA4C,GAAC,EAAC,EACzEG,EAAOH,EAAK,QAAQ,WAAY,GAAG,EACzC,GAAG,CAACF,GAAa,KAAKM,GAAKA,EAAE,OAASD,CAAI,EACtC,MAAM,MAAM,sDAAsD,EAEtE,KAAK,SAAWL,GAAa,KAAKM,GAAKA,EAAE,OAASD,CAAI,EACtD,KAAK,KAAO,KAAK,SAAS,KAE1B,QAAWE,KAAgB,KAAK,SAAS,MAAO,CAC5C,IAAMC,EAASJ,EAAM,KAAK,SAAS,MAAM,QAAQG,CAAY,GAAG,OAChE,GAAI,CAACC,EACD,MAAM,MAAM,EAEhB,GAAM,CAAE,GAAAC,EAAI,GAAAC,CAAG,EAAIF,EACbG,EAAM,WAAWF,CAAE,EACnBG,EAAM,WAAWF,CAAE,GAAKC,EACxBE,EAAQF,EACd,KAAK,MAAM,KAAK,IAAIG,GAAa,CAAE,KAAMP,EAAa,KAAM,UAAWA,EAAa,UAAW,MAAAM,EAAO,IAAAF,EAAK,IAAAC,EAAK,MAAOL,EAAa,OAAS,CAAE,CAAC,CAAC,CACrJ,CACJ,CAEA,IAAI,cAAe,CAAE,OAAO,KAAK,SAAS,IAAM,CAEhD,IAAI,MAAO,CACP,IAAIQ,EAAI,EACR,OAAO,KAAK,aAAa,QAAQ,MAAQT,GAAM,CAvMvD,IAAAU,EA0MY,QADcA,EADD,KAAK,MAAMD,KACL,QAAL,YAAAC,EAAY,QAAQV,EAAE,OAAS,KAAM,GAEvD,CAAC,CACL,CAEA,OAAO,QAAQW,EAAaC,EAAa,CACrC,OAAOD,EAAE,QAAQC,CAAC,CACtB,CACA,OAAO,KAAKD,EAAaC,EAAa,CAClC,OAAOD,EAAE,KAAKC,CAAC,CACnB,CACA,KAAKC,EAAgB,CACjB,OAAOnB,GAAa,UAAUM,GAAKA,EAAE,OAAS,KAAK,YAAY,EAAIN,GAAa,UAAUM,GAAKA,EAAE,OAASa,EAAM,YAAY,CAChI,CAEA,QAAQA,EAAiB,CACrB,OAAO,KAAK,eAAiBA,EAAM,YACvC,CAEA,MAAO,CACH,OAAO,IAAIlB,GAAS,KAAK,IAAI,CACjC,CAEA,cAAcmB,EAAiB,CAC3B,GAAG,KAAK,MAAM,SAAWA,EAAO,OAGhC,YAAK,MAAM,QAAQ,CAACd,EAAES,IAAMT,EAAE,MAAQc,EAAOL,EAAE,EACxC,EACX,CACJ,EAEaD,GAAN,KAAmB,CAStB,YAAYO,EAA0B,CAPtClB,EAAA,KAAS,QACTA,EAAA,KAAS,aACTA,EAAA,cACAA,EAAA,KAAS,SACTA,EAAA,KAAS,OACTA,EAAA,KAAS,OACTA,EAAA,eAEI,KAAK,KAAOkB,EAAK,KACjB,KAAK,UAAYA,EAAK,UACtB,KAAK,MAAQA,EAAK,MAClB,KAAK,MAAQA,EAAK,OAAS,EAC3B,KAAK,IAAMA,EAAK,KAAO,KAAK,MAC5B,KAAK,IAAMA,EAAK,KAAO,KAAK,OAAS,KAAK,IAC1C,KAAK,OAASA,EAAK,MACvB,CAEA,gBAAiB,CACb,KAAK,MAAQ,KAAK,OAAO,GAAK,KAAK,IAAM,KAAK,KAAO,KAAK,GAC9D,CACJ,EAEaC,GAAN,KAAY,CAGf,aAAc,CAFdnB,EAAA,KAAQ,YACRA,EAAA,KAAgB,YAEZ,KAAK,SAAW,CAAC,EACjB,KAAK,SAAW,IAAIoB,EACxB,CAEA,IAAI,SAAU,CAAE,OAAO,KAAK,QAAU,CAEtC,IAAIC,EAA0BC,EAAgB,CAC1CD,EAAS,QAAQlB,GAAKA,EAAE,OAASmB,CAAM,EACvC,KAAK,QAAQ,KAAK,GAAGD,CAAQ,EAC7B,KAAK,SAAS,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAC1C,CAEA,eAAeC,EAAgB,CAC3B,KAAK,SAAW,KAAK,QAAQ,OAAOnB,GAAKA,EAAE,SAAWmB,CAAM,EAC5D,KAAK,SAAS,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAC1C,CAEA,OAAQ,CACJ,KAAK,SAAW,CAAC,EACjB,KAAK,SAAS,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAC1C,CAGJ,ECnRA,IAAMC,GAAkD,CACpD,SAAU,GAAK,EACf,UAAW,GAAK,EAChB,MAAO,GAAK,CAChB,EASMC,IAAwB,IAAM,CAEhC,IAAMC,EAAsB,CAAC,EACvBC,EAAS,OAAO,OAAOH,EAAe,EAAE,OAAO,CAACI,EAAGC,IAAMD,EAAIC,CAAC,EACpE,QAASC,EAAI,EAAGA,GAAKH,EAAQG,IAAK,CAC9B,IAAMC,EAAuB,CAAC,QAAQ,EACtC,OAAO,QAAQP,EAAe,EAAE,QAAQ,CAAC,CAACQ,EAAKC,CAAK,IAAM,CACtD,GAAIA,EAAQH,EAAG,CACX,IAAMI,EAAI,GAAGF,UACbD,EAAS,KAAKG,CAAC,CACnB,CACJ,CAAC,EACDR,EAAM,KAAKK,CAAQ,CACvB,CACA,OAAOL,CACX,GAAG,EAEI,SAASS,GAAWC,EAA6B,CAEpD,IAAMC,EAAwB,CAC1B,YAAAD,EACA,MAAOE,GAAkB,OACzB,WAAYC,EAChB,EAGMC,EAAYC,GAAa,YAAaJ,CAAM,EAAI,IAChDK,EAASH,GAAY,EAAG,CAAC,EACzBI,EAAMH,GAAaE,EACzB,GAAI,CAACC,EACD,MAAO,GAGXN,EAAO,MAAQC,GAAkB,OACjC,IAAMM,EAAaC,GAAeR,CAAM,EAGlCS,EAAa,KAAK,IAAIL,GAAa,aAAcJ,CAAM,EAAG,GAAG,EAAI,IACjEU,EAAUR,GAAY,EAAG,CAAC,EAC1BS,EAAOF,GAAcC,EAGvBE,EAAiB,EACjBD,IACAC,EAAiBR,GAAa,YAAaJ,CAAM,EAAI,KAKzD,IAAMa,EAFuBC,GAAY,uBAAwBd,CAAM,EAEvB,IAAOY,EAEjDG,EAAcR,EAAW,gBAAkBM,EAC3CG,EAAsBT,EAAW,eAAiBM,EACxD,MAAO,CACH,IAAAP,EACA,KAAAK,EACA,YAAAI,EACA,oBAAAC,CACJ,CACJ,CAEO,SAASR,GAAeR,EAAuB,CAElD,IAAMiB,EAAkBC,GAAwBlB,CAAM,EAChDmB,EAAS,CACX,gBAAiB,EACjB,kBAAmB,EACnB,kBAAmB,EACnB,eAAgB,EAChB,mBAAoB,EACpB,mBAAoB,EACpB,gBAAiB,EACjB,eAAgB,EAChB,eAAgB,EAChB,YAAa,CACjB,EAEIC,EAAkB,EAEtB,CACIpB,EAAO,OAASC,GAAkB,SAClC,GAAM,CAAE,IAAAoB,EAAK,IAAAC,CAAI,EAAIC,GAAW,WAAYvB,EAAQiB,CAAe,EACnEE,EAAO,kBAAoBE,EAC3BF,EAAO,kBAAoBG,EAC3B,IAAMf,EAAaP,EAAO,WAAWqB,EAAKC,CAAG,EAC7CH,EAAO,eAAiBZ,EACxBa,GAAmBb,CACvB,CAEA,OAAAY,EAAO,gBAAkBC,EAClBD,CACX,CAGA,SAASI,GAAWC,EAAwBxB,EAAuBiB,EAAkCQ,EAAa,EAAG,CAEjHA,GAActC,GAAgBqC,GAC9B,IAAIE,EAAS,EACTC,EAAS,EACPC,EAAc,CAAC,WAAY,YAAa,OAAO,EACrD,QAAWC,KAAQD,EAAa,CAC5B,GAAIC,IAASL,EACT,MAEJ,IAAMM,EAAab,EAAgBY,GAA2BL,GAC9D,GAAIM,EAAY,EAAG,CACf,GAAM,CAAE,IAAAT,EAAK,IAAAC,CAAI,EAAIC,GAAWM,EAAM7B,EAAQiB,EAAiBQ,CAAU,EACzEC,GAAU,KAAK,KAAKL,EAAMS,CAAS,EACnCH,GAAU,KAAK,KAAKL,EAAMQ,CAAS,CACvC,CACJ,CAEA,IAAMC,EAAUjB,GAAY,YAAyBd,CAAM,EACrDgC,EAAUlB,GAAY,YAAyBd,CAAM,EAErDiC,EAAW7C,GAAqBqC,GAChCJ,EAAM,KAAK,MAAMa,GAAeD,EAAwBF,EAAS/B,CAAM,EAAI0B,CAAM,EACjFJ,EAAM,KAAK,MAAMY,GAAeD,EAAwBD,EAAShC,CAAM,EAAI2B,CAAM,EACvF,MAAO,CAAE,IAAAN,EAAK,IAAAC,CAAI,CACtB,CAGA,SAASJ,GAAwBlB,EAAuB,CAGpD,IAAMiB,EAAmC,CAAC,EACpCkB,EAAqB,OAAO,KAAKhD,EAAe,EACtD,QAASM,EAAI,EAAGA,EAAI0C,EAAmB,OAAQ1C,IAAK,CAChD,IAAM+B,EAAaW,EAAmB1C,GAChC2C,EAAyB,CAAC,EAC1BC,EAAwB,CAAC,EACzBC,EAAkB,CAAC,EACrBC,EAAc,EACdC,EAAa,EACjB,QAASC,EAAIhD,EAAI,EAAGgD,EAAIN,EAAmB,OAAQM,IAAK,CACpD,IAAMC,EAAkBP,EAAmB1C,GACrCkD,EAAkB,GAAGnB,eAAwBkB,IACnDN,EAAWM,GAAmB5B,GAAY6B,EAAiB3C,CAAM,EACjEuC,GAAeH,EAAWM,GAC1BL,EAAUK,GAAmB5B,GAAY6B,EAAiB3C,CAAM,EAChEwC,GAAcH,EAAUK,GACxBJ,EAAII,GAAmB5B,GAAY,GAAGU,UAAmBkB,IAA+B1C,CAAM,CAClG,CAEA,IAAM4C,EAAMJ,EAAa,IAAM,IAAMA,GAAc,IAAMA,GAAcD,EACvE,QAAW5C,KAAO,OAAO,KAAK0C,CAAS,EACnCA,EAAU1C,IAAuBiD,EAGrC,IAAMC,EAAqC,CAAE,MAAO,CAAE,EACtD,OAAW,CAAClD,EAAKC,CAAK,IAAK,OAAO,QAAQwC,CAAU,EAAG,CACnD,IAAMU,EAAiBT,EAAU1C,IAAsB,EACjDoD,EAAWT,EAAI3C,IAAsB,EAC3CkD,EAAiBlD,IAAsBC,EAAQkD,EAAiBC,GAAY,GAChF,CACAF,EAAiB,MAAQ,EAAI,KAAK,KAAKN,EAAcC,GAAc,IAAK,CAAC,EACzEvB,EAAgBO,GAAcqB,CAClC,CACA,OAAA5B,EAAgB,MAAW,CAAE,MAAO,CAAE,EAC/BA,CACX,CCxKO,SAAS+B,GAAgBC,EAA6B,CAEzD,IAAMC,EAAwB,CAC1B,YAAAD,EACA,MAAOE,GAAkB,OACzB,WAAYC,EAChB,EAGMC,EAAYC,GAAa,YAAaJ,CAAM,EAAI,IAChDK,EAAmBC,GAAMH,EAAW,EAAG,CAAC,EAGxCI,EAAcH,GAAa,cAAeJ,CAAM,EAEhDQ,EAAuBC,GAAY,uBAAwBT,CAAM,EAAI,IAGrEU,EAAUN,GAAa,UAAWJ,CAAM,EACxCW,EAAYP,GAAa,YAAaJ,CAAM,EAC5CY,EAAiBR,GAAa,iBAAkBJ,CAAM,EAEtDa,EAAaT,GAAa,aAAcJ,CAAM,EAAI,IAClDc,EAAoBR,GAAMO,EAAY,EAAG,CAAC,EAC1CE,EAAY,KAAK,IAAIX,GAAa,YAAaJ,CAAM,EAAG,GAAG,EAAI,IAE/DgB,EAAuB,EAAKF,EAAoBC,EAEhDE,EAAmBC,GAAelB,CAAM,EAExCmB,EAAaX,EAAuBQ,EACpCI,EAAMH,EAAiB,gBAAkBZ,EAAmBE,EAAcY,EAEhF,MAAO,CACH,UAAWhB,EAAY,IACvB,iBAAkBE,EAAmB,IACrC,YAAAE,EACA,WAAYM,EAAa,IACzB,kBAAmBC,EAAoB,IACvC,UAAWC,EAAY,IACvB,QAAAL,EACA,UAAAC,EACA,eAAAC,EACA,IAAAQ,EACA,kBAAmBH,EAAiB,kBACpC,kBAAmBA,EAAiB,kBAEpC,cAAeb,GAAa,gBAAiBJ,CAAM,EACnD,wBAAyBqB,GAAe,WAAY,EAAG,OAAO,OAAO,CAAC,EAAGrB,EAAQ,CAAE,MAAOC,GAAkB,KAAM,CAAC,CAAC,CACxH,CACJ,CAIO,SAASQ,GAAYa,EAAgCtB,EAAuB,CAC/E,OAAOuB,GAAW,OAAQD,EAAStB,CAAM,CAC7C,CACO,SAASwB,GAAWF,EAAgCtB,EAAuB,CAC9E,OAAO,KAAK,IAAI,EAAG,EAAIuB,GAAW,MAAOD,EAAStB,CAAM,EAAI,GAAG,CACnE,CACO,SAASyB,GAAYH,EAAgCtB,EAAuB,CAC/E,OAAO,KAAK,IAAI,EAAGuB,GAAW,OAAQD,EAAStB,CAAM,CAAC,CAC1D,CACO,SAASqB,GAAeC,EAAgCI,EAAc1B,EAAuB,CAChG,GAAI0B,GAAQ,EAAG,MAAO,GACtB,IAAMC,EAAMH,GAAWF,EAAStB,CAAM,EAChC4B,EAAOH,GAAYH,EAAStB,CAAM,EACxC,OAAO0B,EAAOC,EAAMC,CACxB,CACO,SAASxB,GAAakB,EAAgCtB,EAAuB,CAChF,IAAM0B,EAAOjB,GAAYa,EAAStB,CAAM,EACxC,GAAI0B,IAAS,EACT,MAAO,GAEX,IAAMC,EAAMH,GAAWF,EAAStB,CAAM,EAChC4B,EAAOH,GAAYH,EAAStB,CAAM,EACxC,OAAO0B,EAAOC,EAAMC,CACxB,CACO,SAASL,GAAWM,EAAkCC,EAA6B9B,EAAuB,CAE7G8B,EAAO,MAAM,QAAQA,CAAI,EAAIA,EAAO,CAACA,CAAI,EACzC,IAAIC,EAASF,IAAc,OAAS,EAAI,EAClCG,EAAU,CAACC,EAAWC,KAChBD,EAAIC,KAAOA,EAGjBC,EAAkBnC,EAAO,YAAY,OAAOoC,GAC1C,GAACN,EAAK,SAASM,EAAE,IAAI,GAGrBA,EAAE,YAAcP,GAEhB,CAACG,EAAQhC,EAAO,MAAOoC,EAAE,OAAS,CAAC,EAG1C,EACD,QAAWC,KAAOF,EAAiB,CAC/B,IAAIG,EAAQD,EAAI,MACZR,IAAc,OACdE,GAAU,EAAIO,EAAQ,IAEtBP,GAAUO,CAElB,CACA,OAAO,KAAK,IAAI,EAAGP,CAAM,CAC7B,CClHA,IAAMQ,GAAYC,EAAU,oCAAoC,EAErDC,GACPC,GACAC,GACSC,GAAU,IAAIC,GAC3BD,GAAQ,OAAO,IAAM,CACjBF,GAAcD,GAAQ,EAAEE,IACxBD,GAAY,KAAK,CACrB,CAAC,EAEM,SAASI,GAAKC,EAA0B,CAC3CN,GAAU,CAAC,EACXE,GAAQ,EAERF,GAAQ,KAAK,GAAGM,EAAK,UAAU,IAAIC,GAAU,IAAIC,GAAMD,CAAM,CAAC,CAAC,EAC/DP,GAAQ,KAAK,IAAIS,EAAO,EAExBR,GAAcD,GAAQE,IACtBD,GAAY,KAAK,CACrB,CAEO,SAASS,GAAWC,EAAgB,CACvCV,GAAY,WAAWU,CAAM,CACjC,CAEO,SAASC,GAAaC,EAAe,CACxCX,GAAQY,GAAMD,EAAQ,EAAG,EAAGb,GAAQ,OAAS,CAAC,EAC9CC,GAAcD,GAAQE,IACtBD,GAAY,KAAK,CACrB,CAEO,SAASc,GAAUC,EAAe,CACrCA,EAAQ,MAAQ,CACZ,MAAAd,GACA,OAAQD,GAAY,OACpB,YAAcA,IAAA,YAAAA,GAAuB,MACzC,CACJ,CAEO,SAASgB,GAAUC,EAAY,CAClC,IAAMC,EAAaD,EAAK,MACrB,CAACC,IAGJjB,GAAQiB,EAAW,OAAS,EAC5BlB,GAAcD,GAAQE,IACtBD,GAAY,OAASkB,EAAW,OAC5BlB,cAAuBQ,KACvBR,GAAY,OAASkB,EAAW,aAAe,GAEnDlB,GAAY,KAAK,EACrB,CAEA,IAAMO,GAAN,KAAY,CAER,YAA4BY,EAAmB,CAAnB,eAAAA,EAD5BC,EAAA,eAEI,KAAK,OAASD,CAClB,CAEA,MAAM,CACF,KAAK,gBAAgB,CACzB,CAEA,WAAWT,EAAgB,CACvB,KAAK,OAASG,GAAM,KAAK,OAASH,EAAQ,EAAG,KAAK,MAAM,EACxD,KAAK,gBAAgB,EACjB,KAAK,SAAW,GAChBR,GAAQ,OAAO,IAAI,CAE3B,CAEA,iBAAkB,CACd,IAAMmB,EAAM,KAAK,OAAS,KAAK,UAAY,IAC3CxB,GAAU,MAAM,MAAQ,GAAGwB,IAC/B,CACJ,EAEMb,GAAN,cAAoBD,EAAM,CAEtB,aAAc,CACV,MAAM,CAAC,EAFXa,EAAA,eAGI,KAAK,OAAS,CAClB,CAEA,MAAM,CACFvB,GAAU,MAAM,MAAQ,OACxB,KAAK,gBAAgB,CACzB,CAEA,WAAWa,EAAgB,CACvB,KAAK,QAAUA,EACf,KAAK,gBAAgB,CACzB,CAEA,iBAAkB,CACdb,GAAU,aAAa,cAAe,KAAK,OAAO,QAAQ,CAAC,CAC/D,CACJ,EAEOyB,GAAQ,CAAE,KAAAlB,GAAM,aAAAO,GAAc,WAAAF,GAAY,QAAAP,EAAQ,ECzGlD,IAAMqB,GAAqB,CAACC,EAAsBC,IAAyE,CAC9H,IAAMC,EAAW,IAAI,qBAAqBC,CAAO,EACjD,OAAAD,EAAS,QAAQF,CAAO,EACjBE,EACP,SAASC,EAAQC,EAAsC,CACnDA,EAAQ,QAAQC,GAAS,CACrBJ,EAASI,EAAM,eAAgBH,CAAQ,CAC3C,CAAC,CACL,CACJ,ECJA,IAAMI,GAAN,cAAwBC,EAAM,CAE1B,YAAYC,EAAsBC,EAAkB,CAChD,MAAMD,CAAY,EAFtBE,EAAA,KAAS,UAGL,KAAK,OAASD,GAAU,EAC5B,CACJ,EAEME,GAAa,CACf,cAAe,IAAIL,GAAU,CAAC,EAC9B,iBAAkB,IAAIA,GAAU,CAAC,EACjC,iBAAkB,IAAIA,GAAU,CAAC,EACjC,KAAQ,IAAIA,GAAU,CAAC,EACvB,gBAAiB,IAAIA,GAAU,CAAC,EAChC,eAAgB,IAAIA,GAAU,CAAC,EAC/B,wBAAyB,IAAIA,GAAU,CAAC,EACxC,iBAAkB,IAAIA,GAAU,CAAC,CACrC,EAEOM,GAAQD,GAEXE,GAAW,EAEfC,GAAmB,SAAS,cAAc,uBAAuB,EAAIC,EAAgB,EAErF,SAASA,GAAiBC,EAAkB,CACpCA,GACA,OAAO,QAAQL,EAAU,EAAE,QAAQ,CAAC,CAACM,EAAKC,CAAK,IAAMC,GAAqBF,EAAKC,CAAK,CAAC,EACrFL,GAAWO,GAAS,UAAU,IAC1B,OAAO,QAAQT,EAAU,EAAE,QAAQ,CAAC,CAACM,EAAKC,CAAK,IAC3CC,GAAqBF,EAAKC,CAAK,CAAC,EACpC,CAAE,qBAAsB,GAAK,CAAC,GAElCE,GAAS,YAAYP,EAAQ,CAErC,CAEO,SAASQ,IAA2B,CACvC,IAAMC,EAA4B,CAAC,EAE7BC,EAAeN,GAAgB,CACjC,IAAMO,EAAU,SAAS,cAAc,IAAI,EAC3CA,EAAQ,UAAU,IAAI,UAAW,QAAQ,EACzC,IAAMC,EAAQ,SAAS,cAAc,KAAK,EAC1CD,EAAQ,YAAYC,CAAK,EACzB,IAAMP,EAAQ,SAAS,cAAc,KAAK,EAC1C,OAAAM,EAAQ,YAAYN,CAAK,EACzBO,EAAM,YAAcR,EACpBC,EAAM,aAAa,YAAaD,CAAG,EACnCC,EAAM,aAAa,mBAAoBQ,GAAcT,CAA8B,CAAC,EAC7EO,CACX,EACA,QAAWP,KAAO,OAAO,KAAKN,EAAU,EAAG,CACvC,IAAMa,EAAUD,EAAYN,CAAa,EACzCK,EAAS,KAAKE,CAAO,CACzB,CACA,SAAS,cAAc,kBAAkB,EAAG,gBAAgB,GAAGF,CAAQ,CAC3E,CAEA,SAASI,GAAcT,EAA8B,CACjD,OAAQA,EAAK,CACT,IAAK,cAAe,MAAO,MAC/B,CACA,MAAO,EACX,CAEA,SAASE,GAAqBF,EAAaC,EAAc,CAvEzD,IAAAS,EAwEI,IAAMH,EAAU,SAAS,cAAc,6BAA6BP,KAAO,EAC3E,GAAI,CAACO,EACD,OAEJ,IAAMI,EAAYV,EAAM,IAAI,IAAM,EAElC,IADAS,EAAAH,EAAQ,gBAAR,MAAAG,EAAuB,UAAU,OAAO,SAAUC,GAC9CA,EACA,OAGJ,OADaJ,EAAQ,aAAa,kBAAkB,EACtC,CACV,IAAK,OACD,IAAMK,EAAO,IAAI,KAAK,CAAC,EACvBA,EAAK,WAAWX,EAAM,IAAI,CAAC,EAC3B,IAAMY,EAAMD,EAAK,YAAY,EAAE,UAAU,GAAI,EAAE,EAC/CL,EAAQ,YAAcM,EACtB,MACJ,QACIN,EAAQ,YAAcN,EAAM,IAAI,EAAE,QAAQ,CAAC,CACnD,CACJ,CAEO,SAASa,GAAeC,EAAe,CAC1CA,EAAQ,WAAa,OAAO,QAAQrB,EAAU,EAAE,IAAI,CAAC,CAACM,EAAKC,CAAK,KACrD,CACH,KAAMD,EACN,MAAOC,EAAM,IAAI,CACrB,EACH,CACL,CAEO,SAASe,GAAeD,EAAe,CAvG9C,IAAAL,GAwGIA,EAAAK,EAAQ,aAAR,MAAAL,EAAoB,QAAQO,GAAK,CAxGrC,IAAAP,GAyGQA,EAAAhB,GAAWuB,EAAE,QAAb,MAAAP,EAA+C,IAAIO,EAAE,MACzD,EACJ,CChGA,IAAMC,GAAuB,SAAS,cAA2B,oBAAoB,EAC/EC,GAAU,SAAS,cAA2B,2BAA2B,EAC3EC,GAESC,GAAQ,IAAIC,GACzBD,GAAM,SAAS,OAAOE,EAAW,EAEjCC,GAAM,QAAQ,OAAO,IAAM,CACnBC,EAAY,MAAM,IAAI,EAAIC,GAAQ,OAAS,GAC3CD,EAAY,MAAM,IAAI,CAAC,CAE/B,CAAC,EAEM,IAAMA,EAAc,OAAO,OAAO,CACrC,MAAO,IAAIE,GAAM,CAAC,EAClB,KAAM,IAAIA,GAAM,CAAC,EACjB,cAAe,IAAIA,GAAM,CAAC,EAC1B,YAAa,IAAIA,GAAM,CAAC,EACxB,eAAgB,IAAIA,GAAM,CAAC,EAC3B,QAAS,IAAIA,GAAM,CAAC,EACpB,QAAS,IAAIA,GAAM,CAAC,EACpB,UAAW,IAAIA,GAAM,CAAC,EACtB,wBAAyB,IAAIA,GAAM,CAAC,CACxC,CAAC,EAEM,SAASC,GAAKC,EAAqB,CACtCR,GAAM,MAAM,EACZ,OAAO,OAAOI,CAAW,EAAE,QAAQK,GAAKA,EAAE,MAAM,CAAC,EAEjDL,EAAY,MAAM,YAAY,SAAUK,GAAKC,EAAU,sBAAuBb,EAAoB,EAAE,YAAcY,EAAE,QAAQ,CAAC,EAC7HL,EAAY,KAAK,YAAY,SAAUK,GAAKC,EAAU,qBAAsBb,EAAoB,EAAE,YAAcY,EAAE,QAAQ,CAAC,EAC3HL,EAAY,MAAM,IAAI,CAAC,EACvBA,EAAY,KAAK,IAAI,CAAC,EAGtBA,EAAY,QAAQ,YAAY,SAAUO,GAAW,CACjD,IAAMC,EAAUR,EAAY,QAAQ,IAAI,EACpCO,EAAUC,GACVR,EAAY,QAAQ,IAAIQ,CAAO,EAEnCC,GAAc,CAClB,CAAC,EAEGL,GACAA,EAAW,QAAQ,QAAQC,GAAK,CAC5BT,GAAM,IAAI,IAAIc,GAASL,CAAC,EAAE,MAAO,QAAQ,CAC7C,CAAC,EAGLM,GAAS,UAAU,IAAM,CACrB,IAAMC,EAASZ,EAAY,cAAc,IAAI,EAC7CA,EAAY,KAAK,IAAIY,CAAM,EAC3BC,GAAW,kBAAkB,IAAID,CAAM,CAC3C,EAAG,CAAE,qBAAsB,GAAK,CAAC,EAEjCD,GAAS,UAAWG,GAAO,CACvB,IAAMC,EAAYf,EAAY,UAAU,IAAI,EAAIc,EAChDd,EAAY,QAAQ,IAAIe,CAAS,EACjCF,GAAW,kBAAkB,IAAIE,CAAS,CAC9C,CAAC,EAEDC,GAAgB,CACpB,CAEA,eAAsBC,IAAQ,CAE1B,MAAMnB,GAAY,EAClBE,EAAY,QAAQ,IAAIA,EAAY,QAAQ,IAAI,CAAC,CACrD,CAEA,eAAeF,IAAc,CACzB,OAAO,IAAI,QAASoB,GAAY,CAC5B,aAAavB,EAAa,EAC1BA,GAAgB,OAAO,WAAW,SAAY,CAC1C,IAAMwB,EAAcC,GAAgBxB,GAAM,OAAO,EACjDI,EAAY,YAAY,IAAImB,EAAY,WAAW,EACnDnB,EAAY,cAAc,IAAImB,EAAY,aAAa,EACvDnB,EAAY,QAAQ,IAAImB,EAAY,OAAO,EAC3CnB,EAAY,UAAU,IAAImB,EAAY,SAAS,EAC/CnB,EAAY,eAAe,IAAImB,EAAY,cAAc,EACzDnB,EAAY,wBAAwB,IAAImB,EAAY,uBAAuB,EAC3E1B,GAAqB,iBAAiB,aAAa,EAAE,QAAQY,GAAK,CAC9D,IAAMgB,EAAOhB,EAAE,aAAa,WAAW,EACjCiB,EAAOH,EAAYE,GACzB,GAAI,OAAOC,GAAS,SAAU,CAC1B,IAAMC,EAAc,OAAOlB,EAAE,aAAa,aAAa,GAAK,CAAC,EAC7DA,EAAE,YAAciB,EAAK,QAAQC,CAAW,CAC5C,CACJ,CAAC,EACDL,EAAQ,IAAI,CAChB,EAAG,CAAC,CAER,CAAC,CACL,CAEA,SAAST,IAAgB,CACrB,IAAMe,EAAMxB,EAAY,QAAQ,IAAI,EAAIA,EAAY,QAAQ,IAAI,EAAI,IACpEN,GAAQ,MAAM,MAAQ8B,EAAM,GAChC,CAEA,SAASR,IAAkB,CACvB,IAAIS,EAAa,EACjBd,GAAS,UAAUG,GAAM,CACrB,IAAMY,EAAc,EAAI1B,EAAY,YAAY,IAAI,EAEpD,GADAyB,GAAcX,EACVW,GAAcC,EAAa,CAC3B,IAAMnB,EAAUP,EAAY,QAAQ,IAAI,EAClC2B,EAAW3B,EAAY,eAAe,IAAI,EAC5CO,EAAUoB,IACV3B,EAAY,QAAQ,SAAS2B,CAAQ,EACrCC,GAAc,EACdH,EAAa,EAErB,CACJ,CAAC,CACL,CAEA,SAASG,IAAgB,CACrB,IAAMC,EAASC,GAAWlC,GAAM,OAAO,EACnC,CAACiC,IAILhB,GAAW,KAAK,IAAI,CAAC,EACrBA,GAAW,gBAAgB,IAAIgB,EAAO,WAAW,EACjDhB,GAAW,yBAAyB,IAAIgB,EAAO,mBAAmB,EAC9DA,EAAO,MACPhB,GAAW,iBAAiB,IAAI,CAAC,EAGrCd,GAAM,WAAW8B,EAAO,WAAW,EACvC,CAEO,SAASE,GAAWC,EAAe,CACtCA,EAAQ,OAAS,CACb,MAAOhC,EAAY,MAAM,IAAI,EAC7B,KAAMA,EAAY,KAAK,IAAI,EAC3B,QAASA,EAAY,QAAQ,IAAI,CACrC,CACJ,CAEA,eAAsBiC,GAAWD,EAAe,CAC5C,IAAME,EAAaF,EAAQ,OACvB,CAACE,IAGLlC,EAAY,MAAM,IAAIkC,EAAW,OAAS,CAAC,EAC3ClC,EAAY,KAAK,IAAIkC,EAAW,MAAQ,CAAC,EACzClC,EAAY,QAAQ,IAAIkC,EAAW,SAAW,CAAC,EAE/C,MAAMpC,GAAY,EACtB,CCvJO,IAAMqC,GAAN,KAAY,CASf,aAAc,CARdC,EAAA,KAAiB,eAAeC,EAAU,sCAAsC,GAChFD,EAAA,KAAiB,qBAAqBC,EAAU,oBAAqB,KAAK,YAAY,GACtFD,EAAA,KAAiB,qBAAqBC,EAAU,oBAAqB,KAAK,YAAY,GACtFD,EAAA,KAAiB,cAAcC,EAAU,uBAAwB,KAAK,YAAY,GAClFD,EAAA,KAAiB,eAAeC,EAAU,wBAAyB,KAAK,YAAY,GACpFD,EAAA,KAAiB,eAAeC,EAAU,wBAAyB,KAAK,YAAY,GACpFD,EAAA,KAAQ,aACRA,EAAA,KAAQ,iBAEJ,KAAK,YAAY,iBAAiB,QAAS,IAAM,KAAK,MAAM,CAAC,EAC7D,KAAK,aAAa,iBAAiB,QAAS,IAAM,KAAK,OAAO,CAAC,EAC/D,KAAK,aAAa,iBAAiB,QAAS,IAAM,KAAK,OAAO,CAAC,CACnE,CAEA,KAAKE,EAAgB,CACjB,KAAK,UAAYA,EAAK,UACtB,KAAK,aAAa,UAAU,OAAO,SAAU,CAACA,EAAK,SAAS,EAC5D,KAAK,aAAa,gBAAgB,WAAY,KAAK,UAAU,QAAU,MAAS,EAChF,KAAK,kBAAkBA,EAAK,MAAM,EAClC,KAAK,aAAa,UAAU,OAAO,QAAQ,CAC/C,CAEQ,kBAAkBC,EAAiB,CAlC/C,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAmCQ,IAAMC,EAAiB,MAAM,OAAKL,GAAAD,EAAA,KAAK,YAAL,YAAAA,EAAgB,QAAQ,gBAAxB,YAAAC,EAAuC,WAAY,CAAC,CAAC,EAAE,IAAIM,GAAKA,EAAE,aAAa,iBAAiB,CAAC,EAC7HC,EAAW,CAAC,EAClB,QAAWC,KAASV,EAAQ,CACxB,IAAMW,EAAU,SAAS,cAAc,IAAI,EAC3CA,EAAQ,YAAcD,EAAM,KAC5BC,EAAQ,UAAU,IAAI,aAAa,EACnCA,EAAQ,aAAa,kBAAmBD,EAAM,IAAI,EAClD,IAAME,EAASL,EAAe,KAAKC,GAAKA,IAAME,EAAM,IAAI,EACxDC,EAAQ,gBAAgB,WAAYC,CAAM,EAC1CD,EAAQ,iBAAiB,QAAS,IAAM,CA5CpD,IAAAV,EA6CgB,KAAK,SAASS,CAAgC,EAC9CD,EAAS,QAAQD,GAAKA,EAAE,UAAU,OAAO,WAAYA,IAAMG,CAAO,CAAC,EACnE,KAAK,YAAY,gBAAgB,WAAYD,MAAUT,EAAA,KAAK,YAAL,YAAAA,EAAgB,MAAK,EAC5E,IAAIY,EAAgBH,EACpB,KAAK,cAAgBG,CACzB,CAAC,EACDJ,EAAS,KAAKE,CAAO,CACzB,CAEA,GADA,KAAK,mBAAmB,gBAAgB,GAAGF,CAAQ,GAChDN,EAAA,KAAK,YAAL,MAAAA,EAAgB,MAAM,CACrB,IAAMQ,EAAU,KAAK,mBAAmB,cAA2B,sBAAqBN,GAAAD,EAAA,KAAK,YAAL,YAAAA,EAAgB,QAAhB,YAAAC,EAAuB,QAAQ,EACpHM,GACHA,EAAQ,MAAM,CAClB,MACIL,EAAAG,EAAS,KAAT,MAAAH,EAAa,OAErB,CACQ,SAASI,EAAgC,CA9DrD,IAAAT,EAAAC,EAAAC,EA+DQL,EAAU,cAAc,EAAE,YAAcY,EAAM,KAC9CZ,EAAU,yBAA0B,KAAK,kBAAkB,EAAE,YAAcY,EAAM,SAAS,QAAQ,EAElG,IAAMI,EAAqBhB,EAAU,4BAA6B,KAAK,kBAAkB,EACnFiB,EAA8BjB,EAAU,qCAAsC,KAAK,kBAAkB,EACrGkB,EAAsBlB,EAAU,6BAA8B,KAAK,kBAAkB,EAE3F,CAACgB,EACGC,EACAC,CAAmB,EAAE,QAAQR,GAAE,CAxE3C,IAAAP,EAwE8C,OAAAA,EAAAO,EAAE,gBAAF,YAAAP,EAAiB,UAAU,IAAI,UAAS,EAEzES,aAAiBO,KAClBhB,EAAAa,EAAmB,gBAAnB,MAAAb,EAAkC,UAAU,OAAO,UACnDa,EAAmB,YAAcJ,EAAM,YAAY,QAAQ,CAAC,GAC5DR,EAAAa,EAA4B,gBAA5B,MAAAb,EAA2C,UAAU,OAAO,UAC5Da,EAA4B,YAAcL,EAAM,qBAAqB,QAAQ,CAAC,EAAI,KAC3EA,aAAiBQ,MACxBf,EAAAa,EAAoB,gBAApB,MAAAb,EAAmC,UAAU,OAAO,UACpDa,EAAoB,YAAc,GAAGN,EAAM,aAAa,QAAQ,MAGpE,IAAMS,EAA6B,CAAC,EACpC,QAAWC,KAAOV,EAAM,KAAM,CAC1B,IAAMW,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,UAAU,IAAI,YAAY,EACrCA,EAAW,YAAcD,EAAI,KAC7BD,EAAY,KAAKE,CAAU,CAC/B,CACAvB,EAAU,kBAAmB,KAAK,kBAAkB,EAAE,gBAAgB,GAAGqB,CAAW,CACxF,CACQ,OAAQ,CACT,CAAC,KAAK,eAAiB,CAAC,KAAK,YAGhC,KAAK,UAAU,IAAI,KAAK,aAAa,EACrC,KAAK,MAAM,EACf,CACQ,QAAS,CACV,CAAC,KAAK,YAGT,KAAK,UAAU,IAAI,MAAS,EAC5B,KAAK,MAAM,EACf,CACQ,QAAS,CACb,KAAK,MAAM,CACf,CACQ,OAAO,CACX,KAAK,aAAa,UAAU,IAAI,QAAQ,CAC5C,CACJ,EC3GA,IAAMG,GAAQ,IAAIC,GAEIC,GAAf,KAA0C,CAG7C,aAAc,CAFdC,EAAA,KAAgB,WAChBA,EAAA,KAAU,UAEN,KAAK,QAAU,KAAK,cAAc,CACtC,CACA,IAAI,OAAQ,CAAE,OAAO,KAAK,MAAQ,CAClC,IAAIC,EAAsB,CACtB,KAAK,OAASA,EACd,IAAMC,GAAOD,GAAA,YAAAA,EAAO,OAAQ,UAC5B,KAAK,QAAQ,aAAa,kBAAmBC,CAAI,EACjDC,EAAU,eAAgB,KAAK,OAAO,EAAE,YAAcD,CAC1D,CAEJ,EAEaE,GAAN,cAA8BL,EAAuB,CAGxD,YAAYM,EAA6B,CACrC,MAAM,EAHVL,EAAA,KAAiB,qBAAqBG,EAAU,iDAAiD,GACjGH,EAAA,KAAS,UAGL,KAAK,mBAAmB,YAAY,KAAK,OAAO,EAChD,KAAK,OAASK,CAClB,CAEA,IAAIJ,EAAoB,CAjC5B,IAAAK,EAkCQ,MAAM,IAAIL,CAAK,GACfK,EAAA,KAAK,SAAL,MAAAA,EAAa,QACjB,CAEA,MAAO,CACHT,GAAM,KAAK,CAAE,UAAW,GAAO,OAAQ,KAAK,OAAQ,UAAW,IAAK,CAAC,CACzE,CAEU,eAAgB,CACtB,IAAMU,EAAU,SAAS,cAAc,KAAK,EAC5C,OAAAA,EAAQ,UAAU,IAAI,SAAS,EAC/BA,EAAQ,aAAa,kBAAmB,cAAc,EACtDA,EAAQ,mBAAmB,YAAa,wBAAwB,EAChEA,EAAQ,mBAAmB,YAAa,kDAAkD,EAC1FA,EAAQ,cAAc,mBAAmB,EAAG,iBAAiB,QAAS,IAAM,KAAK,KAAK,CAAC,EAChFA,CACX,CACJ,EAEaC,GAAN,cAA4BT,EAAqB,CAMpD,YAAYU,EAAqB,CAC7B,MAAM,EANVT,EAAA,KAAiB,gBAAgBG,EAA4B,sDAAsD,GACnHH,EAAA,KAAiB,eACjBA,EAAA,KAAS,UACTA,EAAA,KAAQ,UAAmB,IAIvB,KAAK,cAAc,YAAY,KAAK,OAAO,EAC3C,KAAK,YAAcG,EAAU,sBAAuB,KAAK,OAAO,EAChE,KAAK,OAASM,EACd,KAAK,IAAI,MAAS,CACtB,CAEQ,SAAU,CACV,CAAC,KAAK,QAAU,KAAK,SAIrB,EADmBC,EAAY,QAAQ,IAAI,GAAK,KAAK,OAAO,YAIhEA,EAAY,QAAQ,SAAS,KAAK,OAAO,QAAQ,EACjD,KAAK,MAAM,EACf,CAEQ,OAAQ,CACZ,GAAI,CAAC,KAAK,OACN,OAEJ,IAAMC,EAAe,IAAG,CAnFhC,IAAAL,EAmFmC,QAAAA,EAAA,KAAK,SAAL,YAAAA,EAAa,eAAgB,EAAII,EAAY,wBAAwB,IAAI,GAChGE,EAAOD,EAAa,EACpBE,EAAM,IACNC,EAAWF,EACXG,EAAS,GACPC,EAAa,IAAM,CACrBF,EAAWH,EAAa,EACxBC,EAAOE,GAAYD,EAAM,IAC7B,EACAH,EAAY,wBAAwB,YAAY,SAAUM,CAAU,EAEpEC,GAAM,IAAI,KAAK,OAAO,KAAK,QAAQC,GAAKA,EAAE,KAAK,EAAG,KAAK,OAAO,UAAU,EAExE,IAAMC,EAAa,IAAM,CACrBJ,EAASK,GAAS,UAAUC,GAAM,CAC9B,GAAIT,GAAQ,EAAG,CACXQ,GAAS,YAAYL,CAAM,EAC3BO,EAAK,EACL,MACJ,CACAV,GAAQS,EACRR,EAAM,KAAK,IAAI,EAAGD,EAAOE,EAAW,GAAG,EACvC,KAAK,YAAY,MAAM,MAAQ,GAAGD,IACtC,CAAC,CACL,EAEMS,EAAO,IAAM,CACfZ,EAAY,wBAAwB,eAAe,SAAUM,CAAU,EACnE,KAAK,QACLC,GAAM,eAAe,KAAK,OAAO,UAAU,EAE/C,KAAK,QAAU,GACf,KAAK,YAAY,MAAM,MAAQ,IACnC,EACAE,EAAW,EACX,KAAK,QAAU,EACnB,CAEQ,MAAO,CACXtB,GAAM,KAAK,CAAE,UAAW,GAAM,OAAQ,KAAK,OAAQ,UAAW,IAAK,CAAC,CACxE,CAEU,eAAgB,CACtB,IAAMU,EAAU,SAAS,cAAc,IAAI,EAC3C,OAAAA,EAAQ,UAAU,IAAI,SAAS,EAC/BA,EAAQ,aAAa,kBAAmB,YAAY,EAEpDA,EAAQ,mBAAmB,YAAa;AAAA;AAAA;AAAA;AAAA,eAIjC,EACPA,EAAQ,mBAAmB,YAAa,kDAAkD,EAC1FJ,EAAU,cAAeI,CAAO,EAAE,iBAAiB,QAAS,IAAM,KAAK,KAAK,CAAC,EAC7EJ,EAAU,eAAgBI,CAAO,EAAE,iBAAiB,QAAS,IAAM,KAAK,QAAQ,CAAC,EAC1EA,CACX,CACJ,ECtIA,IAAIgB,GACAC,GACAC,GACAC,GAEEC,GAAuB,SAAS,cAA2B,iDAAiD,EAC5GC,GAAgB,SAAS,cAAgC,sDAAsD,EAG9G,SAASC,GAAKC,EAAc,CAS/B,GAPAP,GAAe,CAAC,EAChBC,GAAa,CAAC,EACdE,GAAiB,CAAC,EAClBC,GAAqB,gBAAgB,EACrCC,GAAc,gBAAgB,EAE9BE,EAAK,aAAa,UAAU,KAAK,CAACC,EAAGC,IAAMD,EAAE,SAAWC,EAAE,QAAQ,EAC9DF,EAAK,aAAa,UAAU,GAAG,SAAW,EAC1C,MAAM,MAAM,6DAA6D,EAQ7E,GALAP,GAAeO,EAAK,aAAa,UAAU,IAAIG,GAAK,IAAIC,GAAYD,CAAC,CAAC,EACtER,GAAkB,IAAIU,GAAgBZ,EAAY,EAClDE,GAAgB,IAAIF,GAAa,EAAE,EAG/BO,EAAK,WAAY,CACjBN,GAAaM,EAAK,WAAW,UAAU,IAAIG,GAAK,IAAIG,GAAUH,CAAC,CAAC,EAChE,QAAWI,KAAaP,EAAK,WAAW,WAAY,CAChD,GAAIO,EAAU,UAAY,EAAG,CACzBX,GAAe,KAAK,IAAIY,GAAcd,EAAU,CAAC,EACjD,QACJ,CACA,IAAMe,EAAYC,GAAkB,CAC5BA,EAAQH,EAAU,WAGtBX,GAAe,KAAK,IAAIY,GAAcd,EAAU,CAAC,EACjDiB,EAAY,MAAM,eAAe,SAAUF,CAAQ,EACvD,EACAE,EAAY,MAAM,YAAY,SAAUF,CAAQ,CACpD,CACJ,CACJ,CAEO,SAASG,GAAWC,EAAe,CApD1C,IAAAC,EAqDID,EAAQ,OAAS,CACb,kBAAiBC,EAAAnB,GAAgB,QAAhB,YAAAmB,EAAuB,OAAQ,eAChD,eAAgBlB,GAAe,IAAIO,GAAE,CAvD7C,IAAAW,EAuDgD,QAAAA,EAAAX,EAAE,QAAF,YAAAW,EAAS,OAAQ,GAAE,EAAE,OAAOX,IAAKA,GAAA,YAAAA,EAAG,QAAS,CAAC,CAC1F,CACJ,CAEO,SAASY,GAAWF,EAAe,CACtC,IAAMG,EAAcvB,GAAa,KAAKU,GAAE,CA5D5C,IAAAW,EA4D+C,OAAAX,EAAE,SAASW,EAAAD,EAAQ,SAAR,YAAAC,EAAgB,iBAAe,EACrFnB,GAAgB,IAAIqB,GAAevB,GAAa,EAAE,EAClDG,GAAe,QAAQ,CAACqB,EAAMC,IAAUD,GAAA,YAAAA,EAAM,IAAIvB,GAAW,KAAKyB,GAAM,CA9D5E,IAAAL,EAAAM,EA8D+E,OAAAD,EAAM,SAASC,GAAAN,EAAAD,EAAQ,SAAR,YAAAC,EAAgB,iBAAhB,YAAAM,EAAiCF,IAAM,EAAE,CACvI,CAgBO,IAAMG,GAAN,KAAY,CAKf,YAAYC,EAAmB,CAJ/BC,EAAA,KAAgB,QAChBA,EAAA,KAAgB,YAChBA,EAAA,KAAgB,YAChBA,EAAA,KAAgB,QAnFpB,IAAAT,EAqFQ,KAAK,KAAOQ,EAAK,KACjB,KAAK,SAAWA,EAAK,SACrB,KAAK,SAAWA,EAAK,SACrB,KAAK,OAAOR,EAAAQ,EAAK,OAAL,YAAAR,EAAW,IAAIX,GAAK,IAAIqB,GAASrB,CAAC,KAAM,CAAC,CACzD,CACA,IAAI,YAAa,CAAE,MAAO,SAAS,KAAK,MAAQ,CACpD,EAEasB,GAAN,cAA0BJ,EAAM,CAInC,YAAYC,EAAyB,CACjC,MAAMA,CAAI,EAHdC,EAAA,KAAgB,eAChBA,EAAA,KAAgB,wBAGZ,KAAK,YAAcD,EAAK,YACxB,KAAK,qBAAuBA,EAAK,oBACrC,CAEA,QAAS,CAvGb,IAAAR,EAwGQY,GAAM,gBAAeZ,EAAAW,GAAY,SAAZ,YAAAX,EAAoB,UAAU,EACnDW,GAAY,OAAS,KAErBC,GAAM,IAAI,CAAC,IAAIC,GAAa,CAAE,KAAM,uBAAwB,UAAW,OAAQ,MAAO,KAAK,oBAAqB,CAAC,CAAC,EAAG,KAAK,UAAU,EACpID,GAAM,IAAI,CAAC,IAAIC,GAAa,CAAE,KAAM,cAAe,UAAW,OAAQ,MAAO,KAAK,WAAY,CAAC,CAAC,EAAG,KAAK,UAAU,EAClHD,GAAM,IAAI,CAAC,IAAIC,GAAa,CAAE,KAAM,iBAAkB,UAAW,OAAQ,MAAO,KAAK,QAAS,CAAC,CAAC,EAAG,KAAK,UAAU,EAElH,KAAK,KAAK,QAAQxB,GAAKuB,GAAM,IAAIvB,EAAE,MAAO,KAAK,UAAU,CAAC,CAC9D,CACJ,EApBaC,GAANqB,GACHF,EADSnB,GACF,UAqBJ,IAAME,GAAN,cAAwBe,EAAM,CAEjC,YAAYC,EAAuB,CAC/B,MAAMA,CAAI,EAFdC,EAAA,KAAgB,gBAGZ,KAAK,aAAeD,EAAK,YAC7B,CACJ,ECrGA,IAAqBM,GAArB,KAA0B,CAStB,aAAc,CARdC,EAAA,KAAO,UAAmB,IAE1BA,EAAA,KAAQ,YAAY,IAAI,KACxBA,EAAA,KAAQ,gBAAgB,IAAI,KAC5BA,EAAA,KAAQ,SAAS,GACjBA,EAAA,KAAQ,aAAa,GACrBA,EAAA,KAAQ,UAAU,GAClBA,EAAA,KAAQ,cAAc,EAGtB,CAEA,UAAUC,EAAoBC,EAAmB,CAC7C,IAAMC,EAAK,KAAK,UACVC,EAAqB,CAAE,SAAAH,EAAU,KAAM,EAAG,GAAAE,EAAI,QAAAD,CAAQ,EAC5D,YAAK,UAAU,IAAIC,EAAIC,CAAQ,EACxBD,CACX,CAEA,cAAcF,EAAoB,CAC9B,IAAME,EAAK,KAAK,cACVC,EAAyB,CAAE,SAAAH,EAAU,GAAAE,CAAG,EAC9C,YAAK,cAAc,IAAIA,EAAIC,CAAQ,EAC5BD,CACX,CAEA,YAAYA,EAAY,CACpB,KAAK,UAAU,OAAOA,CAAE,CAC5B,CAEA,gBAAgBA,EAAW,CACvB,KAAK,cAAc,OAAOA,CAAE,CAChC,CAEA,OAAQ,CACJ,KAAK,UAAU,MAAM,EACrB,KAAK,QAAU,EACnB,CAEA,OAAQ,CACA,KAAK,UAGT,KAAK,QAAU,GACf,KAAK,UAAU,EACf,KAAK,mBAAmB,EAC5B,CAEA,MAAO,CACH,KAAK,QAAU,GACf,aAAa,KAAK,MAAM,EACxB,qBAAqB,KAAK,YAAc,CAAC,CAC7C,CAEQ,WAAY,CAChB,IAAIE,EAAY,EACZC,EAAM,YAAY,IAAI,EACpBC,EAAO,IAAM,CACf,aAAa,KAAK,MAAM,EACxB,KAAK,OAAS,OAAO,WAAW,IAAM,CAClC,IAAIC,EAAO,YAAY,IAAI,EAAIF,EAAMD,EAErC,IADAC,EAAM,YAAY,IAAI,EACfE,GAAQ,IACXA,GAAQ,GAER,KAAK,UAAU,QAAQJ,GAAY,CAtFvD,IAAAK,EAuFwBL,EAAS,MAAQ,GACjB,IAAIM,IAAKD,EAAAL,EAAS,UAAT,YAAAK,EAAkB,uBAAwB,EAC/CL,EAAS,KAAOM,IAChBN,EAAS,SAAS,GAAkB,EACpCA,EAAS,MAAQM,GAAMN,EAAS,KAExC,CAAC,EAELC,EAAYG,EACZD,EAAK,CACT,EAAG,EAAiB,CACxB,EACAA,EAAK,CACT,CAEQ,oBAAqB,CACzB,IAAID,EAAM,YAAY,IAAI,EACpBC,EAAO,IAAM,CACf,IAAIC,EAAO,YAAY,IAAI,EAAIF,EAC/BA,EAAM,YAAY,IAAI,EACtB,IAAMK,EAAKH,EAAO,IAClB,QAAWJ,KAAY,KAAK,cAAc,OAAO,EAC7CA,EAAS,SAASO,CAAE,EAGxB,KAAK,WAAa,sBAAsBJ,CAAI,CAChD,EACA,KAAK,WAAa,sBAAsBA,CAAI,CAChD,CACJ,EC9GA,IAAMK,GAAsB,WAEtBC,GAAqBC,EAAU,6CAA6C,EAC5EC,GAAeD,EAAU,qBAAqB,EAC9CE,GAAeF,EAAU,uBAAwBC,EAAY,EAC7DE,GAAgBH,EAAU,2BAA4BC,EAAY,EAClEG,GAAgBJ,EAAU,2BAA4BC,EAAY,EAClEI,GAAcL,EAA6B,sBAAuBC,EAAY,EAEpFI,GAAY,iBAAiB,QAAS,IAAMC,GAAc,CAAC,EAC3D,IAAMC,GAAe,IAAMC,IAAkBC,EAAY,MAAM,IAAI,EAAI,GACjEC,GAAe,IAAMC,GAAS,OAAOC,GAAKA,EAAE,QAAQ,EAAE,OAAO,CAACC,EAAGC,IAAMD,GAAKC,EAAE,OAAQ,CAAC,EAEzFH,GACAH,GACG,SAASO,GAAKC,EAA2B,CAC5C,GAAG,EAACA,EAGJ,CAAAL,GAAW,CAAC,EACZH,GAAiB,EAEjB,QAAWS,KAAeD,EAAK,YAAa,CACxC,IAAME,EAAU,IAAIC,GAAQF,CAAW,EACvCN,GAAS,KAAKO,CAAO,CACzB,CAKA,GAHAhB,GAAa,gBAAgB,GAAGS,GAAS,IAAIC,GAAKA,EAAE,OAAO,CAAC,EAC5DQ,GAAW,EAERJ,EAAK,SAAW,EAAE,CACjB,IAAMK,EAAYC,GAAkB,CAC7BA,GAASN,EAAK,WACbjB,GAAmB,UAAU,OAAO,QAAQ,EAC5CU,EAAY,MAAM,eAAe,SAAUY,CAAQ,EAE3D,EACAZ,EAAY,MAAM,YAAY,SAAUY,CAAQ,CACpD,CAEAZ,EAAY,MAAM,YAAY,SAAUa,GAAS,CAC7CX,GAAS,QAAQC,GAAKA,EAAE,UAAU,CAAC,EACd,KAAK,MAAML,GAAa,GAAKC,GAAiBc,EAAQ,EAAE,EAAI,GAE7EC,GAAqBxB,GAAoB,OAAO,EAEpDqB,GAAW,CACf,CAAC,EAEL,CAEA,SAASd,IAAgB,CACrBK,GAAS,OAAOC,GAAKA,EAAE,QAAQ,EAAE,QAAQA,GAAKA,EAAE,SAAS,CAAC,EAC1DQ,GAAW,CACf,CAEA,SAASA,IAAa,CAClB,IAAMI,EAAYjB,GAAa,EACzBkB,EAAYf,GAAa,EACzBgB,EAAOF,EAAYC,EAEzBrB,GAAc,YAAcoB,EAAU,QAAQ,EAC9CrB,GAAc,YAAcsB,EAAU,QAAQ,EAE9C,QAAWP,KAAWP,GACbO,EAAQ,UACTA,EAAQ,QAAQ,gBAAgB,WAAYA,EAAQ,OAASQ,CAAI,EAErER,EAAQ,QAAQ,UAAU,OAAO,WAAYA,EAAQ,QAAQ,CAErE,CAEO,SAASS,GAAaC,EAAY,CACrCA,EAAK,SAAW,CACZ,KAAMjB,GAAS,OAAOC,GAAKA,EAAE,QAAQ,EAAE,IAAIA,IAChC,CACH,MAAOD,GAAS,QAAQC,CAAC,EACzB,KAAMA,EAAE,IAAI,IAChB,EACH,CACL,CACJ,CAEO,SAASiB,GAAaD,EAAY,CACrC,IAAME,EAAgBF,EAAK,SAC3B,GAAG,CAACE,EAAc,CACdnB,GAAS,QAAQC,GAAKA,EAAE,SAAS,CAAC,EAClC,MACJ,CACckB,EAAc,KAAK,MAAMlB,GACnBD,GAASC,EAAE,OACZ,IAAI,OAASA,EAAE,IACjC,IAEGkB,EAAc,KAAK,QAAQlB,GAAK,CACZD,GAASC,EAAE,OACnB,OAAO,CACnB,CAAC,EACDQ,GAAW,EAEnB,CAGA,IAAMD,GAAN,KAAc,CAOV,YAAYF,EAAsE,CANlFc,EAAA,KAAS,YACTA,EAAA,KAAS,UACTA,EAAA,KAAS,OACTA,EAAA,KAAS,WACTA,EAAA,KAAQ,aACRA,EAAA,KAAQ,UAEJ,KAAK,SAAWd,EAAY,SAC5B,KAAK,OAASA,EAAY,OAC1B,KAAK,IAAM,IAAIe,GAASf,EAAY,GAAG,EACvC,KAAK,QAAU,KAAK,cAAc,EAClC,KAAK,OAAS,KAAK,SAAW,EAC9B,KAAK,QAAQ,UAAU,OAAO,SAAU,KAAK,MAAM,EACnD,KAAK,UAAY,EACrB,CAEA,IAAI,UAAW,CAAE,OAAO,KAAK,SAAW,CAExC,WAAY,CACJ,CAAC,KAAK,QAAUR,EAAY,MAAM,IAAI,EAAI,KAAK,WAGnD,KAAK,OAAS,GACd,KAAK,QAAQ,UAAU,OAAO,QAAQ,EACtCc,GAAqBxB,GAAoB,OAAO,EAChDwB,GAAqB,KAAK,QAAS,WAAW,EAClD,CAEA,QAAS,CACL,KAAK,UAAY,GACjBU,GAAM,IAAI,KAAK,IAAI,KAAK,EAAE,MAAOnC,GAAY,OAAO,IAAKa,GAAS,QAAQ,IAAI,EAAE,QAAQ,CAAC,CAAC,CAC9F,CAEA,UAAW,CACP,KAAK,UAAY,GACjBsB,GAAM,eAAenC,GAAY,OAAO,IAAKa,GAAS,QAAQ,IAAI,EAAE,QAAQ,CAAC,CAAC,CAClF,CAEQ,QAAS,CACT,KAAK,UACL,KAAK,SAAS,EAEd,KAAK,OAAO,CAEpB,CACQ,eAAgB,CACpB,IAAMuB,EAAK,SAAS,cAAc,IAAI,EACtC,OAAAA,EAAG,UAAU,IAAI,cAAe,SAAS,EACzCA,EAAG,mBAAmB,YAAa,QAAQ,KAAK,IAAI,YAAY,EAChEA,EAAG,mBAAmB,YAAa,QAAQ,KAAK,cAAc,EAC9DA,EAAG,iBAAiB,QAAS,IAAM,CAC/B,KAAK,OAAO,EACZd,GAAW,CACf,CAAC,EACMc,CACX,CACJ,ECzJO,IAAMC,GAAiB,CAC1B,QAAS,CACL,KAAM,6CACN,SAAWC,GAAoB,IAAIC,GAAe,EAAE,eAAeD,EAAK,UAAU,OAAO,EACzF,YAAcA,GAAoB,IAAIE,GAAQ,EAAE,YAAYF,EAAK,UAAU,QAASG,GAAwB,CAAC,CAAC,EAAE,OACpH,EACA,uBAAwB,CACpB,KAAM,8EACN,SAAWH,GAAoB,IAAIC,GAAe,EAAE,eAAeD,EAAK,UAAU,OAAO,EAAE,gBAAgBA,EAAK,UAAU,QAAS,UAAU,EAC7I,YAAcA,GAAoB,IAAIE,GAAQ,EAAE,YAAYF,EAAK,UAAU,QAAS,UAAU,EAAE,YAAYA,EAAK,UAAU,QAASG,GAAwB,CAAC,CAAC,EAAE,OACpK,EACA,mBAAoB,CAChB,KAAM,0EACN,SAAWH,GAAoB,IAAIC,GAAe,EAAE,eAAeD,EAAK,UAAU,OAAO,EAAE,gBAAgBA,EAAK,UAAU,QAAS,MAAM,EACzI,YAAcA,GAAoB,IAAIE,GAAQ,EAAE,YAAYF,EAAK,UAAU,QAAS,MAAM,EAAE,YAAYA,EAAK,UAAU,QAASG,GAAwB,CAAC,CAAC,EAAE,OAChK,EACA,uBAAwB,CACpB,KAAM,8EACN,SAAWH,GAAoB,IAAIC,GAAe,EAAE,eAAeD,EAAK,UAAU,OAAO,EAAE,gBAAgBA,EAAK,UAAU,QAAS,UAAU,EAC7I,YAAcA,GAAoB,IAAIE,GAAQ,EAAE,YAAYF,EAAK,UAAU,QAAS,UAAU,EAAE,YAAYA,EAAK,UAAU,QAASG,GAAwB,CAAC,CAAC,EAAE,OACpK,EACA,4BAA4B,CACxB,KAAM,wEACN,SAAWH,GAAoB,IAAIC,GAAe,EAAE,iBAAiBD,EAAK,WAAW,EAAE,eAAeA,EAAK,UAAU,OAAO,EAC5H,YAAcA,GAAoB,CAC9B,IAAMI,EAAO,CAAC,GAAGJ,EAAK,UAAU,OAAO,EAAE,IAAIK,GAAKA,EAAE,KAAK,CAAC,EAAE,OAAO,CAACC,EAAGC,KAC/DP,EAAK,YAAY,KAAKK,GAAKA,IAAME,CAAC,IAClCA,EAAE,QAAU,IAEhBD,EAAE,KAAKC,CAAC,EACDD,GACR,CAAC,CAAmB,EACvB,OAAO,IAAIJ,GAAQ,EAAE,YAAYE,EAAMD,GAAwB,CAAC,CAAC,EAAE,OACvE,CACJ,EACA,2BAA4B,CACxB,KAAM,uEACN,SAAWH,GAAoB,IAAIC,GAAe,EAAE,iBAAiBD,EAAK,WAAW,EAAE,eAAeA,EAAK,UAAU,OAAO,EAC5H,YAAcA,GAAoB,CAC9B,IAAMI,EAAO,CAAC,GAAGJ,EAAK,UAAU,OAAO,EAAE,IAAIK,GAAKA,EAAE,KAAK,CAAC,EAAE,OAAO,CAACC,EAAGC,KAC/DP,EAAK,YAAY,KAAKK,GAAKA,IAAME,CAAC,IAClCA,EAAE,QAAU,KAEhBD,EAAE,KAAKC,CAAC,EACDD,GACR,CAAC,CAAmB,EACvB,OAAO,IAAIJ,GAAQ,EAAE,YAAYE,EAAMD,GAAwB,CAAC,CAAC,EAAE,OACvE,CACJ,EACA,UAAW,CACP,KAAM,wBACN,SAAWH,GAAoB,IAAIC,GAAe,EAAE,oBAAoBD,EAAK,WAAW,EAAE,eAAeA,EAAK,UAAU,OAAO,EAC/H,YAAcA,GAAoB,IAAIE,GAAQF,EAAK,WAAW,EAAE,OAAOA,EAAK,UAAU,OAAO,EAAE,OACnG,EACA,YAAa,CACT,KAAM,4BACN,SAAWA,GAAoB,IAAIC,GAAe,EAAE,eAAeD,EAAK,UAAU,OAAO,EAAE,oBAAoBA,EAAK,WAAW,EAAE,uBAAuBA,EAAK,YAAaA,EAAK,UAAU,QAAS,UAAU,EAC5M,YAAcA,GAAoB,IAAIE,GAAQF,EAAK,WAAW,EAAE,YAAYA,EAAK,UAAU,QAAS,UAAU,EAAE,OACpH,EACA,QAAS,CACL,KAAM,wBACN,SAAWA,GAAoB,IAAIC,GAAe,EAAE,eAAeD,EAAK,UAAU,OAAO,EAAE,oBAAoBA,EAAK,WAAW,EAAE,uBAAuBA,EAAK,YAAaA,EAAK,UAAU,QAAS,MAAM,EACxM,YAAcA,GAAoB,IAAIE,GAAQF,EAAK,WAAW,EAAE,YAAYA,EAAK,UAAU,QAAS,MAAM,EAAE,OAChH,EACA,YAAa,CACT,KAAM,4BACN,SAAWA,GAAoB,IAAIC,GAAe,EAAE,eAAeD,EAAK,UAAU,OAAO,EAAE,oBAAoBA,EAAK,WAAW,EAAE,uBAAuBA,EAAK,YAAaA,EAAK,UAAU,QAAS,UAAU,EAC5M,YAAcA,GAAoB,IAAIE,GAAQF,EAAK,WAAW,EAAE,YAAYA,EAAK,UAAU,QAAS,UAAU,EAAE,OACpH,EACA,aAAc,CACV,KAAM,2BACN,SAAWA,GAAoB,IAAIC,GAAe,EAAE,iBAAiBD,EAAK,WAAW,EACrF,YAAcA,GAAoB,IAAIE,GAAQF,EAAK,WAAW,EAAE,aAAa,EAAE,OACnF,EACA,sBAAuB,CACnB,KAAM,yDACN,SAAWA,GAAoB,IAAIC,GAAe,EAAE,iBAAiBD,EAAK,WAAW,EAAE,eAAeA,EAAK,UAAU,OAAO,EAC5H,YAAcA,GAAoB,IAAIE,GAAQF,EAAK,WAAW,EAAE,aAAa,EAAE,OAAOA,EAAK,UAAU,OAAO,EAAE,OAClH,EACA,wBAAyB,CACrB,KAAM,6DACN,SAAWA,GAAoB,IAAIC,GAAe,EAAE,iBAAiBD,EAAK,WAAW,EAAE,gBAAgBA,EAAK,UAAU,QAAS,UAAU,EAAE,uBAAuBA,EAAK,YAAaA,EAAK,UAAU,QAAS,UAAU,EACtN,YAAcA,GAAoB,IAAIE,GAAQF,EAAK,WAAW,EAAE,aAAa,EAAE,YAAYA,EAAK,UAAU,QAAS,UAAU,EAAE,OACnI,EACA,oBAAqB,CACjB,KAAM,yDACN,SAAWA,GAAoB,IAAIC,GAAe,EAAE,iBAAiBD,EAAK,WAAW,EAAE,gBAAgBA,EAAK,UAAU,QAAS,MAAM,EAAE,uBAAuBA,EAAK,YAAaA,EAAK,UAAU,QAAS,MAAM,EAC9M,YAAcA,GAAoB,IAAIE,GAAQF,EAAK,WAAW,EAAE,aAAa,EAAE,YAAYA,EAAK,UAAU,QAAS,MAAM,EAAE,OAC/H,EACA,wBAAyB,CACrB,KAAM,6DACN,SAAWA,GAAoB,IAAIC,GAAe,EAAE,iBAAiBD,EAAK,WAAW,EAAE,gBAAgBA,EAAK,UAAU,QAAS,UAAU,EAAE,uBAAuBA,EAAK,YAAaA,EAAK,UAAU,QAAS,UAAU,EACtN,YAAcA,GAAoB,IAAIE,GAAQF,EAAK,WAAW,EAAE,aAAa,EAAE,YAAYA,EAAK,UAAU,QAAS,UAAU,EAAE,OACnI,CACJ,EAGMC,GAAN,KAAqB,CAEjB,aAAc,CADdO,EAAA,cAAmB,CAAC,GAEhB,KAAK,OAAS,CAAC,CACnB,CAEA,oBAAoBC,EAA6B,CAC7C,OAAIA,EAAY,QAAU,GACtB,KAAK,OAAO,KAAK,qCAAqC,EAEnD,IACX,CAEA,iBAAiBA,EAA6B,CAC1C,OAAIA,EAAY,SAAW,GACvB,KAAK,OAAO,KAAK,uBAAuB,EAErC,IACX,CAEA,uBAAuBA,EAA6BC,EAA0BC,EAAkB,CAE5F,OADqBD,EAAS,OAAOL,GAAE,CAnI/C,IAAAO,EAmIkD,QAAAA,EAAAP,EAAE,OAAF,YAAAO,EAAQ,SAASD,KAAQ,CAACF,EAAY,KAAKI,GAAKA,EAAE,QAAQR,CAAC,CAAC,EAAC,EACtF,SAAW,GACxB,KAAK,OAAO,KAAK,gBAAgBM,uBAAyB,EAEvD,IACX,CAEA,eAAeF,EAA6B,CACxC,OAAIA,EAAY,SAAW,GACvB,KAAK,OAAO,KAAK,wBAAwB,EAEtC,IACX,CAEA,gBAAgBA,EAA6BE,EAAkB,CAC3D,OAAKF,EAAY,KAAKJ,GAAE,CAlJhC,IAAAO,EAkJmC,OAAAA,EAAAP,EAAE,OAAF,YAAAO,EAAQ,SAASD,GAAI,GAC5C,KAAK,OAAO,KAAK,2CAA2CA,GAAK,EAE9D,IACX,CACJ,EAEMT,GAAN,KAAc,CAEV,YAAYQ,EAA2B,CAAC,EAAG,CAD3CF,EAAA,gBAEI,KAAK,QAAU,CAAC,GAAGE,CAAQ,CAC/B,CAEA,OAAOD,EAA6B,CAChC,YAAK,QAAQ,KAAK,GAAG,KAAK,aAAaA,EAAa,KAAK,QAAS,CAAC,CAAC,EAC7D,IACX,CACA,YAAYA,EAA6BE,EAAkB,CACvD,OAAAF,EAAcA,EAAY,OAAOJ,GAAE,CApK3C,IAAAO,EAoK8C,OAAAA,EAAAP,EAAE,OAAF,YAAAO,EAAQ,SAASD,GAAI,EAC3D,KAAK,QAAQ,KAAK,GAAG,KAAK,aAAaF,EAAa,KAAK,QAAS,CAAC,CAAC,EAC7D,IACX,CAEA,YAAYA,EAA6BK,EAAe,CACpD,YAAK,QAAQ,KAAK,GAAG,KAAK,aAAaL,EAAa,KAAK,QAASK,CAAK,CAAC,EACjE,IACX,CAEA,cAAe,CACX,IAAMC,EAAc,KAAK,eAAe,EAAG,KAAK,QAAQ,MAAM,EAC9D,YAAK,QAAQ,OAAOA,EAAa,CAAC,EAC3B,IACX,CAEQ,aAAaN,EAA6BO,EAA6B,CAAC,EAAGF,EAAe,CAC9F,IAAMG,EAA8B,CAAC,EACrC,QAASC,EAAI,EAAGA,EAAIJ,EAAOI,IAAK,CAC5B,IAAMC,EAAU,CAAC,GAAGF,EAAa,GAAGD,CAAU,EAC9CP,EAAcA,EAAY,OAAOJ,GAAK,CAACc,EAAQ,KAAKN,GAAKR,EAAE,eAAiBQ,EAAE,YAAY,CAAC,EAC3F,IAAIO,EAAYX,EAAY,OAAO,CAACH,EAAGC,IAAMD,GAAKC,EAAE,OAAQ,CAAC,EACvDc,EAAS,KAAK,OAAO,EAAID,EAC/B,QAAWE,KAAOb,EAEd,GADAW,GAAaE,EAAI,OACbF,GAAaC,EAAQ,CACrB,IAAME,EAAOD,EAAI,KAAK,EACtBC,EAAK,MAAM,QAAQlB,GAAKA,EAAE,eAAe,CAAC,EAC1CY,EAAY,KAAKM,CAAI,EACrB,KACJ,CAER,CACA,OAAON,CACX,CAEQ,eAAeO,EAAaC,EAAa,CAC7C,OAAO,KAAK,MAAM,KAAK,OAAO,GAAKA,EAAMD,GAAOA,CAAG,CACvD,CACJ,EAEMrB,GAA0B,CAACuB,EAAS,IAAM,CAC5C,IAAMC,EAAkB,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,EAAE,EAAE,MAAMD,EAAQ,CAAC,EAC1DE,EAAMD,EAAgB,OAAO,CAAC,EAAGpB,IAAM,EAAIA,CAAC,EAC1Cc,EAAS,KAAK,OAAO,EAAIO,EAC/B,QAASV,EAAI,EAAGA,EAAIS,EAAgB,OAAQT,IAExC,GADAU,GAAOD,EAAgBT,GACnBU,GAAOP,EACP,OAAOH,EAAI,EAGnB,MAAM,MAAM,CAChB,EC1MA,IAAMW,GAAYC,EAAU,kBAAkB,EACxCC,GAAoBD,EAAU,uBAAwBD,EAAS,EAC/DG,GAAmBF,EAAU,oBAAqBD,EAAS,EAE3DI,GAAmBH,EAAU,sBAAuBD,EAAS,EAC7DK,GAAmBJ,EAAU,aAAcG,EAAgB,EAC3DE,GAAoBL,EAAU,cAAeG,EAAgB,EAC7DG,GAAsBN,EAAU,qBAAsBG,EAAgB,EACtEI,GAAcP,EAAU,4BAA6BD,EAAS,EAC9DS,GAAwBR,EAAU,oBAAqBO,EAAW,EAGlEE,GAAiBT,EAAU,qBAAsBD,EAAS,EAC1DW,GAAcV,EAAU,4BAA6BS,EAAc,EAGnEE,GAAkBX,EAAU,0CAA0C,EAC5EI,GAAiB,iBAAiB,QAAS,IAAM,CAAiBQ,GAAgB,aAAc,CAAC,CAAC,EAAU,KAAK,CAAG,CAAC,EACrHP,GAAkB,iBAAiB,QAAS,IAAG,CAhC/C,IAAAQ,EAgCkD,OAAAA,EAAAC,GAAO,SAAP,YAAAD,EAAe,OAAM,EAEvEb,EAAU,8BAA+BO,EAAW,EAAE,iBAAiB,QAAS,IAAG,CAlCnF,IAAAM,EAkCsF,OAAAA,EAAAC,GAAO,SAAP,YAAAD,EAAe,QAAO,EAC5Gb,EAAU,+BAAgCO,EAAW,EAAE,iBAAiB,QAAS,IAAG,CAnCpF,IAAAM,EAmCuF,OAAAA,EAAAC,GAAO,SAAP,YAAAD,EAAe,SAAQ,EAE9Gb,EAAU,8BAA+BO,EAAW,EAAE,iBAAiB,QAAS,IAAM,CAAEA,GAAY,UAAU,IAAI,QAAQ,CAAG,CAAC,EAC9HP,EAAU,+BAAgCO,EAAW,EAAE,iBAAiB,QAAS,IAAM,CAAEA,GAAY,UAAU,IAAI,QAAQ,CAAG,CAAC,EAC/HP,EAAU,+BAAgCO,EAAW,EAAE,iBAAiB,QAAS,IAAM,CAAEA,GAAY,UAAU,IAAI,QAAQ,CAAG,CAAC,EAE/HG,GAAY,iBAAiB,QAAS,IAAMK,GAAa,CAAC,EAE1DC,GAAmBjB,GAAW,IAAM,CAAEkB,GAAgB,CAAE,CAAC,EAEzD,IAAMC,GAAsB,IAAMC,GAAO,OAAOC,GAAKA,EAAE,UAAYC,EAAY,MAAM,IAAI,CAAC,EAAE,IAAID,GAAKA,EAAE,EAAE,EAErGE,GACAC,GACAJ,GACAK,GAGG,SAASC,GAAKC,EAAwB,CASzC,GAPAJ,GAAc,CAAC,EACfC,GAAQ,CAAC,EACTJ,GAAS,CAAC,EAEVK,IAAA,MAAAA,GAAS,QAAQJ,GAAKA,EAAE,OAAO,GAC/BI,GAAU,CAAC,EAEP,EAACE,EAIL,SAAWC,KAAYD,EAAK,UAAU,QAClC,QAASE,EAAI,EAAGA,EAAID,EAAS,OAAQC,IAAK,CACtC,IAAMC,EAAUF,EAASC,GACzBN,GAAY,KAAK,IAAIQ,GAAaD,EAASF,CAAQ,CAAC,CACxD,CAkBJ,GAfAI,GAAeL,EAAK,QAAQ,EAC5BM,GAAaN,EAAK,SAAS,EAE3Bd,GAAgB,MAAO,OAAO,KAAKqB,EAAc,EAAgB,EAAI,EAErEC,GAAwB,EAExBX,GAAM,GAAG,QAAQ,MAAM,EAEvBF,EAAY,MAAM,YAAY,MAAQc,GAAkBhB,GAAO,QAAQiB,GAASA,EAAM,UAAUD,CAAK,CAAC,CAAC,EACvGd,EAAY,KAAK,YAAY,SAAU,IAAM,CACzCJ,GAAgB,EAChBoB,GAAkB,CACtB,CAAC,EAEGX,EAAK,SAAW,EAAG,CACnB,IAAMY,EAAYH,GAAkB,CAC5BT,EAAK,UAAYS,IACjBd,EAAY,MAAM,eAAe,SAAUiB,CAAQ,EACnD3B,GAAgB,UAAU,OAAO,QAAQ,EACzC4B,GAAqB5B,GAAiB,WAAW,EAEzD,EACAU,EAAY,MAAM,YAAY,SAAUiB,CAAQ,CACpD,MACI3B,GAAgB,UAAU,OAAO,QAAQ,EAEjD,CAEA,SAASoB,GAAeS,EAAoB,CACxC,QAAWC,KAAYD,EAAU,CAC7B,IAAME,EAAO,IAAIC,GAAKF,CAAQ,EAG9B,GAFAlB,GAAM,KAAKmB,CAAI,EAEXA,EAAK,UAAY,EAAG,CACpBA,EAAK,QAAQ,UAAU,OAAO,QAAQ,EACtC,QACJ,CACA,IAAMJ,EAAYH,GAAkB,CAC5BM,EAAS,UAAYN,IACrBO,EAAK,QAAQ,UAAU,OAAO,QAAQ,EACtCH,GAAqB5B,GAAiB,OAAO,EAC7C4B,GAAqBG,EAAK,QAAS,WAAW,EAC9CrB,EAAY,MAAM,eAAe,SAAUiB,CAAQ,EAE3D,EACAjB,EAAY,MAAM,YAAY,SAAUiB,CAAQ,CACpD,CACArC,GAAkB,gBAAgB,GAAGsB,GAAM,IAAIH,GAAKA,EAAE,OAAO,CAAC,CAClE,CAEA,SAASY,GAAaY,EAAsB,CA5H5C,IAAA/B,EA6HI,QAAWgC,KAAaD,EAAW,CAC/B,IAAMR,EAAQ,IAAIU,GAAMD,CAAS,EACjC1B,GAAO,KAAKiB,CAAK,EACjBA,EAAM,QAAQ,iBAAiB,QAAS,IAAM,CAC1CjB,GAAO,IAAIC,GAAKA,EAAE,OAAO,EAAE,QAAQ2B,GAAW,CAC1CA,EAAQ,UAAU,OAAO,WAAYA,IAAYX,EAAM,OAAO,CAClE,CAAC,EACDA,EAAM,OAAO,EACbC,GAAkB,CACtB,CAAC,CACL,CACArC,EAAU,oBAAqBS,EAAc,EAAE,gBAAgB,GAAGU,GAAO,IAAIC,GAAKA,EAAE,OAAO,CAAC,GAC5FP,EAAAM,GAAO,KAAKC,GAAK,CAACA,EAAE,MAAM,IAA1B,MAAAP,EAA6B,QACjC,CAEA,SAASD,GAAgBoC,EAAcC,EAAgBC,EAAY,GAAO,CACtE,IAAMC,EAAS,IAAIrC,GAAOkC,EAAMC,EAAKC,CAAS,EAC9C,OAAA5C,GAAoB,YAAY6C,EAAO,OAAO,EAC9CA,EAAO,OAAO,EACPA,CACX,CAEA,SAASjB,IAA0B,CAC/B,IAAMkB,EAAWjC,GAAO,IAAIC,GAAKA,EAAE,QAAQ,UAAU,EAAI,CAAgB,EACzEgC,EAAS,QAAQL,GAAW,CACxBA,EAAQ,iBAAiB,QAAS,IAAM,CACpCA,EAAQ,UAAU,OAAO,WAAY,CAACA,EAAQ,UAAU,SAAS,UAAU,CAAC,CAChF,CAAC,CACL,CAAC,EACDvC,GAAsB,gBAAgB,GAAG4C,CAAQ,CACrD,CAEA,SAASC,IAAoB,CA7J7B,IAAAxC,EA8JI,IAAIA,EAAA8B,GAAK,SAAL,MAAA9B,EAAa,KAAM,CACnB,IAAMuC,EAA4B,CAAC,EACnC,QAAWvB,KAAWc,GAAK,OAAO,KAAK,KAAKW,GAAS,IAAI,EAAG,CACxD,IAAMC,EAAO1B,EAAQ,KAEfkB,EAAU,SAAS,cAAc,IAAI,EAC3CA,EAAQ,UAAU,IAAI,YAAY,EAClCA,EAAQ,YAAcQ,EACtBH,EAAS,KAAKL,CAAO,CACzB,CACA7C,GAAiB,gBAAgB,GAAGkD,CAAQ,CAChD,CAEJ,CAEA,SAASnC,IAAkB,CA7K3B,IAAAJ,EA8KI,GAAI,CAACC,GAAO,OACR,OAEJ,IAAM0C,EAActC,GAAoB,EAClC+B,EAAMnC,GAAO,OAAO,IAAI,OAAOM,GAAKoC,EAAY,SAASpC,CAAC,CAAC,EACjED,GAAO,QAAQiB,GAAS,CACpB,IAAMqB,EAAYrB,EAAM,MAAQf,EAAY,KAAK,IAAI,EAC/CqC,EAAc1D,EAAU,cAAeoC,EAAM,OAAO,EAC1DsB,GAAA,MAAAA,EAAa,gBAAgB,yBAA0B,CAACD,GACxDrB,EAAM,QAAQ,UAAU,OAAO,SAAUA,EAAM,QAAU,CAACa,EAAI,SAASb,EAAM,EAAE,CAAC,CACpF,CAAC,EAC8B3B,GAAe,cAAc,uCAAuC,IAE/FI,EAAAJ,GAAe,cAA2B,8BAA8B,IAAxE,MAAAI,EAA2E,OAEnF,CAEA,SAAS8C,IAA6B,CAClC,MAAO,CACH,YAAahB,GAAK,OAAQ,KAC1B,UAAW,CACP,QAASrB,GAAY,OAAOF,GAAKA,EAAE,UAAYC,EAAY,MAAM,IAAI,CAAC,CAC1E,CACJ,CACJ,CAEA,SAASgB,IAAoB,CACzB,GAAI,CAACM,GAAK,OACN,OAGJ,IAAIiB,EAAM,GAEJC,EAAW5B,GAAea,GAAM,OAAO,IAC7C,GAAI,CAACe,EAAU,CACX,QAAQ,MAAM,kBAAkB,EAChC,MACJ,CACIxC,EAAY,KAAK,IAAI,EAAIyB,GAAM,OAAO,OACtCc,EAAM,gCAEV,IAAMf,EAAYc,GAAgB,EAC5BG,EAAYD,EAAS,SAAShB,CAAS,EACzCiB,EAAU,OAAO,OAAS,IAC1BF,EAAME,EAAU,OAAO,IAE3B9D,EAAU,uBAAwBS,EAAc,EAAE,YAAcmD,EAChE5D,EAAU,sBAAuBS,EAAc,EAAE,gBAAgB,WAAYmD,EAAI,OAAS,CAAC,CAC/F,CAEA,SAAS7C,IAAe,CACpB,GAAI,CAAC4B,GAAK,QAAU,CAACV,GAAea,GAAM,OAAO,IAC7C,OAGJ,IAAMe,EAAW5B,GAAea,GAAM,OAAO,IACvCD,EAAYc,GAAgB,EAClChB,GAAK,OAAO,KAAOkB,EAAS,YAAYhB,CAAS,EACjDxB,EAAY,KAAK,SAASyB,GAAM,OAAO,IAAI,EAE3CO,GAAkB,EAClBpC,GAAgB,CACpB,CAGA,IAAM8C,GAAN,KAAW,CAOP,YAAY,CAAE,KAAAf,EAAM,SAAAgB,CAAS,EAAuC,CALpEC,EAAA,KAAgB,QAChBA,EAAA,KAAgB,YAChBA,EAAA,KAAgB,WAChBA,EAAA,KAAQ,cACRA,EAAA,KAAQ,SAEJ,KAAK,KAAOjB,EACZ,KAAK,SAAWgB,EAChB,KAAK,MAAQ,CAAC,EACd,KAAK,QAAU,KAAK,cAAc,EAClC,KAAK,WAAa,UAAUhB,GAChC,CAEA,IAAI,MAAO,CAAE,OAAO,KAAK,KAAO,CAChC,IAAI,KAAKkB,EAAmB,CACxBC,GAAM,eAAe,KAAK,UAAU,EACpC,KAAK,MAAQD,EACbC,GAAM,IAAI,KAAK,KAAK,QAAQ/C,GAAKA,EAAE,KAAK,EAAG,KAAK,UAAU,CAC9D,CAEQ,eAAgB,CACpB,IAAM2B,EAAU,SAAS,cAAc,IAAI,EAC3C,OAAAA,EAAQ,UAAU,IAAI,cAAe,QAAQ,EAC7CA,EAAQ,YAAc,KAAK,KAC3BA,EAAQ,iBAAiB,QAAS,IAAM,CACpCgB,GAAK,OAAS,KACd9D,GAAkB,iBAAiB,IAAI,EAAE,QAAQmB,GAAK,CAClDA,EAAE,UAAU,OAAO,WAAYA,IAAM2B,CAAO,CAChD,CAAC,EACDM,GAAkB,EAClBhB,GAAkB,CACtB,CAAC,EACMU,CACX,CACJ,EApCMJ,GAANoB,GACIE,EADEtB,GACK,UAqCJ,IAAMb,GAAN,cAA2BwB,EAAS,CAMvC,YAAYc,EAAsBzC,EAAqB,CACnD,MAAMyC,EAAY,GAAG,EANzBH,EAAA,KAAiB,eACjBA,EAAA,KAAgB,YAChBA,EAAA,KAAO,UACPA,EAAA,KAAiB,cACjBA,EAAA,KAAiB,YAGb,KAAK,YAAcG,EACnB,KAAK,SAAWA,EAAY,SAC5B,KAAK,OAASA,EAAY,OAC1B,KAAK,WAAazC,EAAS,UAAUP,GAAKA,IAAMgD,CAAW,EAC3D,KAAK,SAAWzC,CACpB,CACA,IAAI,MAAO,CACP,IAAM0C,EAAQ,KAAK,SAAS,OAAOjD,GAAKA,EAAE,UAAYC,EAAY,MAAM,IAAI,CAAC,EAAE,OAAS,EACxF,OAAO,KAAK,IAAI,EAAGgD,EAAQ,KAAK,UAAU,CAC9C,CAEA,MAAqB,CACjB,OAAO,IAAIvC,GAAa,KAAK,YAAa,KAAK,QAAQ,CAC3D,CACJ,EAEMwC,GAAN,KAAY,CAOR,YAAY5C,EAA0D,CALtEuC,EAAA,KAAS,MACTA,EAAA,KAAS,YACTA,EAAA,KAAS,QACTA,EAAA,KAAS,WACTA,EAAA,KAAQ,UAAU,IAEd,KAAK,GAAKvC,EAAK,GACf,KAAK,SAAWA,EAAK,SACrB,KAAK,KAAOA,EAAK,KACjB,KAAK,QAAU,KAAK,cAAc,EAClC,KAAK,QAAU,KAAK,SAAW,CACnC,CAEA,IAAI,QAAS,CAAE,OAAO,KAAK,OAAS,CAEpC,UAAUS,EAAe,CACjB,KAAK,QAAUA,GAAS,KAAK,WAC7BI,GAAqB5B,GAAiB,OAAO,EAC7C4B,GAAqBzB,GAAO,QAAQ,QAAS,OAAO,EACpDyB,GAAqB,KAAK,QAAS,WAAW,EAC9CtB,GAAgB,EAChB,KAAK,QAAU,GAEvB,CAEA,QAAS,CACLqD,GAAM,OAAS,KACf,KAAK,QAAQ,MAAM,CACvB,CAEQ,eAAgB,CACpB,IAAMvB,EAAU,SAAS,cAAc,IAAI,EAC3CA,EAAQ,UAAU,IAAI,UAAW,cAAe,QAAQ,EACxD,IAAMQ,EAAOtB,GAAe,KAAK,IAAI,KAAK,QAAQ,WAAab,GACpD,SAASA,EAAE,UAAU,EAAGA,EAAE,OAAS,CAAC,UAC9C,EACD,OAAA2B,EAAQ,mBAAmB,YAAa,QAAQQ,SAAY,EAC5DR,EAAQ,mBAAmB,YAAa,iBAAiB,KAAK,SAAS,KAAK,UAAU,EACtFA,EAAQ,aAAa,gBAAiB,KAAK,EAAE,EACtCA,CACX,CACJ,EA3CMD,GAANwB,GACIL,EADEnB,GACK,UA4CX,IAAMyB,GAAN,KAAa,CAMT,YAAYvB,EAAcC,EAAiB,CAAC,EAAGC,EAAY,GAAO,CAHlEe,EAAA,KAAO,QACPA,EAAA,KAAO,OACPA,EAAA,KAAgB,WAEZ,KAAK,KAAOjB,EACZ,KAAK,IAAM,CAAC,GAAGC,CAAG,EACdC,IACAqB,GAAO,QAAU,MAErB,KAAK,QAAU,KAAK,cAAc,EAClC,KAAK,QAAQ,KAAK,IAAI,EACtB/C,GAAQ,KAAK,IAAI,CACrB,CAEA,IAAI,WAAY,CAAE,OAAO+C,GAAO,UAAY,IAAM,CAElD,OAAO,QAAS,CACZ,OAAO,IAAIA,GAAO,aAAc,CAAC,CAAC,CACtC,CAEA,QAAS,CACL,KAAK,QAAQ,MAAM,CACvB,CAEA,QAAQvB,EAAc,CAClB,KAAK,KAAOA,EAAK,QAAQ,iBAAkB,EAAE,EAC7C,KAAK,QAAQ,YAAc,KAAK,IACpC,CAEA,MAAO,CACH,KAAK,UAAU,CACnB,CAEA,QAAS,CA9Xb,IAAAnC,EAAA2D,EA+XQD,GAAO,OAAS,KACZ,KAAK,QAAQ,wBACZ1D,EAAA,KAAK,QAAQ,yBAAb,MAAAA,EAAqD,SAErD2D,EAAA,KAAK,QAAQ,qBAAb,MAAAA,EAAiD,QAEtD,KAAK,QAAQ,OAAO,EACpBhD,GAAUA,GAAQ,OAAOJ,GAAKA,IAAM,IAAI,EACxCH,GAAgB,CACpB,CAEA,OAAQ,CACJ,IAAM+B,EAAOhD,EAA4B,mBAAoBO,EAAW,EAAE,MAC1E,KAAK,QAAQyC,CAAI,EACjB,IAAMyB,EAAmBlE,GAAY,iBAAiB,4CAA4C,EAClG,KAAK,IAAM,MAAM,KAAKkE,CAAgB,EAAE,IAAIrD,GAAKA,EAAE,aAAa,eAAe,CAAC,EAChFH,GAAgB,CACpB,CAEQ,eAAgB,CACpB,IAAM8B,EAAU,SAAS,cAAc,IAAI,EAC3C,OAAAA,EAAQ,UAAU,IAAI,cAAe,QAAQ,EAC7CA,EAAQ,iBAAiB,QAAS,IAAM,CACpCwB,GAAO,OAAS,KAChBjE,GAAoB,iBAAiB,IAAI,EAAE,QAAQc,GAAK,CACpDA,EAAE,UAAU,OAAO,WAAYA,IAAM2B,CAAO,CAChD,CAAC,EACD1C,GAAkB,gBAAgB,WAAY,KAAK,SAAS,EAC5DY,GAAgB,CACpB,CAAC,EACDX,GAAoB,YAAYyC,CAAO,EAChCA,CACX,CAEQ,WAAY,CACfxC,GAAY,cAAc,kBAAkB,EAAuB,MAAQ,KAAK,KACjF,IAAMiD,EAActC,GAAoB,EACxCX,GAAY,iBAAiB,mCAAmC,EAAE,QAAQwC,GAAW,CACjF,IAAM2B,EAAK3B,EAAQ,aAAa,eAAe,EACzC4B,EAAS,CAACnB,EAAY,SAASkB,CAAE,EACvC3B,EAAQ,UAAU,OAAO,SAAU4B,CAAM,EACzC,IAAMC,EAAW,CAACD,GAAU,KAAK,IAAI,SAASD,CAAE,EAChD3B,EAAQ,UAAU,OAAO,WAAY6B,CAAQ,CACjD,CAAC,EACDrE,GAAY,UAAU,OAAO,QAAQ,CACzC,CACJ,EAnFMO,GAANyD,GACIN,EADEnD,GACK,UACPmD,EAFEnD,GAEK,WAmFJ,SAAS+D,GAAUC,EAAe,CACrCA,EAAQ,MAAQ,CACZ,MAAOvD,GAAM,IAAImB,IAAsD,CACnE,KAAMA,EAAK,KACX,QAASA,EAAK,KAAK,IAAIqC,IAAQ,CAC3B,KAAMA,EAAI,aACV,OAAQA,EAAI,MAAM,IAAIC,GAAQA,EAAK,KAAK,CAC5C,EAAE,CACN,EAAE,EACF,aAAcxD,GAAQ,OAAOJ,GAAK,CAACA,EAAE,SAAS,EAAE,IAAIA,IAAM,CAAE,KAAMA,EAAE,KAAM,IAAKA,EAAE,GAAI,EAAE,CAC3F,CACJ,CAEO,SAAS6D,GAAUH,EAAe,CA5bzC,IAAAjE,EAAA2D,EAAAU,EA8bI,GAAI,EAACJ,EAAQ,MAGb,CAAAtD,GAAQ,OAAOJ,GAAK,CAACA,EAAE,SAAS,EAAE,QAAQA,GAAKA,EAAE,OAAO,CAAC,EAEzD,QAAWqB,KAAYqC,EAAQ,MAAM,MAAO,CACxC,IAAMpC,EAAOnB,GAAM,KAAKH,GAAKA,EAAE,OAASqB,EAAS,IAAI,EACrD,GAAI,CAACC,EAAM,CACP,QAAQ,KAAK,kCAAmCD,EAAS,IAAI,EAC7D,QACJ,CACA,IAAM0C,EAAO,CAAC,EACd,QAAWtD,KAAWY,EAAS,QAAS,CACpC,IAAM2C,GAAevE,EAAAS,GAAY,KAAKF,GAAKS,EAAQ,OAAST,EAAE,YAAY,IAArD,YAAAP,EAAwD,OACzE,CAACuE,GAID,CADYA,EAAa,cAAcvD,EAAQ,MAAM,GAIzDsD,EAAK,KAAKC,CAAY,CAC1B,CACA1C,EAAK,KAAOyC,CAChB,CAEA,QAAWhC,KAAU2B,EAAQ,MAAM,aAC/B,IAAIhE,GAAOqC,EAAO,KAAMA,EAAO,GAAG,GAGtCqB,EAAAhD,GAAQ,KAAR,MAAAgD,EAAY,UACZU,EAAA3D,GAAM,KAAN,MAAA2D,EAAU,QAAQ,QACtB,CCpdA,IAAMG,GAA0B,CAC5B,CAAC,wBAAyB,IAAMC,EAAY,MAAM,IAAI,EAAE,QAAQ,CAAC,EACjE,CAAC,oBAAqB,IAAMC,GAAW,kBAAkB,IAAI,EAAE,QAAQ,CAAC,EACxE,CAAC,wBAAyB,IAAMA,GAAW,gBAAgB,IAAI,EAAE,QAAQ,CAAC,EAC1E,CAAC,iCAAkC,IAAMA,GAAW,yBAAyB,IAAI,EAAE,QAAQ,CAAC,EAC5F,CAAC,yBAA0B,IAAMA,GAAW,KAAK,IAAI,EAAE,QAAQ,CAAC,EAChE,CAAC,kCAAmC,IAAMA,GAAW,iBAAiB,IAAI,EAAE,QAAQ,CAAC,EACrF,CAAC,0BAA2B,IAAMA,GAAW,kBAAkB,IAAI,EAAE,QAAQ,CAAC,EAC9E,CAAC,4BAA6B,IAAMA,GAAW,kBAAkB,IAAI,EAAE,QAAQ,CAAC,CACpF,EACMC,GAAyB,SAAS,cAA2B,iDAAiD,EAE9GC,GAA8B,CAAC,EACjCC,GAAmB,GAEvBC,GAAmB,SAAS,cAAc,yBAAyB,EAAIC,EAAgB,EAEhF,SAASC,GAAKC,EAA+B,CAChDL,GAAa,OAAO,CAAC,EACrB,QAAWM,KAAQD,EAAK,KACpBL,GAAa,KAAK,IAAIO,GAAYD,CAAI,CAAC,EAS3C,GAPA,SAAS,cAAc,oBAAoB,EAAG,gBAAgB,GAAGN,GAAa,IAAIQ,GAAKA,EAAE,OAAO,CAAC,EAGjGC,GAAS,UAAU,IAAM,CACrBC,GAAqB,CACzB,EAAG,CAAE,qBAAsB,GAAK,CAAC,EAE9BL,EAAK,SAAW,EAAE,CACjB,IAAMM,EAAYC,GAAkB,CAC5BA,GAASP,EAAK,WACdR,EAAY,MAAM,eAAe,SAAUc,CAAQ,EACnDZ,GAAuB,UAAU,OAAO,QAAQ,EAChDc,GAAqBd,GAAwB,OAAO,EAE5D,EACAF,EAAY,MAAM,YAAY,SAAUc,CAAQ,CACpD,CACJ,CAEA,SAASD,IAAsB,CAC3BV,GAAa,QAAQc,GAAe,CACbA,EAAY,SAAS,GAEpCA,EAAY,SAAS,CAE7B,CAAC,CACL,CAEA,SAASX,GAAiBY,EAAkB,CACpCA,GACAf,GAAa,QAAQQ,GAAKA,EAAE,kBAAkB,CAAC,EAC/CP,GAAWQ,GAAS,UAAU,IAAMT,GAAa,QAAQQ,GAAKA,EAAE,kBAAkB,CAAC,EAC/E,CAAE,qBAAsB,GAAK,CAAC,GAElCC,GAAS,YAAYR,EAAQ,CAErC,CAEA,IAAMM,GAAN,KAAkB,CAQd,YAAYS,EAA+C,CAP3DC,EAAA,iBAAqB,IACrBA,EAAA,KAAiB,aACjBA,EAAA,KAAiB,cACjBA,EAAA,KAAiB,eACjBA,EAAA,KAAiB,eACjBA,EAAA,KAAiB,WACjBA,EAAA,KAAS,WA7Eb,IAAAC,EA+EQ,KAAK,YAAcF,EAAK,YAAY,QAAQ,QAAS,EAAE,EACvD,KAAK,QAAU,CAAC,IAAGA,GAAA,YAAAA,EAAM,UAAW,CAAC,CAAC,EAEtC,IAAMG,EAAYvB,GAAW,KAAKY,GAAKA,EAAE,GAAG,KAAKQ,EAAK,WAAW,CAAC,EAClE,GAAI,CAACG,EACD,MAAM,MAAM,gCAAgC,EAEhD,KAAK,UAAYA,EACjB,IAAMC,EAAQD,EAAU,GAAG,KAAKH,EAAK,WAAW,EAChD,KAAK,YAAc,OAAOI,EAAM,EAAE,EAClC,KAAK,YAAaF,EAAAF,EAAK,YAAY,MAAM,OAAO,IAA9B,YAAAE,EAAiC,MACnD,KAAK,QAAU,KAAK,cAAc,CACtC,CAEA,mBAAoB,CACZ,KAAK,YAGT,KAAK,QAAQ,cAAc,kBAAkB,EAAG,YAAc,KAAK,UAAU,GAAG,EACpF,CAEA,UAAW,CACP,GAAI,KAAK,UACL,OAEJ,IAAMG,EAAW,OAAO,KAAK,UAAU,GAAG,CAAC,EACvCC,EAAQ,GACZ,OAAI,KAAK,UAAU,GACfA,EAAQ,KAAK,UAAU,GAAGD,EAAU,KAAK,WAAW,EAEpDC,EAAQD,GAAY,KAAK,YAEtBC,CACX,CAEA,UAAW,CACP,KAAK,UAAY,GACjB,KAAK,eAAe,EACpB,KAAK,uBAAuB,EAC5B,KAAK,QAAQ,cAAc,KAAK,EAAG,gBAAgB,aAAc,KAAK,SAAS,EAC/ET,GAAqBd,GAAwB,OAAO,EACpDc,GAAqB,KAAK,QAAS,WAAW,CAClD,CAEQ,gBAAiB,CACrB,IAAMU,EAAY,KAAK,QAAQ,IAAIf,GAAK,IAAIgB,GAAShB,CAAC,CAAC,EACvDiB,GAAM,IAAIF,EAAU,QAAQf,GAAKA,EAAE,KAAK,EAAG,eAAiB,KAAK,WAAW,CAChF,CAEQ,wBAAyB,CAC7B,IAAMkB,EAAa,KAAK,QAAQ,cAAc,KAAK,EAC7CC,EAAYD,EAAW,UACvBE,EAAWD,EAAU,QAAQ,SAAS,EAC5CD,EAAW,UAAYC,EAAU,UAAUC,EAAW,CAAC,CAC3D,CAEQ,eAAgB,CACpB,IAAMC,EAAY,SAAS,cAAc,IAAI,EAC7CA,EAAU,UAAU,IAAI,aAAa,EACrC,IAAMC,EAAS,SAAS,cAAc,KAAK,EAK3C,GAJAD,EAAU,YAAYC,CAAM,EAC5BA,EAAO,UAAU,IAAI,QAAQ,EAC7BA,EAAO,mBAAmB,YAAa,QAAQ,KAAK,YAAY,UAAU,EAAG,KAAK,UAAU,8BAA8B,KAAK,UAAU,GAAG,YAAY,KAAK,YAAY,SAAS,UAAU,KAAK,YAAY,UAAU,KAAK,WAAa,KAAK,YAAY,SAAS,EAAE,MAAM,SAAS,EAEhR,KAAK,QAAQ,OAAS,EAAG,CACzB,IAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CF,EAAU,YAAYE,CAAO,EAC7BA,EAAQ,UAAU,IAAI,SAAS,EAC/B,QAAWC,KAAO,KAAK,QACnBD,EAAQ,mBAAmB,YAAa,2BAA2BC,EAAI,QAAQ,QAAS,EAAE,SAAS,EAEvGF,EAAO,mBAAmB,YAAa,SAAS,EAChDA,EAAO,iBAAiB,QAAS,IAAM,CACnCA,EAAO,gBAAgB,WAAW,CACtC,CAAC,CACL,CACA,OAAOD,CACX,CACJ,ECtJA,IAAMI,GAAiB,CAAC,WAAY,QAAS,cAAc,EAGpD,SAASC,GAAeC,EAAiB,CAC5C,IAAMC,EAAa,OAAO,YAAY,OAAO,QAAQD,CAAM,EAAE,OAAO,CAAC,CAACE,CAAG,IAAMF,EAAOE,IAAyBJ,GAAe,SAASI,CAAoB,CAAC,CAAC,EAC7J,QAAWA,KAAO,OAAO,KAAKD,CAAU,EACpC,GAAI,EAACA,EAAWC,GAGhB,OAAQA,EAAK,CACT,IAAK,WAAYC,GAAaF,EAAW,QAAQ,EAAG,MACpD,IAAK,QAASE,GAAUF,EAAW,KAAK,EAAG,MAC3C,IAAK,eAAgBE,GAAiBF,EAAW,YAAY,EAAG,KACpE,CAER,CAEO,SAASG,GAAeC,EAAc,CACzCC,GAAaD,CAAO,EACpBE,GAAUF,CAAO,CACrB,CAEO,SAASG,GAAeH,EAAc,CACzCI,GAAaJ,CAAO,EACpBK,GAAUL,CAAO,CACrB,CCkBA,eAAeM,IAAY,CACvB,IAAMC,EAAQ,MAAMC,GAAY,KAAiB,MAAM,EACvD,OAAKD,EAGE,IAAI,IAAI,OAAO,QAAQA,CAAI,CAAC,EAFxB,IAAI,GAGnB,CAEA,eAAsBE,GAASC,EAAiD,CAC5E,IAAIC,EAAM,MAAML,GAAU,EAEpBM,EAAUD,EAAI,IAAID,EAAK,EAAE,GAAK,CAChC,KAAMG,GAAA,GAAKH,EACf,EAEA,OAAAE,EAAQ,KAAK,YAAc,KAAK,IAAI,EAEpC,QAAQ,IAAIF,CAAI,EAChB,CAACI,GAAYC,GAAWC,GAAYC,GAChCC,EAAc,EAAE,QAAQC,GAAKA,EAAEP,CAAO,CAAC,EAE3CD,EAAI,IAAID,EAAK,GAAIE,CAAO,EAExBJ,GAAY,KAAK,OAAQ,OAAO,YAAYG,CAAG,CAAC,EAEzC,EACX,CAEA,eAAsBS,GAASC,EAAiB,CAC5C,IAAMC,EAAKD,EAAO,KAAK,GAEjBT,GADI,MAAMN,GAAU,GACN,IAAIgB,CAAE,EAC1B,OAAKV,GAKLS,EAAO,KAAOR,MAAA,GAAKQ,EAAO,MAAST,EAAQ,MAE3C,CAACW,GAAYC,GAAWC,GAAYC,GAAgBC,EAAc,EAAE,QAAQR,GAAKA,EAAEP,CAAO,CAAC,EAE3FgB,GAAY,EACL,KATH,QAAQ,IAAI,iBAAkBN,CAAE,EACzB,GASf,CAEA,eAAsBO,IAAqB,CACvC,GAAI,CAEA,MAAO,CAAC,GADI,MAAMvB,GAAU,CACd,EAAE,IAAIa,GAAKA,EAAE,EAAE,EAAE,KAAK,CAACW,EAAEC,IAAMA,EAAE,KAAK,YAAcD,EAAE,KAAK,WAAW,EAAE,EAC1F,OAASE,EAAP,CACE,QAAQ,MAAMA,CAAC,CACnB,CACJ,CC3FA,IAAMC,GAAWC,EAAU,SAAS,EACpCC,GAAaD,EAAU,gBAAiBD,EAAQ,EAAGC,EAAU,YAAaD,EAAQ,EAAGG,EAAW,EAGzF,IAAMC,GAAiB,IAAIC,GAE9BC,GAEJ,eAAsBC,GAAKC,EAAiB,CACxCF,GAAeE,EAEfJ,GAAS,MAAM,EAEfG,GAAUC,EAAO,OAAO,EACxBD,GAAWC,EAAO,MAAM,EACxBD,GAAWC,EAAO,MAAM,EAExBC,GAAeD,CAAM,EAErBJ,GAAS,UAAU,IAAM,CACrBM,GAAW,eAAe,IAAI,CAAC,CACnC,EAAG,CAAE,qBAAsB,GAAK,CAAC,EAEjCN,GAAS,UAAU,IAAM,CACrBO,GAASH,EAAO,IAAI,CACxB,EAAG,CAAE,qBAAsB,IAAO,EAAE,CAAC,EAErC,MAAMI,GAAY,EAElBC,GAAyB,EAGpBC,GAGDC,GAAgB,EAFhBX,GAAS,MAAM,EAInB,MAAMY,GAASR,CAAM,CACzB,CAGA,SAASO,IAAkB,CACpB,OAAQ,SAGX,OAAO,eAAe,OAAQ,KAAM,CAChC,MAAO,CACH,SAAWE,GAAcC,EAAY,MAAM,IAAID,CAAC,EAChD,QAAUA,GAAcC,EAAY,KAAK,IAAID,CAAC,EAC9C,KAAM,IAAM,CAAMX,IAAgBK,GAASL,GAAa,IAAI,CAAK,EACjE,KAAM,IAAM,CAAMA,IAAgBU,GAASV,EAAY,CAAK,CAChE,CACJ,CAAC,EAED,QAAQ,IAAI,gCAAgC,EAC5C,SAAS,iBAAiB,UAAWa,GAAK,CAClCA,EAAE,OAAS,UACPf,GAAS,SACT,SAAS,MAAQ,8BACjBA,GAAS,KAAK,IAEdA,GAAS,MAAM,EACf,SAAS,MAAQ,+BAG7B,CAAC,EACL,CC7EA,IAAAgB,GAAgB;o7JAIT,IAAMC,GAAiB,IAAI,GAAAC,QAAI,EAAE,QAAQC,EAAM,ECItD,IAAMC,GAAYC,EAAU,wBAAwB,EAC9CC,GAAaD,EAAU,yBAAyB,EAEhDE,GAAmBF,EAAU,iDAAiD,EACpFE,GAAiB,iBAAiB,QAAS,SAAY,CACnD,IAAMC,EAAKD,GAAiB,aAAa,SAAS,EAClD,GAAG,CAACC,EACA,OAEJ,IAAMC,EAAO,MAAMC,GAAY,KAAK,MAAM,EAC1C,OAAOD,EAAKD,GACZ,MAAME,GAAY,KAAK,OAAQD,CAAI,EACnCH,GAAW,MAAM,CACrB,CAAC,EAED,IAAMK,GAAqBN,EAAU,oBAAoB,EACnDO,GAAsBP,EAAU,oBAAoB,EACpDQ,GAAoBR,EAAU,eAAgBO,EAAmB,EAEjEE,GAAqB,IAAIC,GAE3BC,GAEJ,CAACZ,GAAWE,EAAU,EAAE,QAAQ,CAACW,EAAGC,EAAGC,IAAQ,CAC3CF,EAAE,iBAAiB,QAAS,SAAY,CACpCE,EAAI,QAAQC,GAAKA,EAAE,UAAU,OAAO,WAAYA,IAAMH,CAAC,CAAC,EACxD,IAAMI,EAAOJ,EAAE,aAAa,WAAW,EACvCK,GAAkBD,CAAI,CAC1B,CAAC,EACGH,IAAM,GACND,EAAE,MAAM,CAEhB,CAAC,EAED,eAAsBM,IAAO,CACzB,MAAMC,GAAY,CACtB,CAEA,eAAeA,IAAc,CACzB,IAAMC,EAAW,MAAMC,GAAmB,EAC1C,OAAKD,GAGL,MAAME,GAAYC,GAAAC,GAAA,GAAKJ,EAAS,MAAd,CAAoB,KAAM,MAAO,EAAC,EAC7C,IAHI,EAIf,CAEA,eAAeE,GAAYG,EAAoB,CAE3C,IAAMC,EAAS,MAAMC,GAAgBF,EAAM,MAAM,EACjD,GAAI,CAACC,EAAQ,CACT,QAAQ,MAAM,aAAa,EAC3B,MACJ,CACA,GAAI,CAACE,GAAeF,CAAM,EAAG,CACzB,QAAQ,MAAM,uBAAuB,EACrC,MACJ,CAEAA,EAAO,KAAO,CACV,KAAMD,EAAM,KACZ,YAAaA,EAAM,YACnB,OAAQA,EAAM,OACd,GAAIA,EAAM,GACV,UAAWA,EAAM,WAAa,KAAK,IAAI,CAC3C,EAEA,MAAMP,GAASQ,CAAM,EACrB,IAAMG,EAAM7B,EAAU,iCAAiC,EACvD,OAAA6B,EAAI,UAAU,OAAO,QAAQ,EAC7BA,EAAI,MAAM,EACH,EACX,CAEA,eAAeC,GAAWL,EAAoB,CAE1CzB,EAAU,eAAgBO,EAAmB,EAAE,YAAckB,EAAM,KACnEzB,EAAU,cAAeO,EAAmB,EAAE,YAAckB,EAAM,aAAe,GAEjFjB,GAAkB,oBAAoB,QAASG,EAAmB,EAClEA,GAAsB,SAAY,CAC9B,IAAMoB,EAAU,MAAMT,GAAYG,CAAK,CAI3C,EACAjB,GAAkB,iBAAiB,QAASG,EAAmB,CACnE,CAEA,eAAeM,GAAkBD,EAAiB,CAC9C,IAAMgB,EAAW,MAAMvB,GAAmB,qBAAqBO,CAAI,EAGnE,GAFAT,GAAoB,UAAU,OAAO,SAAUyB,EAAS,SAAW,CAAC,EAEhEA,EAAS,SAAW,EAAG,CACvB,IAAIC,EAAM,GACV,OAAQjB,EAAM,CACV,IAAK,MAAOiB,EAAM,oCAAqC,MACvD,IAAK,OAAQA,EAAM,sCAAuC,KAC9D,CACA3B,GAAmB,YAAc2B,EACjC,MACJ,CAEA/B,GAAiB,UAAU,OAAO,SAAUc,IAAS,MAAM,EAE3D,QAAWkB,KAAWF,EAClBE,EAAQ,iBAAiB,QAAS,IAAM,CACpCF,EAAS,QAAQpB,GAAKA,EAAE,UAAU,OAAO,WAAYA,IAAMsB,CAAO,CAAC,EACnE,IAAMT,EAAQhB,GAAmB,eAAe,EAChDgB,EAAM,KAAOT,EACbc,GAAWL,CAAK,CACpB,CAAC,EAELnB,GAAmB,gBAAgB,GAAG0B,CAAQ,EAE9CA,EAAS,GAAG,MAAM,CACtB,CAEA,eAAeL,GAAgBQ,EAA2C,CACtE,GAAI,CAEA,OADa,MAAO,MAAM,MAAMA,CAAG,GAAG,KAAK,CAE/C,OAAS,EAAP,CACE,QAAQ,MAAM,CAAC,CACnB,CACJ,CClIA,IAAMC,GAAoBC,EAAU,sBAAsB,EAE1DC,GAAaF,GAAkB,cAAgB,SAAS,KAAM,CAACG,EAAkBC,IAAyB,CAGtG,OAFAC,GAAYF,EAAKC,CAAO,EACXD,EAAI,aAAa,iBAAiB,EACjC,CACV,IAAK,OACDA,EAAI,YAAc,OAClBA,EAAI,aAAa,kBAAmB,MAAM,EAC1C,MACA,IAAK,OACLA,EAAI,YAAc,OAClBA,EAAI,aAAa,kBAAmB,MAAM,EAC1C,KACR,CACJ,CAAC,EAEDG,GAAK,EAEL,eAAeA,IAAO,CAElB,MAAMA,GAAS,EACf,SAAS,KAAK,UAAU,OAAO,QAAQ,CAC3C",
  "names": ["require_localforage", "__commonJSMin", "exports", "module", "f", "g", "define", "e", "t", "n", "r", "s", "o", "u", "a", "__require", "i", "l", "_dereq_", "global", "Mutation", "scheduleDrain", "called", "observer", "nextTick", "element", "channel", "scriptEl", "draining", "queue", "oldQueue", "len", "immediate", "task", "INTERNAL", "handlers", "REJECTED", "FULFILLED", "PENDING", "Promise", "resolver", "safelyResolveThenable", "onRejected", "onFulfilled", "promise", "unwrap", "QueueItem", "value", "func", "returnValue", "self", "result", "tryCatch", "getThen", "thenable", "error", "obj", "then", "onError", "onSuccess", "tryToUnwrap", "out", "resolve", "reject", "reason", "all", "iterable", "values", "resolved", "allResolver", "resolveFromAll", "outValue", "race", "response", "_typeof", "_classCallCheck", "instance", "Constructor", "getIDB", "idb", "isIndexedDBValid", "isSafari", "hasFetch", "createBlob", "parts", "properties", "Builder", "builder", "Promise$1", "executeCallback", "callback", "executeTwoCallbacks", "errorCallback", "normalizeKey", "key", "getCallback", "DETECT_BLOB_SUPPORT_STORE", "supportsBlobs", "dbContexts", "toString", "READ_ONLY", "READ_WRITE", "_binStringToArrayBuffer", "bin", "length", "buf", "arr", "_checkBlobSupportWithoutCaching", "txn", "blob", "matchedChrome", "matchedEdge", "_checkBlobSupport", "_deferReadiness", "dbInfo", "dbContext", "deferredOperation", "_advanceReadiness", "_rejectReadiness", "err", "_getConnection", "upgradeNeeded", "createDbContext", "dbArgs", "openreq", "db", "ex", "_getOriginalConnection", "_getUpgradedConnection", "_isUpgradeNeeded", "defaultVersion", "isNewStore", "isDowngrade", "isUpgrade", "incVersion", "_encodeBlob", "reader", "base64", "_decodeBlob", "encodedBlob", "arrayBuff", "_isEncodedBlob", "_fullyReady", "_tryReconnect", "forages", "forage", "createTransaction", "mode", "retries", "tx", "_initStorage", "options", "initPromises", "ignoreErrors", "j", "k", "getItem", "transaction", "store", "req", "iterate", "iterator", "iterationNumber", "cursor", "setItem", "blobSupport", "removeItem", "clear", "advanced", "keys", "dropInstance", "currentConfig", "isCurrentDb", "dbPromise", "newVersion", "dropObjectPromise", "_forage2", "dropDBPromise", "_forage", "asyncStorage", "isWebSQLValid", "BASE_CHARS", "BLOB_TYPE_PREFIX", "BLOB_TYPE_PREFIX_REGEX", "SERIALIZED_MARKER", "SERIALIZED_MARKER_LENGTH", "TYPE_ARRAYBUFFER", "TYPE_BLOB", "TYPE_INT8ARRAY", "TYPE_UINT8ARRAY", "TYPE_UINT8CLAMPEDARRAY", "TYPE_INT16ARRAY", "TYPE_INT32ARRAY", "TYPE_UINT16ARRAY", "TYPE_UINT32ARRAY", "TYPE_FLOAT32ARRAY", "TYPE_FLOAT64ARRAY", "TYPE_SERIALIZED_MARKER_LENGTH", "toString$1", "stringToBuffer", "serializedString", "bufferLength", "p", "encoded1", "encoded2", "encoded3", "encoded4", "buffer", "bytes", "bufferToString", "base64String", "serialize", "valueType", "marker", "fileReader", "str", "deserialize", "type", "blobType", "matcher", "localforageSerializer", "createDbTable", "_initStorage$1", "dbInfoPromise", "tryExecuteSql", "sqlStatement", "args", "results", "getItem$1", "iterate$1", "rows", "item", "_setItem", "retriesLeft", "originalValue", "sqlError", "setItem$1", "removeItem$1", "clear$1", "length$1", "key$1", "keys$1", "getAllStoreNames", "storeNames", "dropInstance$1", "operationInfo", "dropTable", "storeName", "operations", "webSQLStorage", "isLocalStorageValid", "_getKeyPrefix", "defaultConfig", "keyPrefix", "checkIfLocalStorageThrows", "localStorageTestKey", "_isLocalStorageUsable", "_initStorage$2", "clear$2", "getItem$2", "iterate$2", "keyPrefixLength", "key$2", "keys$2", "itemKey", "length$2", "removeItem$2", "setItem$2", "dropInstance$2", "localStorageWrapper", "sameValue", "x", "y", "includes", "array", "searchElement", "isArray", "arg", "DefinedDrivers", "DriverSupport", "DefaultDrivers", "DefaultDriverOrder", "OptionalDriverMethods", "LibraryMethods", "DefaultConfig", "callWhenReady", "localForageInstance", "libraryMethod", "_args", "extend", "_key", "LocalForage", "driverTypeKey", "driver", "driverName", "driverObject", "complianceError", "driverMethods", "driverMethodName", "isRequired", "configureMissingMethods", "methodNotImplementedFactory", "methodName", "_i", "_len", "optionalDriverMethod", "setDriverSupport", "support", "getDriverPromise", "serializerPromise", "drivers", "supportedDrivers", "setDriverToConfig", "extendSelfWithDriver", "initDriver", "currentDriverIndex", "driverPromiseLoop", "oldDriverSetDone", "libraryMethodsAndProperties", "localforage_js", "_CodeOrName", "exports", "Name", "s", "_Code", "code", "item", "_a", "c", "names", "_", "strs", "args", "i", "addCodeArg", "plus", "str", "expr", "safeStringify", "optimize", "arg", "interpolate", "res", "mergeExprItems", "a", "b", "strConcat", "c1", "c2", "x", "stringify", "getProperty", "key", "getEsmExportName", "regexpCode", "rx", "code_1", "ValueError", "name", "UsedValueState", "exports", "Scope", "prefixes", "parent", "nameOrPrefix", "prefix", "ng", "_b", "_a", "ValueScopeName", "nameStr", "value", "property", "itemIndex", "line", "ValueScope", "opts", "__spreadProps", "__spreadValues", "valueKey", "vs", "_name", "s", "keyOrRef", "scopeName", "values", "usedValues", "getCode", "valueCode", "code", "nameSet", "c", "def", "code_1", "scope_1", "code_2", "exports", "scope_2", "Node", "_names", "_constants", "Def", "varKind", "name", "rhs", "es5", "_n", "names", "constants", "optimizeExpr", "Assign", "lhs", "sideEffects", "__spreadValues", "addExprNames", "AssignOp", "op", "Label", "label", "Break", "Throw", "error", "AnyCode", "code", "ParentNode", "nodes", "opts", "i", "n", "subtractNames", "addNames", "BlockNode", "Root", "Else", "If", "condition", "cond", "e", "ns", "not", "_a", "For", "ForLoop", "iteration", "ForRange", "from", "to", "ForIter", "loop", "iterable", "Func", "args", "async", "Return", "Try", "_b", "Catch", "Finally", "CodeGen", "extScope", "__spreadProps", "prefix", "prefixOrName", "value", "keyOrRef", "scopeName", "nameOrPrefix", "constant", "_constant", "c", "keyValues", "key", "thenBody", "elseBody", "node", "forBody", "arr", "obj", "tryBody", "catchCode", "finallyCode", "body", "nodeCount", "len", "toClose", "funcBody", "N1", "N2", "expr", "replaceName", "canOptimize", "items", "x", "par", "andCode", "mappend", "and", "orCode", "or", "y", "codegen_1", "code_1", "toHash", "arr", "hash", "item", "exports", "alwaysValidSchema", "it", "schema", "checkUnknownRules", "schemaHasRules", "opts", "self", "rules", "key", "checkStrictMode", "schemaHasRulesButRef", "RULES", "schemaRefOrVal", "topSchemaRef", "schemaPath", "keyword", "$data", "unescapeFragment", "str", "unescapeJsonPointer", "escapeFragment", "escapeJsonPointer", "eachItem", "xs", "f", "x", "makeMergeEvaluated", "mergeNames", "mergeToName", "mergeValues", "resultToName", "gen", "from", "to", "toName", "res", "setEvaluated", "__spreadValues", "evaluatedPropsToName", "items", "ps", "props", "p", "snippets", "useFunc", "Type", "getErrorPath", "dataProp", "dataPropType", "jsPropertySyntax", "isNumber", "msg", "mode", "codegen_1", "names", "exports", "codegen_1", "util_1", "names_1", "exports", "keyword", "schemaType", "reportError", "cxt", "error", "errorPaths", "overrideAllErrors", "it", "gen", "compositeRule", "allErrors", "errObj", "errorObjectCode", "addError", "returnErrors", "reportExtraError", "resetErrorsCount", "errsCount", "extendErrors", "schemaValue", "data", "err", "i", "errs", "validateName", "schemaEnv", "E", "createErrors", "errorObject", "keyValues", "errorInstancePath", "errorSchemaPath", "extraErrorProps", "errorPath", "instancePath", "instPath", "errSchemaPath", "schemaPath", "parentSchema", "schPath", "params", "message", "opts", "propertyName", "topSchemaRef", "errors_1", "codegen_1", "names_1", "boolError", "topBoolOrEmptySchema", "it", "gen", "schema", "validateName", "falseSchemaError", "exports", "boolOrEmptySchema", "valid", "overrideAllErrors", "data", "cxt", "_jsonTypes", "jsonTypes", "isJSONType", "x", "exports", "getRules", "groups", "__spreadProps", "__spreadValues", "schemaHasRulesForType", "schema", "self", "type", "group", "shouldUseGroup", "exports", "rule", "shouldUseRule", "_a", "kwd", "rules_1", "applicability_1", "errors_1", "codegen_1", "util_1", "DataType", "exports", "getSchemaTypes", "schema", "types", "getJSONTypes", "ts", "coerceAndCheckDataType", "it", "gen", "data", "opts", "coerceTo", "coerceToTypes", "checkTypes", "wrongType", "checkDataTypes", "coerceData", "reportTypeError", "COERCIBLE", "coerceTypes", "t", "dataType", "coerced", "coerceSpecificType", "assignParentData", "parentData", "parentDataProperty", "expr", "checkDataType", "strictNums", "correct", "EQ", "cond", "numCond", "_cond", "dataTypes", "notObj", "typeError", "schemaValue", "cxt", "getTypeErrorContext", "schemaCode", "codegen_1", "util_1", "assignDefaults", "it", "ty", "properties", "items", "key", "assignDefault", "sch", "i", "exports", "prop", "defaultValue", "gen", "compositeRule", "data", "opts", "childData", "condition", "codegen_1", "util_1", "names_1", "util_2", "checkReportMissingProp", "cxt", "prop", "gen", "data", "it", "noPropertyInData", "exports", "checkMissingProp", "opts", "properties", "missing", "reportMissingProp", "hasPropFunc", "isOwnProperty", "property", "propertyInData", "ownProperties", "cond", "allSchemaProperties", "schemaMap", "p", "schemaProperties", "callValidateCode", "schemaCode", "topSchemaRef", "schemaPath", "errorPath", "func", "context", "passSchema", "dataAndSchema", "valCxt", "args", "newRegExp", "usePattern", "pattern", "u", "regExp", "rx", "validateArray", "keyword", "valid", "validArr", "validateItems", "notValid", "len", "i", "validateUnion", "schema", "sch", "schValid", "_sch", "schCxt", "codegen_1", "names_1", "code_1", "errors_1", "macroKeywordCode", "cxt", "def", "gen", "keyword", "schema", "parentSchema", "it", "macroSchema", "schemaRef", "useKeyword", "valid", "exports", "funcKeywordCode", "$data", "checkAsyncKeyword", "validate", "validateRef", "validateKeyword", "_a", "assignValid", "modifyData", "reportErrs", "ruleErrs", "validateAsync", "validateSync", "addErrs", "e", "validateErrs", "_await", "passCxt", "passSchema", "errors", "data", "errs", "schemaEnv", "result", "validSchemaType", "schemaType", "allowUndefined", "st", "validateKeywordUsage", "opts", "self", "errSchemaPath", "deps", "kwd", "msg", "codegen_1", "util_1", "getSubschema", "it", "keyword", "schemaProp", "schema", "schemaPath", "errSchemaPath", "topSchemaRef", "sch", "exports", "extendSubschemaData", "subschema", "dataProp", "dpType", "data", "dataTypes", "propertyName", "gen", "errorPath", "dataPathArr", "opts", "nextData", "dataContextProps", "_nextData", "extendSubschemaMode", "jtdDiscriminator", "jtdMetadata", "compositeRule", "createErrors", "allErrors", "require_fast_deep_equal", "__commonJSMin", "exports", "module", "equal", "a", "b", "length", "i", "keys", "key", "require_json_schema_traverse", "__commonJSMin", "exports", "module", "traverse", "schema", "opts", "cb", "pre", "post", "_traverse", "jsonPtr", "rootSchema", "parentJsonPtr", "parentKeyword", "parentSchema", "keyIndex", "key", "sch", "i", "prop", "escapeJsonPtr", "str", "util_1", "equal", "traverse", "SIMPLE_INLINED", "inlineRef", "schema", "limit", "hasRef", "countKeys", "exports", "REF_KEYWORDS", "key", "sch", "count", "getFullPath", "resolver", "id", "normalize", "normalizeId", "p", "_getFullPath", "TRAILING_SLASH_HASH", "resolveUrl", "baseId", "ANCHOR", "getSchemaRefs", "schemaId", "uriResolver", "schId", "baseIds", "pathPrefix", "localRefs", "schemaRefs", "jsonPtr", "_", "parentJsonPtr", "fullPath", "addRef", "addAnchor", "ref", "_resolve", "ambiguos", "schOrRef", "checkAmbiguosRef", "anchor", "sch1", "sch2", "boolSchema_1", "dataType_1", "applicability_1", "dataType_2", "defaults_1", "keyword_1", "subschema_1", "codegen_1", "names_1", "resolve_1", "util_1", "errors_1", "validateFunctionCode", "it", "isSchemaObj", "checkKeywords", "schemaCxtHasRules", "topSchemaObjCode", "validateFunction", "exports", "gen", "validateName", "schema", "schemaEnv", "opts", "body", "funcSourceUrl", "destructureValCxtES5", "destructureValCxt", "commentKeyword", "checkNoDefault", "resetEvaluated", "typeAndKeywords", "returnResults", "schId", "subschemaCode", "valid", "subSchemaObjCode", "self", "key", "updateContext", "checkAsyncSchema", "errsCount", "checkRefsAndKeywords", "schemaKeywords", "types", "checkedTypes", "errSchemaPath", "msg", "schemaPath", "rootName", "ValidationError", "assignEvaluated", "evaluated", "props", "items", "typeErrors", "data", "allErrors", "RULES", "keywordCode", "checkStrictTypes", "group", "groupKeywords", "iterateKeywords", "useDefaults", "rule", "checkContextTypes", "checkMultipleTypes", "checkKeywordTypes", "t", "includesType", "strictTypesError", "ts", "rules", "keyword", "type", "hasApplicableType", "schTs", "kwdT", "KeywordCxt", "def", "getData", "condition", "successAction", "failAction", "schemaCode", "append", "errorParams", "errorPaths", "cond", "obj", "assign", "codeBlock", "$dataValid", "schemaType", "wrong$DataType", "invalid$DataSchema", "st", "validateSchemaRef", "appl", "subschema", "nextContext", "__spreadProps", "__spreadValues", "schemaCxt", "toName", "ruleType", "cxt", "JSON_POINTER", "RELATIVE_JSON_POINTER", "$data", "dataLevel", "dataNames", "dataPathArr", "jsonPointer", "matches", "up", "errorMsg", "expr", "segments", "segment", "pointerType", "ValidationError", "errors", "exports", "resolve_1", "MissingRefError", "resolver", "baseId", "ref", "msg", "exports", "codegen_1", "validation_error_1", "names_1", "resolve_1", "util_1", "validate_1", "SchemaEnv", "env", "schema", "_a", "exports", "compileSchema", "sch", "_sch", "getCompilingSchema", "rootId", "es5", "lines", "ownProperties", "gen", "_ValidationError", "validateName", "schemaCxt", "sourceCode", "validateCode", "validate", "props", "items", "e", "resolveRef", "root", "baseId", "ref", "schOrFunc", "resolve", "schemaId", "inlineOrCompile", "schEnv", "sameSchemaEnv", "s1", "s2", "resolveSchema", "p", "refPath", "getJsonPointer", "id", "schOrRef", "schId", "PREVENT_SCOPE_CHANGE", "parsedRef", "part", "partSchema", "$ref", "merge", "sets", "_len", "_key", "length", "slice", "xl", "x", "join", "subexp", "str", "typeOf", "o", "undefined", "Object", "prototype", "toString", "call", "split", "pop", "shift", "toLowerCase", "toUpperCase", "toArray", "obj", "Array", "setInterval", "assign", "target", "source", "key", "buildExps", "isIRI", "ALPHA$$", "CR$", "DIGIT$$", "DQUOTE$$", "HEXDIG$$", "SP$$", "PCT_ENCODED$", "SUB_DELIMS$$", "RESERVED$$", "GEN_DELIMS$$", "UCSCHAR$$", "SCHEME$", "USERINFO$", "UNRESERVED$$", "DEC_OCTET$", "DEC_OCTET_RELAXED$", "H16$", "LS32$", "IPV4ADDRESS$", "IPV6ADDRESS1$", "IPV6ADDRESS2$", "IPV6ADDRESS3$", "IPV6ADDRESS4$", "IPV6ADDRESS5$", "IPV6ADDRESS6$", "IPV6ADDRESS7$", "IPV6ADDRESS8$", "IPV6ADDRESS9$", "ZONEID$", "IPV6ADDRESS$", "IP_LITERAL$", "IPV6ADDRZ_RELAXED$", "IPVFUTURE$", "HOST$", "REG_NAME$", "PORT$", "AUTHORITY$", "PCHAR$", "SEGMENT$", "SEGMENT_NZ$", "SEGMENT_NZ_NC$", "PATH_ABEMPTY$", "PATH_ABSOLUTE$", "PATH$", "PATH_NOSCHEME$", "PATH_ROOTLESS$", "PATH_EMPTY$", "QUERY$", "IPRIVATE$$", "FRAGMENT$", "HIER_PART$", "URI$", "RELATIVE_PART$", "RELATIVE$", "URI_REFERENCE$", "ABSOLUTE_URI$", "GENERIC_REF$", "RELATIVE_REF$", "ABSOLUTE_REF$", "SAMEDOC_REF$", "AUTHORITY_REF$", "RegExp", "URI_PROTOCOL", "IRI_PROTOCOL", "maxInt", "base", "tMin", "tMax", "skew", "damp", "initialBias", "initialN", "delimiter", "regexPunycode", "regexNonASCII", "regexSeparators", "errors", "baseMinusTMin", "floor", "Math", "stringFromCharCode", "String", "fromCharCode", "error", "type", "RangeError", "map", "array", "fn", "result", "mapDomain", "string", "parts", "replace", "labels", "encoded", "ucs2decode", "output", "counter", "value", "charCodeAt", "extra", "push", "ucs2encode", "fromCodePoint", "toConsumableArray", "basicToDigit", "codePoint", "digitToBasic", "digit", "flag", "adapt", "delta", "numPoints", "firstTime", "k", "decode", "input", "inputLength", "i", "n", "bias", "basic", "lastIndexOf", "j", "index", "oldi", "w", "t", "baseMinusT", "out", "splice", "encode", "_step", "_iteratorNormalCompletion", "_iterator", "currentValue", "basicLength", "handledCPCount", "m", "_step2", "_iteratorNormalCompletion2", "_iterator2", "handledCPCountPlusOne", "_step3", "_iteratorNormalCompletion3", "_iterator3", "q", "qMinusT", "toUnicode", "test", "toASCII", "punycode", "SCHEMES", "pctEncChar", "chr", "c", "e", "pctDecChars", "newStr", "il", "parseInt", "substr", "c2", "c3", "_normalizeComponentEncoding", "components", "protocol", "decodeUnreserved", "decStr", "match", "UNRESERVED", "scheme", "PCT_ENCODED", "NOT_SCHEME", "userinfo", "NOT_USERINFO", "host", "NOT_HOST", "path", "NOT_PATH", "NOT_PATH_NOSCHEME", "query", "NOT_QUERY", "fragment", "NOT_FRAGMENT", "_stripLeadingZeros", "_normalizeIPv4", "matches", "IPV4ADDRESS", "address", "_matches", "_normalizeIPv6", "IPV6ADDRESS", "_matches2", "zone", "reverse", "last", "_address$toLowerCase$2", "first", "firstFields", "lastFields", "isLastFieldIPv4Address", "fieldCount", "lastFieldsStart", "fields", "allZeroFields", "reduce", "acc", "field", "lastLongest", "longestZeroFields", "sort", "a", "b", "newHost", "newFirst", "newLast", "URI_PARSE", "NO_MATCH_IS_UNDEFINED", "parse", "uriString", "options", "iri", "reference", "port", "isNaN", "indexOf", "schemeHandler", "unicodeSupport", "domainHost", "_recomposeAuthority", "uriTokens", "_", "$1", "$2", "RDS1", "RDS2", "RDS3", "RDS5", "removeDotSegments", "im", "s", "Error", "serialize", "authority", "charAt", "absolutePath", "resolveComponents", "relative", "skipNormalization", "tolerant", "resolve", "baseURI", "relativeURI", "schemelessOptions", "normalize", "uri", "equal", "uriA", "uriB", "escapeComponent", "ESCAPE", "unescapeComponent", "handler", "secure", "http", "isSecure", "wsComponents", "resourceName", "_wsComponents$resourc2", "ws", "O", "ATEXT$$", "QTEXT$$", "VCHAR$$", "SOME_DELIMS$$", "NOT_LOCAL_PART", "NOT_HFNAME", "NOT_HFVALUE", "mailtoComponents", "to", "unknownHeaders", "headers", "hfields", "hfield", "toAddrs", "subject", "body", "addr", "toAddr", "atIdx", "localPart", "domain", "name", "URN_PARSE", "urnComponents", "nid", "nss", "urnScheme", "uriComponents", "UUID", "uuidComponents", "uuid", "https", "wss", "mailto", "urn", "uri", "exports", "validate_1", "exports", "codegen_1", "validation_error_1", "ref_error_1", "rules_1", "compile_1", "codegen_2", "resolve_1", "dataType_1", "util_1", "$dataRefSchema", "uri_1", "defaultRegExp", "str", "flags", "META_IGNORE_OPTIONS", "EXT_SCOPE_NAMES", "removedOptions", "deprecatedOptions", "MAX_EXPRESSION", "requiredOptions", "o", "s", "_optz", "_a", "optimize", "regExp", "_c", "_b", "uriResolver", "_d", "_f", "_e", "_h", "_g", "_k", "_j", "_m", "_l", "_p", "_o", "__spreadProps", "__spreadValues", "_q", "_r", "_s", "_t", "_u", "_v", "_w", "_x", "_y", "_z", "_0", "Ajv", "opts", "es5", "lines", "getLogger", "formatOpt", "checkOptions", "getMetaSchemaOptions", "addInitialFormats", "addInitialKeywords", "addInitialSchemas", "$data", "meta", "schemaId", "_dataRefSchema", "schemaKeyRef", "data", "v", "valid", "schema", "_meta", "sch", "loadSchema", "runCompileAsync", "_schema", "loadMetaSchema", "_compileAsync", "$ref", "e", "checkLoaded", "loadMissingSchema", "ref", "missingRef", "_loadSchema", "p", "key", "_validateSchema", "id", "throwOrLogError", "$schema", "message", "keyRef", "getSchEnv", "root", "cacheKey", "definitions", "def", "kwdOrDef", "keyword", "checkKeyword", "kwd", "addRule", "keywordMetaschema", "definition", "k", "t", "rule", "RULES", "group", "i", "name", "format", "errors", "separator", "dataVar", "text", "msg", "metaSchema", "keywordsJsonPointers", "rules", "jsonPointer", "segments", "keywords", "seg", "schemaOrData", "schemas", "regex", "baseId", "validateSchema", "addSchema", "localRefs", "currentOpts", "checkOpts", "options", "log", "opt", "optsSchemas", "defs", "metaOpts", "noLogs", "logger", "KEYWORD_NAME", "dataType", "post", "ruleGroup", "addBeforeRule", "before", "_rule", "$dataRef", "def", "exports", "ref_error_1", "code_1", "codegen_1", "names_1", "compile_1", "util_1", "def", "cxt", "gen", "$ref", "it", "baseId", "env", "validateName", "opts", "self", "root", "callRootRef", "schOrEnv", "callValidate", "inlineRefSchema", "callRef", "rootName", "sch", "v", "getValidate", "schName", "valid", "schCxt", "exports", "$async", "allErrors", "passCxt", "callAsyncRef", "callSyncRef", "addEvaluatedFrom", "e", "addErrorsFrom", "source", "errs", "schEvaluated", "_a", "props", "items", "id_1", "ref_1", "core", "exports", "codegen_1", "ops", "KWDs", "error", "keyword", "schemaCode", "def", "cxt", "data", "exports", "codegen_1", "error", "schemaCode", "def", "cxt", "gen", "data", "it", "prec", "res", "invalid", "exports", "ucs2length", "str", "len", "length", "pos", "value", "exports", "codegen_1", "util_1", "ucs2length_1", "error", "keyword", "schemaCode", "comp", "def", "cxt", "data", "it", "op", "len", "exports", "code_1", "codegen_1", "error", "schemaCode", "def", "cxt", "data", "$data", "schema", "it", "u", "regExp", "exports", "codegen_1", "error", "keyword", "schemaCode", "comp", "def", "cxt", "data", "op", "exports", "code_1", "codegen_1", "util_1", "error", "missingProperty", "def", "cxt", "gen", "schema", "schemaCode", "data", "$data", "it", "opts", "useLoop", "allErrorsMode", "exitOnErrorMode", "props", "definedProperties", "requiredKey", "schemaPath", "msg", "loopAllRequired", "prop", "missing", "valid", "loopUntilMissing", "exports", "codegen_1", "error", "keyword", "schemaCode", "comp", "def", "cxt", "data", "op", "exports", "equal", "exports", "dataType_1", "codegen_1", "util_1", "equal_1", "error", "i", "j", "def", "cxt", "gen", "data", "$data", "schema", "parentSchema", "schemaCode", "it", "valid", "itemTypes", "validateUniqueItems", "canOptimize", "loopN", "loopN2", "t", "item", "wrongType", "indices", "eql", "outer", "exports", "codegen_1", "util_1", "equal_1", "error", "schemaCode", "def", "cxt", "gen", "data", "$data", "schema", "exports", "codegen_1", "util_1", "equal_1", "error", "schemaCode", "def", "cxt", "gen", "data", "$data", "schema", "it", "useLoop", "eql", "getEql", "valid", "loopEnum", "vSchema", "_x", "i", "equalCode", "v", "sch", "exports", "limitNumber_1", "multipleOf_1", "limitLength_1", "pattern_1", "limitProperties_1", "required_1", "limitItems_1", "uniqueItems_1", "const_1", "enum_1", "validation", "exports", "codegen_1", "util_1", "error", "len", "def", "cxt", "parentSchema", "it", "items", "validateAdditionalItems", "gen", "schema", "data", "keyword", "valid", "validateItems", "i", "exports", "codegen_1", "util_1", "code_1", "def", "cxt", "schema", "it", "validateTuple", "extraItems", "schArr", "gen", "parentSchema", "data", "keyword", "checkStrictTuple", "valid", "len", "sch", "i", "opts", "errSchemaPath", "l", "fullTuple", "msg", "exports", "items_1", "def", "cxt", "exports", "codegen_1", "util_1", "code_1", "additionalItems_1", "error", "len", "def", "cxt", "schema", "parentSchema", "it", "prefixItems", "exports", "codegen_1", "util_1", "error", "min", "max", "def", "cxt", "gen", "schema", "parentSchema", "data", "it", "minContains", "maxContains", "len", "cond", "valid", "validateItems", "validateItemsWithCount", "schValid", "count", "checkLimits", "_valid", "block", "i", "exports", "codegen_1", "util_1", "code_1", "exports", "property", "depsCount", "deps", "property_ies", "missingProperty", "def", "cxt", "propDeps", "schDeps", "splitDependencies", "validatePropertyDeps", "validateSchemaDeps", "schema", "propertyDeps", "schemaDeps", "key", "gen", "data", "it", "missing", "prop", "hasProperty", "depProp", "keyword", "valid", "schCxt", "codegen_1", "util_1", "error", "params", "def", "cxt", "gen", "schema", "data", "it", "valid", "key", "exports", "code_1", "codegen_1", "names_1", "util_1", "error", "params", "def", "cxt", "gen", "schema", "parentSchema", "data", "errsCount", "it", "allErrors", "opts", "props", "patProps", "checkAdditionalProperties", "key", "additionalPropertyCode", "isAdditional", "definedProp", "propsSchema", "p", "deleteAdditional", "valid", "applyAdditionalSchema", "errors", "subschema", "exports", "validate_1", "code_1", "util_1", "additionalProperties_1", "def", "cxt", "gen", "schema", "parentSchema", "data", "it", "allProps", "prop", "properties", "p", "valid", "hasDefault", "applyPropertySchema", "exports", "code_1", "codegen_1", "util_1", "util_2", "def", "cxt", "gen", "schema", "data", "parentSchema", "it", "opts", "patterns", "alwaysValidPatterns", "p", "checkProperties", "valid", "props", "validatePatternProperties", "pat", "checkMatchingProperties", "validateProperties", "prop", "key", "alwaysValid", "exports", "util_1", "def", "cxt", "gen", "schema", "it", "valid", "exports", "code_1", "def", "exports", "codegen_1", "util_1", "error", "params", "def", "cxt", "gen", "schema", "parentSchema", "it", "schArr", "valid", "passing", "schValid", "validateOneOf", "sch", "i", "schCxt", "exports", "util_1", "def", "cxt", "gen", "schema", "it", "valid", "sch", "schCxt", "exports", "codegen_1", "util_1", "error", "params", "def", "cxt", "gen", "parentSchema", "it", "hasThen", "hasSchema", "hasElse", "valid", "schValid", "validateIf", "ifClause", "validateClause", "schCxt", "keyword", "schema", "exports", "util_1", "def", "keyword", "parentSchema", "it", "exports", "additionalItems_1", "prefixItems_1", "items_1", "items2020_1", "contains_1", "dependencies_1", "propertyNames_1", "additionalProperties_1", "properties_1", "patternProperties_1", "not_1", "anyOf_1", "oneOf_1", "allOf_1", "if_1", "thenElse_1", "getApplicator", "draft2020", "applicator", "exports", "codegen_1", "error", "schemaCode", "def", "cxt", "ruleType", "gen", "data", "$data", "schema", "it", "opts", "errSchemaPath", "schemaEnv", "self", "validate$DataFormat", "validateFormat", "fmts", "fDef", "fType", "format", "unknownFmt", "invalidFmt", "callFormat", "validData", "formatDef", "unknownFormat", "fmtType", "fmtRef", "getFormat", "validCondition", "unknownMsg", "fmtDef", "code", "fmt", "exports", "format_1", "format", "exports", "exports", "core_1", "validation_1", "applicator_1", "format_1", "metadata_1", "draft7Vocabularies", "exports", "DiscrError", "exports", "codegen_1", "types_1", "compile_1", "util_1", "error", "discrError", "tagName", "tag", "def", "cxt", "gen", "data", "schema", "parentSchema", "it", "oneOf", "valid", "validateMapping", "mapping", "getMapping", "tagValue", "applyTagSchema", "schemaProp", "_valid", "schCxt", "oneOfMapping", "topRequired", "hasRequired", "tagRequired", "i", "sch", "propSch", "_a", "addMappings", "required", "addMapping", "exports", "core_1", "draft7_1", "discriminator_1", "draft7MetaSchema", "META_SUPPORT_DATA", "META_SCHEMA_ID", "Ajv", "v", "metaSchema", "module", "exports", "validate_1", "codegen_1", "validation_error_1", "ref_error_1", "avg", "a", "b", "randomRange", "min", "max", "clamp", "value", "min", "max", "isLocalHost", "queryHTML", "selectors", "parent", "element", "registerTabs", "btnsParent", "contentsParent", "callback", "btns", "btn", "x", "targetAttr", "target", "tabCallback", "content", "_a", "highlightHTMLElement", "trigger", "attr", "listener", "import_localforage", "saveManager_default", "save", "load", "type", "object", "saveBlob", "e", "blob", "loadBlob", "key", "str", "localforage", "activeEntry", "ConfigEntryHandler", "__publicField", "NewEntryHandler", "SavedEntryHandler", "type", "configList_default", "x", "__spreadProps", "__spreadValues", "entries", "elements", "entry", "element", "suffix", "blob", "saveManager_default", "a", "b", "timeText", "queryHTML", "startTime", "ms", "hours", "mins", "EventEmitter", "__publicField", "callback", "opts", "instance", "args", "_a", "x", "key", "value", "Value", "defaultValue", "__publicField", "EventEmitter", "v", "_a", "_b", "x", "type", "callback", "StatModifierFlags", "modTemplates", "Modifier", "text", "__publicField", "match", "desc", "x", "statTemplate", "groups", "v1", "v2", "min", "max", "value", "StatModifier", "i", "_a", "a", "b", "other", "values", "data", "ModDB", "EventEmitter", "statMods", "source", "DamageTypeFlags", "damageNamesMetaTable", "names", "length", "a", "v", "i", "flagList", "key", "value", "s", "calcAttack", "statModList", "config", "StatModifierFlags", "randomRange", "hitChance", "calcModTotal", "hitFac", "hit", "baseDamage", "calcBaseDamage", "critChance", "critFac", "crit", "critMultiplier", "finalMultiplier", "calcModBase", "totalDamage", "totalPhysicalDamage", "conversionTable", "generateConversionTable", "output", "totalBaseDamage", "min", "max", "calcDamage", "damageType", "damageFlag", "addMin", "addMax", "damageTypes", "type", "convMulti", "baseMin", "baseMax", "modNames", "calcModIncMore", "damageTypeFlagKeys", "globalConv", "skillConv", "add", "globalTotal", "skillTotal", "j", "otherDamageType", "convertedToName", "fac", "conversionValues", "skillConvValue", "addValue", "calcPlayerStats", "statModList", "config", "StatModifierFlags", "avg", "hitChance", "calcModTotal", "clampedHitChance", "clamp", "attackSpeed", "baseDamageMultiplier", "calcModBase", "maxMana", "manaRegen", "attackManaCost", "critChance", "clampedCritChance", "critMulti", "critDamageMultiplier", "baseDamageResult", "calcBaseDamage", "multiplier", "dps", "calcModIncMore", "modName", "calcModSum", "calcModInc", "calcModMore", "base", "inc", "more", "valueType", "name", "result", "hasFlag", "a", "b", "filteredModList", "x", "mod", "value", "healthBar", "queryHTML", "enemies", "activeEnemy", "index", "onDeath", "EventEmitter", "init", "data", "health", "Enemy", "Dummy", "dealDamage", "amount", "spawnEnemyAt", "level", "clamp", "saveEnemy", "saveObj", "loadEnemy", "save", "savedEnemy", "maxHealth", "__publicField", "pct", "enemy_default", "visibilityObserver", "element", "callback", "observer", "observe", "entries", "entry", "Statistic", "Value", "defaultValue", "hidden", "__publicField", "statistics", "statistics_default", "updateId", "visibilityObserver", "handleUpdateLoop", "visible", "key", "value", "updateGameStatistics", "gameLoop", "createStatisticsElements", "elements", "createField", "element", "label", "getFormatType", "_a", "valueZero", "date", "str", "saveStatistics", "saveObj", "loadStatistics", "x", "playerStatsContainer", "manaBar", "statsUpdateId", "modDB", "ModDB", "updateStats", "enemy_default", "playerStats", "enemies", "Value", "init", "playerData", "x", "queryHTML", "curMana", "maxMana", "updatemanaBar", "Modifier", "gameLoop", "amount", "statistics_default", "dt", "manaRegen", "startAutoAttack", "setup", "resolve", "statsResult", "calcPlayerStats", "attr", "stat", "numDecimals", "pct", "deltaTotal", "attackSpeed", "manaCost", "performAttack", "result", "calcAttack", "savePlayer", "saveObj", "loadPlayer", "playerSave", "Modal", "__publicField", "queryHTML", "data", "skills", "_a", "_b", "_c", "_d", "_e", "_f", "skillSlotNames", "x", "elements", "skill", "element", "isUsed", "selectedSkill", "attackSpeedElement", "baseDamageMultiplierElement", "baseDurationElement", "AttackSkill", "BuffSkill", "modElements", "mod", "modElement", "modal", "Modal", "SkillSlot", "__publicField", "skill", "name", "queryHTML", "AttackSkillSlot", "attackSkills", "_a", "element", "BuffSkillSlot", "skills", "playerStats", "calcDuration", "time", "pct", "duration", "loopId", "updateTime", "modDB", "x", "startLoops", "gameLoop", "dt", "stop", "attackSkills", "buffSkills", "attackSkillSlot", "buffSkillSlots", "attackSkillContainer", "buffSkillList", "init", "data", "a", "b", "x", "AttackSkill", "AttackSkillSlot", "BuffSkill", "skillSlot", "BuffSkillSlot", "listener", "level", "playerStats", "saveSkills", "saveObj", "_a", "loadSkills", "attackSkill", "slot", "index", "skill", "_b", "Skill", "args", "__publicField", "Modifier", "_AttackSkill", "modDB", "StatModifier", "Loop", "__publicField", "callback", "options", "id", "instance", "remainder", "now", "loop", "diff", "_a", "ms", "dt", "SOURCE_NAME", "passivesMenuButton", "queryHTML", "passivesPage", "passivesList", "curPointsSpan", "maxPointsSpan", "clearButton", "clearPassives", "getMaxPoints", "pointsPerLevel", "playerStats", "getCurPoints", "passives", "x", "a", "c", "init", "data", "passiveData", "passive", "Passive", "updateList", "listener", "level", "highlightHTMLElement", "maxPoints", "curPoints", "diff", "savePassives", "save", "loadPassives", "savedPassives", "__publicField", "Modifier", "modDB", "li", "craftTemplates", "data", "CraftValidator", "Crafter", "generateReforgeModCount", "mods", "x", "a", "c", "__publicField", "itemModList", "itemMods", "tag", "_a", "y", "count", "randomIndex", "filterMods", "newItemMods", "i", "tempArr", "weightSum", "random", "mod", "copy", "min", "max", "offset", "REFORGE_WEIGHTS", "sum", "itemsPage", "queryHTML", "itemListContainer", "modListContainer", "presetsContainer", "presetNewElement", "presetEditElement", "presetListContainer", "presetModal", "presetsModalCraftList", "craftContainer", "craftButton", "itemsMenuButton", "createNewPreset", "_a", "Preset", "performCraft", "visibilityObserver", "updateCraftList", "getFilteredCraftIds", "crafts", "x", "playerStats", "generalMods", "items", "presets", "init", "data", "modGroup", "i", "itemMod", "ItemModifier", "createItemList", "createCrafts", "craftTemplates", "createPresetModalCrafts", "level", "craft", "updateCraftButton", "listener", "highlightHTMLElement", "itemList", "itemData", "item", "Item", "craftList", "craftData", "Craft", "element", "name", "ids", "isDefault", "preset", "elements", "updateItemModList", "Modifier", "desc", "filteredIds", "canAfford", "costElement", "createCraftData", "msg", "template", "validator", "_Item", "levelReq", "__publicField", "v", "modDB", "itemModData", "count", "_Craft", "_Preset", "_b", "selectedElements", "id", "hidden", "selected", "saveItems", "saveObj", "mod", "stat", "loadItems", "_c", "mods", "itemModifier", "validators", "playerStats", "statistics_default", "achievementsMenuButton", "achievements", "updateId", "visibilityObserver", "handleUpdateLoop", "init", "data", "item", "Achievement", "x", "gameLoop", "validateAchievements", "listener", "level", "highlightHTMLElement", "achievement", "visible", "args", "__publicField", "_a", "validator", "match", "curValue", "valid", "modifiers", "Modifier", "modDB", "varElement", "innerHTML", "endIndex", "accordion", "header", "content", "mod", "componentNames", "initComponents", "config", "components", "key", "init", "saveComponents", "saveObj", "savePassives", "saveItems", "loadComponents", "loadPassives", "loadItems", "loadAsMap", "blob", "saveManager_default", "saveGame", "meta", "map", "saveObj", "__spreadValues", "savePlayer", "saveEnemy", "saveSkills", "saveStatistics", "saveComponents", "x", "loadGame", "config", "id", "loadPlayer", "loadEnemy", "loadSkills", "loadStatistics", "loadComponents", "setup", "loadMostRecentSave", "a", "b", "e", "gamePage", "queryHTML", "registerTabs", "tabCallback", "gameLoop", "Loop", "cachedConfig", "init", "config", "initComponents", "statistics_default", "saveGame", "setup", "createStatisticsElements", "isLocalHost", "setupDevHelpers", "loadGame", "v", "playerStats", "x", "import_ajv", "validateConfig", "Ajv", "configSchema_default", "newButton", "queryHTML", "loadButton", "deleteSaveButton", "id", "save", "saveManager_default", "entryListContainer", "configInfoContainer", "startConfigButton", "configEntryHandler", "ConfigEntryHandler", "startConfigListener", "x", "i", "arr", "y", "type", "populateEntryList", "init", "tryAutoLoad", "lastSave", "loadMostRecentSave", "startConfig", "__spreadProps", "__spreadValues", "entry", "config", "loadConfigAtUrl", "validateConfig", "btn", "showConfig", "success", "elements", "msg", "element", "url", "mainPageNavButton", "queryHTML", "registerTabs", "btn", "content", "tabCallback", "init"]
}
